{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/gregoriusbayuaji/house-price-prediction-using-regression-model?scriptVersionId=204349176\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"d375ecc3","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-10-30T16:59:36.723831Z","iopub.status.busy":"2024-10-30T16:59:36.722595Z","iopub.status.idle":"2024-10-30T16:59:38.488643Z","shell.execute_reply":"2024-10-30T16:59:38.487339Z"},"papermill":{"duration":1.800773,"end_time":"2024-10-30T16:59:38.492064","exception":false,"start_time":"2024-10-30T16:59:36.691291","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/melb-data/melb_data.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","#Importing the required libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import OneHotEncoder, LabelEncoder, StandardScaler, PolynomialFeatures\n","from sklearn.ensemble import RandomForestRegressor, RandomForestClassifier \n","from sklearn.linear_model import LinearRegression\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.neighbors import KNeighborsRegressor, KNeighborsClassifier\n","from xgboost import XGBRegressor\n","from sklearn.model_selection import GridSearchCV, RandomizedSearchCV\n","from sklearn.pipeline import Pipeline\n","from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n","\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"markdown","id":"dc2b4c7a","metadata":{"papermill":{"duration":0.023194,"end_time":"2024-10-30T16:59:38.539826","exception":false,"start_time":"2024-10-30T16:59:38.516632","status":"completed"},"tags":[]},"source":["If we want to buy or sell a house, we need to consider several aspects. Sometimes, we don't know how much effect these aspects have on the price of a house. That nescience may give us a bad decision. So, it's important for us if we can figure what aspects we need to know when we want to buy or sell a house."]},{"cell_type":"markdown","id":"ce53f978","metadata":{"papermill":{"duration":0.023375,"end_time":"2024-10-30T16:59:38.586658","exception":false,"start_time":"2024-10-30T16:59:38.563283","status":"completed"},"tags":[]},"source":["# Data Describing"]},{"cell_type":"markdown","id":"2a2a2106","metadata":{"papermill":{"duration":0.023138,"end_time":"2024-10-30T16:59:38.633312","exception":false,"start_time":"2024-10-30T16:59:38.610174","status":"completed"},"tags":[]},"source":["We took the data from Melbourne Housing Price. As you can see, there are so many variables about it. We're gonna choose what variables has the best effect on the house price."]},{"cell_type":"code","execution_count":2,"id":"0e95cb7b","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:38.682737Z","iopub.status.busy":"2024-10-30T16:59:38.68195Z","iopub.status.idle":"2024-10-30T16:59:38.85259Z","shell.execute_reply":"2024-10-30T16:59:38.851488Z"},"papermill":{"duration":0.198203,"end_time":"2024-10-30T16:59:38.855031","exception":false,"start_time":"2024-10-30T16:59:38.656828","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>...</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>CouncilArea</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Regionname</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Abbotsford</td>\n","      <td>85 Turner St</td>\n","      <td>2</td>\n","      <td>h</td>\n","      <td>1480000.0</td>\n","      <td>S</td>\n","      <td>Biggin</td>\n","      <td>3/12/2016</td>\n","      <td>2.5</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>202.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Yarra</td>\n","      <td>-37.7996</td>\n","      <td>144.9984</td>\n","      <td>Northern Metropolitan</td>\n","      <td>4019.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Abbotsford</td>\n","      <td>25 Bloomburg St</td>\n","      <td>2</td>\n","      <td>h</td>\n","      <td>1035000.0</td>\n","      <td>S</td>\n","      <td>Biggin</td>\n","      <td>4/02/2016</td>\n","      <td>2.5</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>156.0</td>\n","      <td>79.0</td>\n","      <td>1900.0</td>\n","      <td>Yarra</td>\n","      <td>-37.8079</td>\n","      <td>144.9934</td>\n","      <td>Northern Metropolitan</td>\n","      <td>4019.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>Abbotsford</td>\n","      <td>5 Charles St</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>1465000.0</td>\n","      <td>SP</td>\n","      <td>Biggin</td>\n","      <td>4/03/2017</td>\n","      <td>2.5</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>134.0</td>\n","      <td>150.0</td>\n","      <td>1900.0</td>\n","      <td>Yarra</td>\n","      <td>-37.8093</td>\n","      <td>144.9944</td>\n","      <td>Northern Metropolitan</td>\n","      <td>4019.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>Abbotsford</td>\n","      <td>40 Federation La</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>850000.0</td>\n","      <td>PI</td>\n","      <td>Biggin</td>\n","      <td>4/03/2017</td>\n","      <td>2.5</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>94.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Yarra</td>\n","      <td>-37.7969</td>\n","      <td>144.9969</td>\n","      <td>Northern Metropolitan</td>\n","      <td>4019.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6</td>\n","      <td>Abbotsford</td>\n","      <td>55a Park St</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1600000.0</td>\n","      <td>VB</td>\n","      <td>Nelson</td>\n","      <td>4/06/2016</td>\n","      <td>2.5</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>120.0</td>\n","      <td>142.0</td>\n","      <td>2014.0</td>\n","      <td>Yarra</td>\n","      <td>-37.8072</td>\n","      <td>144.9941</td>\n","      <td>Northern Metropolitan</td>\n","      <td>4019.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 22 columns</p>\n","</div>"],"text/plain":["   Unnamed: 0      Suburb           Address  Rooms Type      Price Method  \\\n","0           1  Abbotsford      85 Turner St      2    h  1480000.0      S   \n","1           2  Abbotsford   25 Bloomburg St      2    h  1035000.0      S   \n","2           4  Abbotsford      5 Charles St      3    h  1465000.0     SP   \n","3           5  Abbotsford  40 Federation La      3    h   850000.0     PI   \n","4           6  Abbotsford       55a Park St      4    h  1600000.0     VB   \n","\n","  SellerG       Date  Distance  ...  Bathroom  Car  Landsize  BuildingArea  \\\n","0  Biggin  3/12/2016       2.5  ...       1.0  1.0     202.0           NaN   \n","1  Biggin  4/02/2016       2.5  ...       1.0  0.0     156.0          79.0   \n","2  Biggin  4/03/2017       2.5  ...       2.0  0.0     134.0         150.0   \n","3  Biggin  4/03/2017       2.5  ...       2.0  1.0      94.0           NaN   \n","4  Nelson  4/06/2016       2.5  ...       1.0  2.0     120.0         142.0   \n","\n","   YearBuilt  CouncilArea  Lattitude Longtitude             Regionname  \\\n","0        NaN        Yarra   -37.7996   144.9984  Northern Metropolitan   \n","1     1900.0        Yarra   -37.8079   144.9934  Northern Metropolitan   \n","2     1900.0        Yarra   -37.8093   144.9944  Northern Metropolitan   \n","3        NaN        Yarra   -37.7969   144.9969  Northern Metropolitan   \n","4     2014.0        Yarra   -37.8072   144.9941  Northern Metropolitan   \n","\n","   Propertycount  \n","0         4019.0  \n","1         4019.0  \n","2         4019.0  \n","3         4019.0  \n","4         4019.0  \n","\n","[5 rows x 22 columns]"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["df = pd.read_csv('../input/melb-data/melb_data.csv')\n","df.head()"]},{"cell_type":"code","execution_count":3,"id":"cf78561f","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:38.904232Z","iopub.status.busy":"2024-10-30T16:59:38.903812Z","iopub.status.idle":"2024-10-30T16:59:38.940308Z","shell.execute_reply":"2024-10-30T16:59:38.938807Z"},"papermill":{"duration":0.064229,"end_time":"2024-10-30T16:59:38.943017","exception":false,"start_time":"2024-10-30T16:59:38.878788","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 18396 entries, 0 to 18395\n","Data columns (total 22 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   Unnamed: 0     18396 non-null  int64  \n"," 1   Suburb         18396 non-null  object \n"," 2   Address        18396 non-null  object \n"," 3   Rooms          18396 non-null  int64  \n"," 4   Type           18396 non-null  object \n"," 5   Price          18396 non-null  float64\n"," 6   Method         18396 non-null  object \n"," 7   SellerG        18396 non-null  object \n"," 8   Date           18396 non-null  object \n"," 9   Distance       18395 non-null  float64\n"," 10  Postcode       18395 non-null  float64\n"," 11  Bedroom2       14927 non-null  float64\n"," 12  Bathroom       14925 non-null  float64\n"," 13  Car            14820 non-null  float64\n"," 14  Landsize       13603 non-null  float64\n"," 15  BuildingArea   7762 non-null   float64\n"," 16  YearBuilt      8958 non-null   float64\n"," 17  CouncilArea    12233 non-null  object \n"," 18  Lattitude      15064 non-null  float64\n"," 19  Longtitude     15064 non-null  float64\n"," 20  Regionname     18395 non-null  object \n"," 21  Propertycount  18395 non-null  float64\n","dtypes: float64(12), int64(2), object(8)\n","memory usage: 3.1+ MB\n"]}],"source":["df.info()"]},{"cell_type":"code","execution_count":4,"id":"d70d5838","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:38.992434Z","iopub.status.busy":"2024-10-30T16:59:38.992051Z","iopub.status.idle":"2024-10-30T16:59:39.060268Z","shell.execute_reply":"2024-10-30T16:59:39.059041Z"},"papermill":{"duration":0.096234,"end_time":"2024-10-30T16:59:39.062879","exception":false,"start_time":"2024-10-30T16:59:38.966645","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Rooms</th>\n","      <th>Price</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>18396.000000</td>\n","      <td>18396.000000</td>\n","      <td>1.839600e+04</td>\n","      <td>18395.000000</td>\n","      <td>18395.000000</td>\n","      <td>14927.000000</td>\n","      <td>14925.000000</td>\n","      <td>14820.000000</td>\n","      <td>13603.000000</td>\n","      <td>7762.000000</td>\n","      <td>8958.000000</td>\n","      <td>15064.000000</td>\n","      <td>15064.000000</td>\n","      <td>18395.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>11826.787073</td>\n","      <td>2.935040</td>\n","      <td>1.056697e+06</td>\n","      <td>10.389986</td>\n","      <td>3107.140147</td>\n","      <td>2.913043</td>\n","      <td>1.538492</td>\n","      <td>1.615520</td>\n","      <td>558.116371</td>\n","      <td>151.220219</td>\n","      <td>1965.879996</td>\n","      <td>-37.809849</td>\n","      <td>144.996338</td>\n","      <td>7517.975265</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6800.710448</td>\n","      <td>0.958202</td>\n","      <td>6.419217e+05</td>\n","      <td>6.009050</td>\n","      <td>95.000995</td>\n","      <td>0.964641</td>\n","      <td>0.689311</td>\n","      <td>0.955916</td>\n","      <td>3987.326586</td>\n","      <td>519.188596</td>\n","      <td>37.013261</td>\n","      <td>0.081152</td>\n","      <td>0.106375</td>\n","      <td>4488.416599</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>8.500000e+04</td>\n","      <td>0.000000</td>\n","      <td>3000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1196.000000</td>\n","      <td>-38.182550</td>\n","      <td>144.431810</td>\n","      <td>249.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5936.750000</td>\n","      <td>2.000000</td>\n","      <td>6.330000e+05</td>\n","      <td>6.300000</td>\n","      <td>3046.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>176.500000</td>\n","      <td>93.000000</td>\n","      <td>1950.000000</td>\n","      <td>-37.858100</td>\n","      <td>144.931193</td>\n","      <td>4294.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>11820.500000</td>\n","      <td>3.000000</td>\n","      <td>8.800000e+05</td>\n","      <td>9.700000</td>\n","      <td>3085.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>440.000000</td>\n","      <td>126.000000</td>\n","      <td>1970.000000</td>\n","      <td>-37.803625</td>\n","      <td>145.000920</td>\n","      <td>6567.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>17734.250000</td>\n","      <td>3.000000</td>\n","      <td>1.302000e+06</td>\n","      <td>13.300000</td>\n","      <td>3149.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>651.000000</td>\n","      <td>174.000000</td>\n","      <td>2000.000000</td>\n","      <td>-37.756270</td>\n","      <td>145.060000</td>\n","      <td>10331.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>23546.000000</td>\n","      <td>12.000000</td>\n","      <td>9.000000e+06</td>\n","      <td>48.100000</td>\n","      <td>3978.000000</td>\n","      <td>20.000000</td>\n","      <td>8.000000</td>\n","      <td>10.000000</td>\n","      <td>433014.000000</td>\n","      <td>44515.000000</td>\n","      <td>2018.000000</td>\n","      <td>-37.408530</td>\n","      <td>145.526350</td>\n","      <td>21650.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Unnamed: 0         Rooms         Price      Distance      Postcode  \\\n","count  18396.000000  18396.000000  1.839600e+04  18395.000000  18395.000000   \n","mean   11826.787073      2.935040  1.056697e+06     10.389986   3107.140147   \n","std     6800.710448      0.958202  6.419217e+05      6.009050     95.000995   \n","min        1.000000      1.000000  8.500000e+04      0.000000   3000.000000   \n","25%     5936.750000      2.000000  6.330000e+05      6.300000   3046.000000   \n","50%    11820.500000      3.000000  8.800000e+05      9.700000   3085.000000   \n","75%    17734.250000      3.000000  1.302000e+06     13.300000   3149.000000   \n","max    23546.000000     12.000000  9.000000e+06     48.100000   3978.000000   \n","\n","           Bedroom2      Bathroom           Car       Landsize  BuildingArea  \\\n","count  14927.000000  14925.000000  14820.000000   13603.000000   7762.000000   \n","mean       2.913043      1.538492      1.615520     558.116371    151.220219   \n","std        0.964641      0.689311      0.955916    3987.326586    519.188596   \n","min        0.000000      0.000000      0.000000       0.000000      0.000000   \n","25%        2.000000      1.000000      1.000000     176.500000     93.000000   \n","50%        3.000000      1.000000      2.000000     440.000000    126.000000   \n","75%        3.000000      2.000000      2.000000     651.000000    174.000000   \n","max       20.000000      8.000000     10.000000  433014.000000  44515.000000   \n","\n","         YearBuilt     Lattitude    Longtitude  Propertycount  \n","count  8958.000000  15064.000000  15064.000000   18395.000000  \n","mean   1965.879996    -37.809849    144.996338    7517.975265  \n","std      37.013261      0.081152      0.106375    4488.416599  \n","min    1196.000000    -38.182550    144.431810     249.000000  \n","25%    1950.000000    -37.858100    144.931193    4294.000000  \n","50%    1970.000000    -37.803625    145.000920    6567.000000  \n","75%    2000.000000    -37.756270    145.060000   10331.000000  \n","max    2018.000000    -37.408530    145.526350   21650.000000  "]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["df.describe()"]},{"cell_type":"markdown","id":"f2b3b218","metadata":{"papermill":{"duration":0.023816,"end_time":"2024-10-30T16:59:39.110925","exception":false,"start_time":"2024-10-30T16:59:39.087109","status":"completed"},"tags":[]},"source":["## Notes on Specific Variables\n","\n","1. Rooms: Number of rooms in every house\n","2. Price: Price in Australian Dollars\n","3. Method: selling method of the house\n","    - S - property sold\n","    - SP - property sold prior\n","    - PI - property passed in\n","    - PN - sold prior not disclosed\n","    - SN - sold not disclosed\n","    - NB - no bid\n","    - VB - vendor bid\n","    - W - withdrawn prior to auction\n","    - SA - sold after auction\n","    - SS - sold after auction price not disclosed\n","    - N/A - price or highest bid not available.\n","4. Type: House type\n","    - br - bedroom(s)\n","    - h - house,cottage,villa, semi,terrace\n","    - u - unit, duplex\n","    - t - townhouse\n","    - dev site - development site\n","    - o res - other residential.\n","5. SellerG: Real Estate Agent\n","6. Date: Sale date\n","7. Distance: Distance from CBD\n","8. Regionname: General Region (West, North West, North, North East, etc)\n","9. Propertycount: Number of properties that exist in the suburb.\n","10. Bedroom2 : Scraped # of Bedrooms (from different source)\n","11. Bathroom: Number of Bathrooms\n","12. Car: Number of carspots\n","13. Landsize: Land Size\n","14. BuildingArea: Building Size\n","15. CouncilArea: Governing council for the area"]},{"cell_type":"markdown","id":"87e034ef","metadata":{"papermill":{"duration":0.023698,"end_time":"2024-10-30T16:59:39.158616","exception":false,"start_time":"2024-10-30T16:59:39.134918","status":"completed"},"tags":[]},"source":["# Handling Missing Values"]},{"cell_type":"code","execution_count":5,"id":"0685ed30","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:39.209121Z","iopub.status.busy":"2024-10-30T16:59:39.208281Z","iopub.status.idle":"2024-10-30T16:59:39.226096Z","shell.execute_reply":"2024-10-30T16:59:39.224897Z"},"papermill":{"duration":0.045913,"end_time":"2024-10-30T16:59:39.228594","exception":false,"start_time":"2024-10-30T16:59:39.182681","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Unnamed: 0           0\n","Suburb               0\n","Address              0\n","Rooms                0\n","Type                 0\n","Price                0\n","Method               0\n","SellerG              0\n","Date                 0\n","Distance             1\n","Postcode             1\n","Bedroom2          3469\n","Bathroom          3471\n","Car               3576\n","Landsize          4793\n","BuildingArea     10634\n","YearBuilt         9438\n","CouncilArea       6163\n","Lattitude         3332\n","Longtitude        3332\n","Regionname           1\n","Propertycount        1\n","dtype: int64"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["df.isnull().sum()"]},{"cell_type":"markdown","id":"57008483","metadata":{"papermill":{"duration":0.02456,"end_time":"2024-10-30T16:59:39.277365","exception":false,"start_time":"2024-10-30T16:59:39.252805","status":"completed"},"tags":[]},"source":["From the list above we can see that there are so many missing values. We will handle it one by one"]},{"cell_type":"markdown","id":"4dc34806","metadata":{"papermill":{"duration":0.023855,"end_time":"2024-10-30T16:59:39.325305","exception":false,"start_time":"2024-10-30T16:59:39.30145","status":"completed"},"tags":[]},"source":["## 1. Distance, Postcode, Region Name, and Property Count\n","\n","Because it has only 1 null values, we can just delete the row."]},{"cell_type":"code","execution_count":6,"id":"570ec86f","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:39.375031Z","iopub.status.busy":"2024-10-30T16:59:39.374647Z","iopub.status.idle":"2024-10-30T16:59:39.401084Z","shell.execute_reply":"2024-10-30T16:59:39.400047Z"},"papermill":{"duration":0.054208,"end_time":"2024-10-30T16:59:39.403577","exception":false,"start_time":"2024-10-30T16:59:39.349369","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Unnamed: 0           0\n","Suburb               0\n","Address              0\n","Rooms                0\n","Type                 0\n","Price                0\n","Method               0\n","SellerG              0\n","Date                 0\n","Distance             0\n","Postcode             0\n","Bedroom2          3468\n","Bathroom          3470\n","Car               3575\n","Landsize          4792\n","BuildingArea     10633\n","YearBuilt         9437\n","CouncilArea       6162\n","Lattitude         3331\n","Longtitude        3331\n","Regionname           0\n","Propertycount        0\n","dtype: int64"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["# Drop all null value in 'Distance', 'Postcode', 'Regionname', and 'Propertycount' \n","df.dropna(subset=['Distance', 'Postcode', 'Regionname', 'Propertycount'], inplace=True)\n","df.isnull().sum()"]},{"cell_type":"markdown","id":"a1ab89cc","metadata":{"papermill":{"duration":0.024249,"end_time":"2024-10-30T16:59:39.452641","exception":false,"start_time":"2024-10-30T16:59:39.428392","status":"completed"},"tags":[]},"source":["Other column has more than 10% of null values, so we cannot just delete it. We need to analyze them."]},{"cell_type":"markdown","id":"9ee9f39d","metadata":{"papermill":{"duration":0.024358,"end_time":"2024-10-30T16:59:39.501418","exception":false,"start_time":"2024-10-30T16:59:39.47706","status":"completed"},"tags":[]},"source":["## 2. Lattitude and Longtitude\n","\n","Let's start with the location, Lattitude and Longitude. See the rows when lattitude and longitude is null."]},{"cell_type":"code","execution_count":7,"id":"e33f5156","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:39.553443Z","iopub.status.busy":"2024-10-30T16:59:39.55302Z","iopub.status.idle":"2024-10-30T16:59:39.56795Z","shell.execute_reply":"2024-10-30T16:59:39.566706Z"},"papermill":{"duration":0.044,"end_time":"2024-10-30T16:59:39.570554","exception":false,"start_time":"2024-10-30T16:59:39.526554","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Unnamed: 0          0\n","Suburb              0\n","Address             0\n","Rooms               0\n","Type                0\n","Price               0\n","Method              0\n","SellerG             0\n","Date                0\n","Distance            0\n","Postcode            0\n","Bedroom2         3309\n","Bathroom         3309\n","Car              3309\n","Landsize         3309\n","BuildingArea     3322\n","YearBuilt        3323\n","CouncilArea      3309\n","Lattitude        3331\n","Longtitude       3331\n","Regionname          0\n","Propertycount       0\n","dtype: int64"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["# Create dataframe where 'Lattitude' column is null\n","df_null_latitude = df[df['Lattitude'].isnull()]\n","\n","# Sum null values in other columns\n","df_null_latitude.isnull().sum()"]},{"cell_type":"markdown","id":"26989283","metadata":{"papermill":{"duration":0.024326,"end_time":"2024-10-30T16:59:39.619574","exception":false,"start_time":"2024-10-30T16:59:39.595248","status":"completed"},"tags":[]},"source":["It shows that the null value number of the 'Bedroom2', 'Bathroom', 'Car', 'Landsize', 'BuildingArea', 'YearBuild', and 'CouncilArea' columns has almost the same number as the null value of the 'Lattitude' and 'Longtitude' columns. That means almost all houses have no house specification data when the lattitude and longitude data are null. So, we can delete them when they are all null"]},{"cell_type":"code","execution_count":8,"id":"23c1537b","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:39.677393Z","iopub.status.busy":"2024-10-30T16:59:39.676212Z","iopub.status.idle":"2024-10-30T16:59:39.742857Z","shell.execute_reply":"2024-10-30T16:59:39.741548Z"},"papermill":{"duration":0.101175,"end_time":"2024-10-30T16:59:39.74557","exception":false,"start_time":"2024-10-30T16:59:39.644395","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>...</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>CouncilArea</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Regionname</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019</th>\n","      <td>2572</td>\n","      <td>Burwood</td>\n","      <td>23 Monica St</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>990000.0</td>\n","      <td>VB</td>\n","      <td>Fletchers</td>\n","      <td>17/09/2016</td>\n","      <td>11.7</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>263.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Whitehorse</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Southern Metropolitan</td>\n","      <td>5678.0</td>\n","    </tr>\n","    <tr>\n","      <th>2507</th>\n","      <td>3257</td>\n","      <td>Clifton Hill</td>\n","      <td>3/268 Alexandra Pde E</td>\n","      <td>1</td>\n","      <td>u</td>\n","      <td>363000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>27/06/2016</td>\n","      <td>3.4</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Yarra</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Northern Metropolitan</td>\n","      <td>2954.0</td>\n","    </tr>\n","    <tr>\n","      <th>3461</th>\n","      <td>4485</td>\n","      <td>Footscray</td>\n","      <td>483 Barkly St</td>\n","      <td>3</td>\n","      <td>t</td>\n","      <td>781000.0</td>\n","      <td>S</td>\n","      <td>Jas</td>\n","      <td>27/11/2016</td>\n","      <td>6.4</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>98.0</td>\n","      <td>169.0</td>\n","      <td>2015.0</td>\n","      <td>Maribyrnong</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Western Metropolitan</td>\n","      <td>7570.0</td>\n","    </tr>\n","    <tr>\n","      <th>3987</th>\n","      <td>5170</td>\n","      <td>Hampton East</td>\n","      <td>7 Seafoam St</td>\n","      <td>4</td>\n","      <td>t</td>\n","      <td>1185000.0</td>\n","      <td>S</td>\n","      <td>RT</td>\n","      <td>28/05/2016</td>\n","      <td>14.5</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>300.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bayside</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Southern Metropolitan</td>\n","      <td>2356.0</td>\n","    </tr>\n","    <tr>\n","      <th>8371</th>\n","      <td>10745</td>\n","      <td>Williamstown North</td>\n","      <td>4/9 Adeline St</td>\n","      <td>1</td>\n","      <td>u</td>\n","      <td>355000.0</td>\n","      <td>S</td>\n","      <td>Sweeney</td>\n","      <td>27/11/2016</td>\n","      <td>8.9</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>46.0</td>\n","      <td>46.0</td>\n","      <td>NaN</td>\n","      <td>Hobsons Bay</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Western Metropolitan</td>\n","      <td>802.0</td>\n","    </tr>\n","    <tr>\n","      <th>10269</th>\n","      <td>13223</td>\n","      <td>Melbourne</td>\n","      <td>1913/228 Abeckett St</td>\n","      <td>3</td>\n","      <td>u</td>\n","      <td>1175000.0</td>\n","      <td>PI</td>\n","      <td>Icon</td>\n","      <td>29/04/2017</td>\n","      <td>2.8</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Melbourne</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Northern Metropolitan</td>\n","      <td>17496.0</td>\n","    </tr>\n","    <tr>\n","      <th>10902</th>\n","      <td>14008</td>\n","      <td>Brooklyn</td>\n","      <td>9 Richards Ct</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>750000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>20/05/2017</td>\n","      <td>10.9</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>667.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Hobsons Bay</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Western Metropolitan</td>\n","      <td>962.0</td>\n","    </tr>\n","    <tr>\n","      <th>10996</th>\n","      <td>14132</td>\n","      <td>North Melbourne</td>\n","      <td>13/201 Abbotsford St</td>\n","      <td>2</td>\n","      <td>t</td>\n","      <td>755000.0</td>\n","      <td>PI</td>\n","      <td>Nelson</td>\n","      <td>29/04/2017</td>\n","      <td>2.3</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1537.0</td>\n","      <td>81.0</td>\n","      <td>1890.0</td>\n","      <td>Melbourne</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Northern Metropolitan</td>\n","      <td>6821.0</td>\n","    </tr>\n","    <tr>\n","      <th>11003</th>\n","      <td>14139</td>\n","      <td>Oakleigh South</td>\n","      <td>4 Druitt St</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1205500.0</td>\n","      <td>S</td>\n","      <td>Woodards</td>\n","      <td>22/04/2017</td>\n","      <td>14.7</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>553.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Kingston</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>3692.0</td>\n","    </tr>\n","    <tr>\n","      <th>11005</th>\n","      <td>14142</td>\n","      <td>Oakleigh South</td>\n","      <td>298 Warrigal Rd</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>799999.0</td>\n","      <td>S</td>\n","      <td>Woodards</td>\n","      <td>29/04/2017</td>\n","      <td>14.7</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>590.0</td>\n","      <td>135.0</td>\n","      <td>1960.0</td>\n","      <td>Monash</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>3692.0</td>\n","    </tr>\n","    <tr>\n","      <th>11006</th>\n","      <td>14143</td>\n","      <td>Oakleigh South</td>\n","      <td>11 Yarra Ct</td>\n","      <td>5</td>\n","      <td>h</td>\n","      <td>1200000.0</td>\n","      <td>PI</td>\n","      <td>Buxton</td>\n","      <td>29/04/2017</td>\n","      <td>14.7</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>532.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Kingston</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>3692.0</td>\n","    </tr>\n","    <tr>\n","      <th>11656</th>\n","      <td>14976</td>\n","      <td>Essendon</td>\n","      <td>9 Washington St</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>1520000.0</td>\n","      <td>S</td>\n","      <td>Brad</td>\n","      <td>3/06/2017</td>\n","      <td>7.5</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>321.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Moonee Valley</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Western Metropolitan</td>\n","      <td>9264.0</td>\n","    </tr>\n","    <tr>\n","      <th>11881</th>\n","      <td>15278</td>\n","      <td>Seddon</td>\n","      <td>60 Station Rd</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1500000.0</td>\n","      <td>SP</td>\n","      <td>Sweeney</td>\n","      <td>3/06/2017</td>\n","      <td>5.1</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>169.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Maribyrnong</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Western Metropolitan</td>\n","      <td>2417.0</td>\n","    </tr>\n","    <tr>\n","      <th>12112</th>\n","      <td>15561</td>\n","      <td>Croydon</td>\n","      <td>3 Silvergrass Ct</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>630000.0</td>\n","      <td>S</td>\n","      <td>McGrath</td>\n","      <td>17/06/2017</td>\n","      <td>23.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>319.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Maroondah</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Eastern Metropolitan</td>\n","      <td>11925.0</td>\n","    </tr>\n","    <tr>\n","      <th>12704</th>\n","      <td>16358</td>\n","      <td>Kensington</td>\n","      <td>201/102 Rankins Rd</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>876000.0</td>\n","      <td>S</td>\n","      <td>Rendina</td>\n","      <td>24/06/2017</td>\n","      <td>3.4</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>74.0</td>\n","      <td>2015.0</td>\n","      <td>Melbourne</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Northern Metropolitan</td>\n","      <td>5263.0</td>\n","    </tr>\n","    <tr>\n","      <th>12864</th>\n","      <td>16564</td>\n","      <td>Strathmore</td>\n","      <td>48 Lebanon St</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>950000.0</td>\n","      <td>PI</td>\n","      <td>Considine</td>\n","      <td>24/06/2017</td>\n","      <td>8.2</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>216.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Moonee Valley</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Western Metropolitan</td>\n","      <td>3284.0</td>\n","    </tr>\n","    <tr>\n","      <th>13702</th>\n","      <td>17616</td>\n","      <td>Kensington</td>\n","      <td>109/102 Rankins Rd</td>\n","      <td>1</td>\n","      <td>u</td>\n","      <td>410000.0</td>\n","      <td>PI</td>\n","      <td>Rendina</td>\n","      <td>8/07/2017</td>\n","      <td>3.4</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1053.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Melbourne</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Northern Metropolitan</td>\n","      <td>5263.0</td>\n","    </tr>\n","    <tr>\n","      <th>13706</th>\n","      <td>17620</td>\n","      <td>Keysborough</td>\n","      <td>19 Denmark Rd</td>\n","      <td>5</td>\n","      <td>h</td>\n","      <td>1100000.0</td>\n","      <td>PI</td>\n","      <td>VicHomes</td>\n","      <td>8/07/2017</td>\n","      <td>25.2</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>522.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Greater Dandenong</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>8459.0</td>\n","    </tr>\n","    <tr>\n","      <th>14131</th>\n","      <td>18141</td>\n","      <td>Lalor</td>\n","      <td>83 Rotino Cr</td>\n","      <td>3</td>\n","      <td>t</td>\n","      <td>463000.0</td>\n","      <td>S</td>\n","      <td>HAR</td>\n","      <td>12/08/2017</td>\n","      <td>16.3</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>114.0</td>\n","      <td>88.0</td>\n","      <td>2014.0</td>\n","      <td>Whittlesea</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Northern Metropolitan</td>\n","      <td>8279.0</td>\n","    </tr>\n","    <tr>\n","      <th>14515</th>\n","      <td>18614</td>\n","      <td>Mickleham</td>\n","      <td>17 Primavera Dr</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>610000.0</td>\n","      <td>S</td>\n","      <td>Ray</td>\n","      <td>15/07/2017</td>\n","      <td>20.6</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>490.0</td>\n","      <td>208.0</td>\n","      <td>2015.0</td>\n","      <td>Hume</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Northern Metropolitan</td>\n","      <td>1158.0</td>\n","    </tr>\n","    <tr>\n","      <th>14655</th>\n","      <td>18793</td>\n","      <td>Wollert</td>\n","      <td>13 Strathalbyn Ch</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>631000.0</td>\n","      <td>PI</td>\n","      <td>hockingstuart</td>\n","      <td>15/07/2017</td>\n","      <td>25.5</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>400.0</td>\n","      <td>184.0</td>\n","      <td>2015.0</td>\n","      <td>Whittlesea</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Northern Metropolitan</td>\n","      <td>2940.0</td>\n","    </tr>\n","    <tr>\n","      <th>14813</th>\n","      <td>18995</td>\n","      <td>Greenvale</td>\n","      <td>40 Frontier Av</td>\n","      <td>3</td>\n","      <td>t</td>\n","      <td>470000.0</td>\n","      <td>SP</td>\n","      <td>Barry</td>\n","      <td>22/07/2017</td>\n","      <td>20.4</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>201.0</td>\n","      <td>133.0</td>\n","      <td>2016.0</td>\n","      <td>Hume</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Northern Metropolitan</td>\n","      <td>4864.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>22 rows Ã— 22 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0              Suburb                Address  Rooms Type  \\\n","2019         2572             Burwood           23 Monica St      3    h   \n","2507         3257        Clifton Hill  3/268 Alexandra Pde E      1    u   \n","3461         4485           Footscray          483 Barkly St      3    t   \n","3987         5170        Hampton East           7 Seafoam St      4    t   \n","8371        10745  Williamstown North         4/9 Adeline St      1    u   \n","10269       13223           Melbourne   1913/228 Abeckett St      3    u   \n","10902       14008            Brooklyn          9 Richards Ct      3    h   \n","10996       14132     North Melbourne   13/201 Abbotsford St      2    t   \n","11003       14139      Oakleigh South            4 Druitt St      4    h   \n","11005       14142      Oakleigh South        298 Warrigal Rd      3    h   \n","11006       14143      Oakleigh South            11 Yarra Ct      5    h   \n","11656       14976            Essendon        9 Washington St      3    h   \n","11881       15278              Seddon          60 Station Rd      4    h   \n","12112       15561             Croydon       3 Silvergrass Ct      3    h   \n","12704       16358          Kensington     201/102 Rankins Rd      2    u   \n","12864       16564          Strathmore          48 Lebanon St      3    h   \n","13702       17616          Kensington     109/102 Rankins Rd      1    u   \n","13706       17620         Keysborough          19 Denmark Rd      5    h   \n","14131       18141               Lalor           83 Rotino Cr      3    t   \n","14515       18614           Mickleham        17 Primavera Dr      4    h   \n","14655       18793             Wollert      13 Strathalbyn Ch      4    h   \n","14813       18995           Greenvale         40 Frontier Av      3    t   \n","\n","           Price Method        SellerG        Date  Distance  ...  Bathroom  \\\n","2019    990000.0     VB      Fletchers  17/09/2016      11.7  ...       2.0   \n","2507    363000.0      S  hockingstuart  27/06/2016       3.4  ...       1.0   \n","3461    781000.0      S            Jas  27/11/2016       6.4  ...       2.0   \n","3987   1185000.0      S             RT  28/05/2016      14.5  ...       3.0   \n","8371    355000.0      S        Sweeney  27/11/2016       8.9  ...       1.0   \n","10269  1175000.0     PI           Icon  29/04/2017       2.8  ...       3.0   \n","10902   750000.0      S  hockingstuart  20/05/2017      10.9  ...       1.0   \n","10996   755000.0     PI         Nelson  29/04/2017       2.3  ...       1.0   \n","11003  1205500.0      S       Woodards  22/04/2017      14.7  ...       2.0   \n","11005   799999.0      S       Woodards  29/04/2017      14.7  ...       2.0   \n","11006  1200000.0     PI         Buxton  29/04/2017      14.7  ...       2.0   \n","11656  1520000.0      S           Brad   3/06/2017       7.5  ...       2.0   \n","11881  1500000.0     SP        Sweeney   3/06/2017       5.1  ...       3.0   \n","12112   630000.0      S        McGrath  17/06/2017      23.0  ...       2.0   \n","12704   876000.0      S        Rendina  24/06/2017       3.4  ...       2.0   \n","12864   950000.0     PI      Considine  24/06/2017       8.2  ...       2.0   \n","13702   410000.0     PI        Rendina   8/07/2017       3.4  ...       1.0   \n","13706  1100000.0     PI       VicHomes   8/07/2017      25.2  ...       3.0   \n","14131   463000.0      S            HAR  12/08/2017      16.3  ...       2.0   \n","14515   610000.0      S            Ray  15/07/2017      20.6  ...       2.0   \n","14655   631000.0     PI  hockingstuart  15/07/2017      25.5  ...       2.0   \n","14813   470000.0     SP          Barry  22/07/2017      20.4  ...       2.0   \n","\n","       Car  Landsize  BuildingArea  YearBuilt        CouncilArea  Lattitude  \\\n","2019   2.0     263.0           NaN        NaN         Whitehorse        NaN   \n","2507   1.0       0.0           NaN        NaN              Yarra        NaN   \n","3461   2.0      98.0         169.0     2015.0        Maribyrnong        NaN   \n","3987   1.0     300.0           NaN        NaN            Bayside        NaN   \n","8371   1.0      46.0          46.0        NaN        Hobsons Bay        NaN   \n","10269  2.0       0.0           NaN        NaN          Melbourne        NaN   \n","10902  2.0     667.0           NaN        NaN        Hobsons Bay        NaN   \n","10996  1.0    1537.0          81.0     1890.0          Melbourne        NaN   \n","11003  2.0     553.0           NaN        NaN           Kingston        NaN   \n","11005  4.0     590.0         135.0     1960.0             Monash        NaN   \n","11006  2.0     532.0           NaN        NaN           Kingston        NaN   \n","11656  1.0     321.0           NaN        NaN      Moonee Valley        NaN   \n","11881  2.0     169.0           NaN        NaN        Maribyrnong        NaN   \n","12112  2.0     319.0           NaN        NaN          Maroondah        NaN   \n","12704  2.0       0.0          74.0     2015.0          Melbourne        NaN   \n","12864  2.0     216.0           NaN        NaN      Moonee Valley        NaN   \n","13702  1.0    1053.0           NaN        NaN          Melbourne        NaN   \n","13706  2.0     522.0           NaN        NaN  Greater Dandenong        NaN   \n","14131  2.0     114.0          88.0     2014.0         Whittlesea        NaN   \n","14515  2.0     490.0         208.0     2015.0               Hume        NaN   \n","14655  2.0     400.0         184.0     2015.0         Whittlesea        NaN   \n","14813  2.0     201.0         133.0     2016.0               Hume        NaN   \n","\n","      Longtitude                  Regionname  Propertycount  \n","2019         NaN       Southern Metropolitan         5678.0  \n","2507         NaN       Northern Metropolitan         2954.0  \n","3461         NaN        Western Metropolitan         7570.0  \n","3987         NaN       Southern Metropolitan         2356.0  \n","8371         NaN        Western Metropolitan          802.0  \n","10269        NaN       Northern Metropolitan        17496.0  \n","10902        NaN        Western Metropolitan          962.0  \n","10996        NaN       Northern Metropolitan         6821.0  \n","11003        NaN  South-Eastern Metropolitan         3692.0  \n","11005        NaN  South-Eastern Metropolitan         3692.0  \n","11006        NaN  South-Eastern Metropolitan         3692.0  \n","11656        NaN        Western Metropolitan         9264.0  \n","11881        NaN        Western Metropolitan         2417.0  \n","12112        NaN        Eastern Metropolitan        11925.0  \n","12704        NaN       Northern Metropolitan         5263.0  \n","12864        NaN        Western Metropolitan         3284.0  \n","13702        NaN       Northern Metropolitan         5263.0  \n","13706        NaN  South-Eastern Metropolitan         8459.0  \n","14131        NaN       Northern Metropolitan         8279.0  \n","14515        NaN       Northern Metropolitan         1158.0  \n","14655        NaN       Northern Metropolitan         2940.0  \n","14813        NaN       Northern Metropolitan         4864.0  \n","\n","[22 rows x 22 columns]"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["# Delete null value on all of the selected columns\n","df.dropna(subset=['Bathroom', 'Bedroom2', 'Car', 'Landsize', 'BuildingArea', 'YearBuilt', 'CouncilArea', 'Lattitude', 'Longtitude'], how='all', inplace=True)\n","\n","# Check the result when 'Longtitude' value is null\n","df_null_longtitude = df[df['Longtitude'].isnull()]\n","df_null_longtitude"]},{"cell_type":"markdown","id":"3bebabf7","metadata":{"papermill":{"duration":0.02847,"end_time":"2024-10-30T16:59:39.804525","exception":false,"start_time":"2024-10-30T16:59:39.776055","status":"completed"},"tags":[]},"source":["Because not all of the other column or other house specification coulmns are null, we can't just delete the data. We need to find the value of 'Lattitude' and 'Longtitude' column. We find the value by search for the average 'Lattitude' and 'Longtitude' value of every 'CouncilArea'"]},{"cell_type":"code","execution_count":9,"id":"e89bce7a","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:39.861781Z","iopub.status.busy":"2024-10-30T16:59:39.860891Z","iopub.status.idle":"2024-10-30T16:59:39.880259Z","shell.execute_reply":"2024-10-30T16:59:39.879143Z"},"papermill":{"duration":0.050435,"end_time":"2024-10-30T16:59:39.883057","exception":false,"start_time":"2024-10-30T16:59:39.832622","status":"completed"},"tags":[]},"outputs":[],"source":["# Calculate average Lattitude and Longtitude for each CouncilArea\n","average_coords = df.groupby('CouncilArea')[['Lattitude', 'Longtitude']].transform('mean')\n","\n","# Fill NaN values in 'Lattitude' and 'Longtitude' columns with the average for each CouncilArea\n","df['Lattitude'] = df['Lattitude'].fillna(average_coords['Lattitude'])\n","df['Longtitude'] = df['Longtitude'].fillna(average_coords['Longtitude'])"]},{"cell_type":"code","execution_count":10,"id":"990b4f22","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:39.942311Z","iopub.status.busy":"2024-10-30T16:59:39.941893Z","iopub.status.idle":"2024-10-30T16:59:39.959421Z","shell.execute_reply":"2024-10-30T16:59:39.958178Z"},"papermill":{"duration":0.051442,"end_time":"2024-10-30T16:59:39.961954","exception":false,"start_time":"2024-10-30T16:59:39.910512","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Unnamed: 0          0\n","Suburb              0\n","Address             0\n","Rooms               0\n","Type                0\n","Price               0\n","Method              0\n","SellerG             0\n","Date                0\n","Distance            0\n","Postcode            0\n","Bedroom2          159\n","Bathroom          161\n","Car               266\n","Landsize         1483\n","BuildingArea     7324\n","YearBuilt        6128\n","CouncilArea      2853\n","Lattitude           0\n","Longtitude          0\n","Regionname          0\n","Propertycount       0\n","dtype: int64"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["# Check the null values\n","df.isnull().sum()"]},{"cell_type":"markdown","id":"6f0c212b","metadata":{"papermill":{"duration":0.025957,"end_time":"2024-10-30T16:59:40.014387","exception":false,"start_time":"2024-10-30T16:59:39.98843","status":"completed"},"tags":[]},"source":["## 3. Cars"]},{"cell_type":"code","execution_count":11,"id":"87fa66ef","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:40.069412Z","iopub.status.busy":"2024-10-30T16:59:40.068998Z","iopub.status.idle":"2024-10-30T16:59:40.081149Z","shell.execute_reply":"2024-10-30T16:59:40.079852Z"},"papermill":{"duration":0.042322,"end_time":"2024-10-30T16:59:40.083664","exception":false,"start_time":"2024-10-30T16:59:40.041342","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Unnamed: 0         0\n","Suburb             0\n","Address            0\n","Rooms              0\n","Type               0\n","Price              0\n","Method             0\n","SellerG            0\n","Date               0\n","Distance           0\n","Postcode           0\n","Bedroom2         159\n","Bathroom         161\n","Car              266\n","Landsize         203\n","BuildingArea     222\n","YearBuilt        217\n","CouncilArea      266\n","Lattitude          0\n","Longtitude         0\n","Regionname         0\n","Propertycount      0\n","dtype: int64"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["# Create a dataframe where 'Car' column has null values\n","df_null_car = df[df['Car'].isnull()]\n","\n","# Show the dataframe\n","df_null_car.isnull().sum()"]},{"cell_type":"markdown","id":"53ae3f33","metadata":{"papermill":{"duration":0.036226,"end_time":"2024-10-30T16:59:40.154103","exception":false,"start_time":"2024-10-30T16:59:40.117877","status":"completed"},"tags":[]},"source":["From the data above we can see that the 'Bedroom2', 'Bathroom', 'Landsize', 'BuildingArea', 'YearBuilt', and 'CouncilArea' columns has only a little difference of null value number to the 'Car' column. That means we can also assume that most of the column has a null value when the 'Car' column is null, and because 'Car' column has the highest number of null value, we can just delete 'Car' column"]},{"cell_type":"code","execution_count":12,"id":"e609509b","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:40.215566Z","iopub.status.busy":"2024-10-30T16:59:40.214448Z","iopub.status.idle":"2024-10-30T16:59:40.225615Z","shell.execute_reply":"2024-10-30T16:59:40.22451Z"},"papermill":{"duration":0.042616,"end_time":"2024-10-30T16:59:40.22824","exception":false,"start_time":"2024-10-30T16:59:40.185624","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop the row with a null value at all of the selected columns\n","df.dropna(subset=['Car'], inplace=True)"]},{"cell_type":"code","execution_count":13,"id":"e2e5aa19","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:40.282965Z","iopub.status.busy":"2024-10-30T16:59:40.282565Z","iopub.status.idle":"2024-10-30T16:59:40.29993Z","shell.execute_reply":"2024-10-30T16:59:40.298726Z"},"papermill":{"duration":0.048264,"end_time":"2024-10-30T16:59:40.302431","exception":false,"start_time":"2024-10-30T16:59:40.254167","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Unnamed: 0          0\n","Suburb              0\n","Address             0\n","Rooms               0\n","Type                0\n","Price               0\n","Method              0\n","SellerG             0\n","Date                0\n","Distance            0\n","Postcode            0\n","Bedroom2            0\n","Bathroom            0\n","Car                 0\n","Landsize         1280\n","BuildingArea     7102\n","YearBuilt        5911\n","CouncilArea      2587\n","Lattitude           0\n","Longtitude          0\n","Regionname          0\n","Propertycount       0\n","dtype: int64"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["df.isnull().sum()"]},{"cell_type":"markdown","id":"ec08c540","metadata":{"papermill":{"duration":0.025422,"end_time":"2024-10-30T16:59:40.353869","exception":false,"start_time":"2024-10-30T16:59:40.328447","status":"completed"},"tags":[]},"source":["## 4. Landsize, BuildingArea, and YearBuilt\n","\n","We'll group the 'Landsize', 'BuildingArea', and 'YearBuilt' column because they are numerical columns and have more than 1,000 null values. So, we can't just delete the null values. We need to analyze it.\n","\n","Since we can't sure that there is no outlier between them, we need to check the outlier first "]},{"cell_type":"code","execution_count":14,"id":"ea1ec31d","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:40.407392Z","iopub.status.busy":"2024-10-30T16:59:40.406982Z","iopub.status.idle":"2024-10-30T16:59:40.655643Z","shell.execute_reply":"2024-10-30T16:59:40.654608Z"},"papermill":{"duration":0.278591,"end_time":"2024-10-30T16:59:40.658203","exception":false,"start_time":"2024-10-30T16:59:40.379612","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["# Create a scatter-plot to check the outlier\n","sns.scatterplot(data=df, x='Landsize', y='Price')\n","plt.show()"]},{"cell_type":"code","execution_count":15,"id":"c2827c15","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:40.715Z","iopub.status.busy":"2024-10-30T16:59:40.714592Z","iopub.status.idle":"2024-10-30T16:59:40.725563Z","shell.execute_reply":"2024-10-30T16:59:40.72442Z"},"papermill":{"duration":0.042509,"end_time":"2024-10-30T16:59:40.728176","exception":false,"start_time":"2024-10-30T16:59:40.685667","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop the outlier where the Landsize is more than 100,000 \n","df.drop(df[df['Landsize'] > 100000].index, inplace=True)"]},{"cell_type":"code","execution_count":16,"id":"a27ca214","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:40.7825Z","iopub.status.busy":"2024-10-30T16:59:40.782057Z","iopub.status.idle":"2024-10-30T16:59:40.974193Z","shell.execute_reply":"2024-10-30T16:59:40.972977Z"},"papermill":{"duration":0.222781,"end_time":"2024-10-30T16:59:40.977071","exception":false,"start_time":"2024-10-30T16:59:40.75429","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["# Create a scatter-plot to check the outlier\n","sns.scatterplot(data=df, x='BuildingArea', y='Price')\n","plt.show()"]},{"cell_type":"code","execution_count":17,"id":"90fd04ed","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:41.031911Z","iopub.status.busy":"2024-10-30T16:59:41.031042Z","iopub.status.idle":"2024-10-30T16:59:41.041911Z","shell.execute_reply":"2024-10-30T16:59:41.040803Z"},"papermill":{"duration":0.041203,"end_time":"2024-10-30T16:59:41.044611","exception":false,"start_time":"2024-10-30T16:59:41.003408","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop the outlier where BuildingArea is more than 10,000 \n","df.drop(df[df['BuildingArea'] > 10000].index, inplace=True)"]},{"cell_type":"code","execution_count":18,"id":"261d1ad8","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:41.100131Z","iopub.status.busy":"2024-10-30T16:59:41.099476Z","iopub.status.idle":"2024-10-30T16:59:41.30278Z","shell.execute_reply":"2024-10-30T16:59:41.30149Z"},"papermill":{"duration":0.234527,"end_time":"2024-10-30T16:59:41.305857","exception":false,"start_time":"2024-10-30T16:59:41.07133","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["# Create a scatter-plot to check the outlier\n","sns.scatterplot(data=df, x='YearBuilt', y='Price')\n","plt.show()"]},{"cell_type":"code","execution_count":19,"id":"c320c8ae","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:41.368742Z","iopub.status.busy":"2024-10-30T16:59:41.36771Z","iopub.status.idle":"2024-10-30T16:59:41.378336Z","shell.execute_reply":"2024-10-30T16:59:41.377151Z"},"papermill":{"duration":0.041435,"end_time":"2024-10-30T16:59:41.381029","exception":false,"start_time":"2024-10-30T16:59:41.339594","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop the outlier where the building was built before 1800 \n","df.drop(df[df['YearBuilt'] < 1800].index, inplace=True)"]},{"cell_type":"code","execution_count":20,"id":"6a3a4657","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:41.437089Z","iopub.status.busy":"2024-10-30T16:59:41.436079Z","iopub.status.idle":"2024-10-30T16:59:41.497346Z","shell.execute_reply":"2024-10-30T16:59:41.496251Z"},"papermill":{"duration":0.091835,"end_time":"2024-10-30T16:59:41.499709","exception":false,"start_time":"2024-10-30T16:59:41.407874","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Rooms</th>\n","      <th>Price</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>14817.000000</td>\n","      <td>14817.000000</td>\n","      <td>1.481700e+04</td>\n","      <td>14817.000000</td>\n","      <td>14817.000000</td>\n","      <td>14817.000000</td>\n","      <td>14817.000000</td>\n","      <td>14817.000000</td>\n","      <td>13537.000000</td>\n","      <td>7716.000000</td>\n","      <td>8908.000000</td>\n","      <td>14817.000000</td>\n","      <td>14817.000000</td>\n","      <td>14817.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>12042.422083</td>\n","      <td>2.936222</td>\n","      <td>1.065811e+06</td>\n","      <td>10.333867</td>\n","      <td>3107.118445</td>\n","      <td>2.914558</td>\n","      <td>1.540055</td>\n","      <td>1.615172</td>\n","      <td>522.612765</td>\n","      <td>145.680708</td>\n","      <td>1966.207791</td>\n","      <td>-37.809644</td>\n","      <td>144.996632</td>\n","      <td>7472.446987</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6835.451451</td>\n","      <td>0.956207</td>\n","      <td>6.386657e+05</td>\n","      <td>6.044263</td>\n","      <td>94.653081</td>\n","      <td>0.965098</td>\n","      <td>0.690028</td>\n","      <td>0.955394</td>\n","      <td>1415.315939</td>\n","      <td>126.548620</td>\n","      <td>35.928163</td>\n","      <td>0.081394</td>\n","      <td>0.106431</td>\n","      <td>4389.222794</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>8.500000e+04</td>\n","      <td>0.000000</td>\n","      <td>3000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1830.000000</td>\n","      <td>-38.182550</td>\n","      <td>144.431810</td>\n","      <td>249.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>6103.000000</td>\n","      <td>2.000000</td>\n","      <td>6.400000e+05</td>\n","      <td>6.200000</td>\n","      <td>3046.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>178.000000</td>\n","      <td>92.875000</td>\n","      <td>1950.000000</td>\n","      <td>-37.857900</td>\n","      <td>144.930300</td>\n","      <td>4380.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>12030.000000</td>\n","      <td>3.000000</td>\n","      <td>8.970000e+05</td>\n","      <td>9.400000</td>\n","      <td>3085.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>442.000000</td>\n","      <td>126.000000</td>\n","      <td>1970.000000</td>\n","      <td>-37.803200</td>\n","      <td>145.001400</td>\n","      <td>6567.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>18115.000000</td>\n","      <td>3.000000</td>\n","      <td>1.320000e+06</td>\n","      <td>13.100000</td>\n","      <td>3149.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>651.000000</td>\n","      <td>174.000000</td>\n","      <td>2000.000000</td>\n","      <td>-37.755500</td>\n","      <td>145.060600</td>\n","      <td>10331.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>23546.000000</td>\n","      <td>10.000000</td>\n","      <td>9.000000e+06</td>\n","      <td>48.100000</td>\n","      <td>3977.000000</td>\n","      <td>20.000000</td>\n","      <td>8.000000</td>\n","      <td>10.000000</td>\n","      <td>76000.000000</td>\n","      <td>6791.000000</td>\n","      <td>2018.000000</td>\n","      <td>-37.408530</td>\n","      <td>145.526350</td>\n","      <td>21650.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Unnamed: 0         Rooms         Price      Distance      Postcode  \\\n","count  14817.000000  14817.000000  1.481700e+04  14817.000000  14817.000000   \n","mean   12042.422083      2.936222  1.065811e+06     10.333867   3107.118445   \n","std     6835.451451      0.956207  6.386657e+05      6.044263     94.653081   \n","min        1.000000      1.000000  8.500000e+04      0.000000   3000.000000   \n","25%     6103.000000      2.000000  6.400000e+05      6.200000   3046.000000   \n","50%    12030.000000      3.000000  8.970000e+05      9.400000   3085.000000   \n","75%    18115.000000      3.000000  1.320000e+06     13.100000   3149.000000   \n","max    23546.000000     10.000000  9.000000e+06     48.100000   3977.000000   \n","\n","           Bedroom2      Bathroom           Car      Landsize  BuildingArea  \\\n","count  14817.000000  14817.000000  14817.000000  13537.000000   7716.000000   \n","mean       2.914558      1.540055      1.615172    522.612765    145.680708   \n","std        0.965098      0.690028      0.955394   1415.315939    126.548620   \n","min        0.000000      0.000000      0.000000      0.000000      0.000000   \n","25%        2.000000      1.000000      1.000000    178.000000     92.875000   \n","50%        3.000000      1.000000      2.000000    442.000000    126.000000   \n","75%        3.000000      2.000000      2.000000    651.000000    174.000000   \n","max       20.000000      8.000000     10.000000  76000.000000   6791.000000   \n","\n","         YearBuilt     Lattitude    Longtitude  Propertycount  \n","count  8908.000000  14817.000000  14817.000000   14817.000000  \n","mean   1966.207791    -37.809644    144.996632    7472.446987  \n","std      35.928163      0.081394      0.106431    4389.222794  \n","min    1830.000000    -38.182550    144.431810     249.000000  \n","25%    1950.000000    -37.857900    144.930300    4380.000000  \n","50%    1970.000000    -37.803200    145.001400    6567.000000  \n","75%    2000.000000    -37.755500    145.060600   10331.000000  \n","max    2018.000000    -37.408530    145.526350   21650.000000  "]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["df.describe()"]},{"cell_type":"markdown","id":"52f2b541","metadata":{"papermill":{"duration":0.02709,"end_time":"2024-10-30T16:59:41.554054","exception":false,"start_time":"2024-10-30T16:59:41.526964","status":"completed"},"tags":[]},"source":["Since there are still so much range between the maximum value and the mean value at 'Landsize' and 'BuildingArea' columns, that means we need to drop other outliers."]},{"cell_type":"code","execution_count":21,"id":"59e7129a","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:41.610683Z","iopub.status.busy":"2024-10-30T16:59:41.609734Z","iopub.status.idle":"2024-10-30T16:59:41.827287Z","shell.execute_reply":"2024-10-30T16:59:41.82617Z"},"papermill":{"duration":0.248746,"end_time":"2024-10-30T16:59:41.829909","exception":false,"start_time":"2024-10-30T16:59:41.581163","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["# Create a scatterplot to search for the outlier\n","sns.scatterplot(data=df, x='Landsize', y='Price')\n","plt.show()"]},{"cell_type":"code","execution_count":22,"id":"b2f7b7ee","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:41.888042Z","iopub.status.busy":"2024-10-30T16:59:41.887237Z","iopub.status.idle":"2024-10-30T16:59:41.897662Z","shell.execute_reply":"2024-10-30T16:59:41.896587Z"},"papermill":{"duration":0.041857,"end_time":"2024-10-30T16:59:41.900056","exception":false,"start_time":"2024-10-30T16:59:41.858199","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop the outlier with 'Landsize' value of more than 30,000\n","df.drop(df[df['Landsize'] > 30000].index, inplace=True)"]},{"cell_type":"code","execution_count":23,"id":"126c4492","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:41.958068Z","iopub.status.busy":"2024-10-30T16:59:41.956975Z","iopub.status.idle":"2024-10-30T16:59:42.163562Z","shell.execute_reply":"2024-10-30T16:59:42.162371Z"},"papermill":{"duration":0.238539,"end_time":"2024-10-30T16:59:42.166427","exception":false,"start_time":"2024-10-30T16:59:41.927888","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["# Create a scatterplot to search for the outlier\n","sns.scatterplot(data=df, x='BuildingArea', y='Price')\n","plt.show()"]},{"cell_type":"code","execution_count":24,"id":"64c04b4c","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:42.226074Z","iopub.status.busy":"2024-10-30T16:59:42.225185Z","iopub.status.idle":"2024-10-30T16:59:42.236979Z","shell.execute_reply":"2024-10-30T16:59:42.235846Z"},"papermill":{"duration":0.044061,"end_time":"2024-10-30T16:59:42.239756","exception":false,"start_time":"2024-10-30T16:59:42.195695","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop the outlier with 'BuildingArea' value of more than 2,000\n","df.drop(df[df['BuildingArea'] > 2000].index, inplace=True)"]},{"cell_type":"markdown","id":"faa932a0","metadata":{"papermill":{"duration":0.028711,"end_time":"2024-10-30T16:59:42.296914","exception":false,"start_time":"2024-10-30T16:59:42.268203","status":"completed"},"tags":[]},"source":["We also see that 'BuildingArea' and 'Landsize' columns still have '0' value, even though they can't have zero value. That's because if they have zero, that means the building or the land doesn't exist. That means we need to delete them."]},{"cell_type":"code","execution_count":25,"id":"a5503ee9","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:42.355062Z","iopub.status.busy":"2024-10-30T16:59:42.354576Z","iopub.status.idle":"2024-10-30T16:59:42.36737Z","shell.execute_reply":"2024-10-30T16:59:42.366173Z"},"papermill":{"duration":0.044856,"end_time":"2024-10-30T16:59:42.370011","exception":false,"start_time":"2024-10-30T16:59:42.325155","status":"completed"},"tags":[]},"outputs":[],"source":["# Filter rows where 'BuildingArea', 'Landsize', or 'Distance' is 0\n","rows_to_drop = df[(df['BuildingArea'] == 0) | (df['Landsize'] == 0)].index\n","\n","# Drop these rows from the DataFrame\n","df.drop(rows_to_drop, inplace=True)"]},{"cell_type":"code","execution_count":26,"id":"a7fc2ec3","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:42.428559Z","iopub.status.busy":"2024-10-30T16:59:42.427566Z","iopub.status.idle":"2024-10-30T16:59:42.489097Z","shell.execute_reply":"2024-10-30T16:59:42.487806Z"},"papermill":{"duration":0.093552,"end_time":"2024-10-30T16:59:42.491704","exception":false,"start_time":"2024-10-30T16:59:42.398152","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Rooms</th>\n","      <th>Price</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>12841.000000</td>\n","      <td>12841.000000</td>\n","      <td>1.284100e+04</td>\n","      <td>12841.000000</td>\n","      <td>12841.000000</td>\n","      <td>12841.000000</td>\n","      <td>12841.000000</td>\n","      <td>12841.000000</td>\n","      <td>11568.000000</td>\n","      <td>6626.000000</td>\n","      <td>7593.000000</td>\n","      <td>12841.000000</td>\n","      <td>12841.000000</td>\n","      <td>12841.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>12485.787322</td>\n","      <td>3.081458</td>\n","      <td>1.129128e+06</td>\n","      <td>10.925940</td>\n","      <td>3106.802508</td>\n","      <td>3.056693</td>\n","      <td>1.585624</td>\n","      <td>1.688809</td>\n","      <td>580.576245</td>\n","      <td>154.049250</td>\n","      <td>1964.101277</td>\n","      <td>-37.807390</td>\n","      <td>144.997917</td>\n","      <td>7356.312592</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6945.197326</td>\n","      <td>0.902523</td>\n","      <td>6.472493e+05</td>\n","      <td>6.103845</td>\n","      <td>98.172082</td>\n","      <td>0.916308</td>\n","      <td>0.703579</td>\n","      <td>0.981308</td>\n","      <td>826.973913</td>\n","      <td>85.751341</td>\n","      <td>36.761110</td>\n","      <td>0.084799</td>\n","      <td>0.112008</td>\n","      <td>4412.048352</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.310000e+05</td>\n","      <td>0.000000</td>\n","      <td>3000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1830.000000</td>\n","      <td>-38.182550</td>\n","      <td>144.431810</td>\n","      <td>249.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>6457.000000</td>\n","      <td>3.000000</td>\n","      <td>7.000000e+05</td>\n","      <td>6.900000</td>\n","      <td>3044.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>271.000000</td>\n","      <td>104.000000</td>\n","      <td>1940.000000</td>\n","      <td>-37.858500</td>\n","      <td>144.925300</td>\n","      <td>4048.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>12892.000000</td>\n","      <td>3.000000</td>\n","      <td>9.500000e+05</td>\n","      <td>10.400000</td>\n","      <td>3084.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>533.000000</td>\n","      <td>134.000000</td>\n","      <td>1970.000000</td>\n","      <td>-37.797000</td>\n","      <td>145.005000</td>\n","      <td>6482.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>18683.000000</td>\n","      <td>4.000000</td>\n","      <td>1.380000e+06</td>\n","      <td>13.800000</td>\n","      <td>3148.000000</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>676.000000</td>\n","      <td>182.000000</td>\n","      <td>1999.000000</td>\n","      <td>-37.749800</td>\n","      <td>145.068500</td>\n","      <td>10331.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>23546.000000</td>\n","      <td>10.000000</td>\n","      <td>9.000000e+06</td>\n","      <td>48.100000</td>\n","      <td>3977.000000</td>\n","      <td>20.000000</td>\n","      <td>8.000000</td>\n","      <td>10.000000</td>\n","      <td>21715.000000</td>\n","      <td>1041.000000</td>\n","      <td>2018.000000</td>\n","      <td>-37.408530</td>\n","      <td>145.526350</td>\n","      <td>21650.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Unnamed: 0         Rooms         Price      Distance      Postcode  \\\n","count  12841.000000  12841.000000  1.284100e+04  12841.000000  12841.000000   \n","mean   12485.787322      3.081458  1.129128e+06     10.925940   3106.802508   \n","std     6945.197326      0.902523  6.472493e+05      6.103845     98.172082   \n","min        1.000000      1.000000  1.310000e+05      0.000000   3000.000000   \n","25%     6457.000000      3.000000  7.000000e+05      6.900000   3044.000000   \n","50%    12892.000000      3.000000  9.500000e+05     10.400000   3084.000000   \n","75%    18683.000000      4.000000  1.380000e+06     13.800000   3148.000000   \n","max    23546.000000     10.000000  9.000000e+06     48.100000   3977.000000   \n","\n","           Bedroom2      Bathroom           Car      Landsize  BuildingArea  \\\n","count  12841.000000  12841.000000  12841.000000  11568.000000   6626.000000   \n","mean       3.056693      1.585624      1.688809    580.576245    154.049250   \n","std        0.916308      0.703579      0.981308    826.973913     85.751341   \n","min        0.000000      0.000000      0.000000      1.000000      1.000000   \n","25%        2.000000      1.000000      1.000000    271.000000    104.000000   \n","50%        3.000000      1.000000      2.000000    533.000000    134.000000   \n","75%        4.000000      2.000000      2.000000    676.000000    182.000000   \n","max       20.000000      8.000000     10.000000  21715.000000   1041.000000   \n","\n","         YearBuilt     Lattitude    Longtitude  Propertycount  \n","count  7593.000000  12841.000000  12841.000000   12841.000000  \n","mean   1964.101277    -37.807390    144.997917    7356.312592  \n","std      36.761110      0.084799      0.112008    4412.048352  \n","min    1830.000000    -38.182550    144.431810     249.000000  \n","25%    1940.000000    -37.858500    144.925300    4048.000000  \n","50%    1970.000000    -37.797000    145.005000    6482.000000  \n","75%    1999.000000    -37.749800    145.068500   10331.000000  \n","max    2018.000000    -37.408530    145.526350   21650.000000  "]},"execution_count":26,"metadata":{},"output_type":"execute_result"}],"source":["df.describe()"]},{"cell_type":"markdown","id":"c878ef95","metadata":{"papermill":{"duration":0.028397,"end_time":"2024-10-30T16:59:42.54914","exception":false,"start_time":"2024-10-30T16:59:42.520743","status":"completed"},"tags":[]},"source":["Based on the describe table, since the mean and median values are almost the same, so we decide to use mean value to fill the null values"]},{"cell_type":"code","execution_count":27,"id":"cea7ace6","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:42.609513Z","iopub.status.busy":"2024-10-30T16:59:42.608331Z","iopub.status.idle":"2024-10-30T16:59:42.617659Z","shell.execute_reply":"2024-10-30T16:59:42.61647Z"},"papermill":{"duration":0.04206,"end_time":"2024-10-30T16:59:42.62025","exception":false,"start_time":"2024-10-30T16:59:42.57819","status":"completed"},"tags":[]},"outputs":[],"source":["# Fill the null values by mean\n","df['YearBuilt'] = df['YearBuilt'].fillna(df['YearBuilt'].mean())\n","df['Landsize'] = df['Landsize'].fillna(df['Landsize'].mean())\n","df['BuildingArea'] = df['BuildingArea'].fillna(df['BuildingArea'].mean())"]},{"cell_type":"code","execution_count":28,"id":"1cbe82d9","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:42.681366Z","iopub.status.busy":"2024-10-30T16:59:42.680908Z","iopub.status.idle":"2024-10-30T16:59:42.696847Z","shell.execute_reply":"2024-10-30T16:59:42.695764Z"},"papermill":{"duration":0.050218,"end_time":"2024-10-30T16:59:42.699329","exception":false,"start_time":"2024-10-30T16:59:42.649111","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Unnamed: 0          0\n","Suburb              0\n","Address             0\n","Rooms               0\n","Type                0\n","Price               0\n","Method              0\n","SellerG             0\n","Date                0\n","Distance            0\n","Postcode            0\n","Bedroom2            0\n","Bathroom            0\n","Car                 0\n","Landsize            0\n","BuildingArea        0\n","YearBuilt           0\n","CouncilArea      2563\n","Lattitude           0\n","Longtitude          0\n","Regionname          0\n","Propertycount       0\n","dtype: int64"]},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":["# Null value list\n","df.isnull().sum()"]},{"cell_type":"markdown","id":"4a5fa1a3","metadata":{"papermill":{"duration":0.028297,"end_time":"2024-10-30T16:59:42.758241","exception":false,"start_time":"2024-10-30T16:59:42.729944","status":"completed"},"tags":[]},"source":["## 5. CouncilArea\n","\n","The last part is the council area, since this is not a numerical value, we can't just give them based on mean or median. But since other row has data, and the number of null values is more than 1000, we need other way to fill it.\n","\n","We'll fill it by using classification, we'll classify the CouncilArea based on the average lattitude and longtitude location of the other CouncilArea"]},{"cell_type":"code","execution_count":29,"id":"fa789400","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:42.817957Z","iopub.status.busy":"2024-10-30T16:59:42.817548Z","iopub.status.idle":"2024-10-30T16:59:44.196419Z","shell.execute_reply":"2024-10-30T16:59:44.195271Z"},"papermill":{"duration":1.411769,"end_time":"2024-10-30T16:59:44.19916","exception":false,"start_time":"2024-10-30T16:59:42.787391","status":"completed"},"tags":[]},"outputs":[],"source":["# Prepare the data\n","# Filter rows where CouncilArea is not null to use as training data\n","df_train = df.dropna(subset=['CouncilArea', 'Lattitude', 'Longtitude'])\n","\n","# Encode CouncilArea as it is categorical and create a mapping\n","df_train['CouncilArea'] = df_train['CouncilArea'].astype('category')\n","council_area_mapping = dict(enumerate(df_train['CouncilArea'].cat.categories))\n","df_train['CouncilArea'] = df_train['CouncilArea'].cat.codes\n","\n","# Prepare data for training\n","X = df_train[['Lattitude', 'Longtitude']]\n","y = df_train['CouncilArea']\n","\n","# Initialize and train the model\n","model = RandomForestClassifier(random_state=0)\n","model.fit(X, y)\n","\n","# Predict missing CouncilArea values\n","# Filter rows where CouncilArea is missing\n","df_missing = df[df['CouncilArea'].isna() & df['Lattitude'].notna() & df['Longtitude'].notna()]\n","if not df_missing.empty:\n","    # Predict using the trained model\n","    predictions = model.predict(df_missing[['Lattitude', 'Longtitude']])\n","\n","    # Map encoded predictions back to original names\n","    predicted_areas = pd.Series(predictions).map(council_area_mapping)\n","\n","    # Assign these predicted names back to the missing CouncilArea rows\n","    df.loc[df['CouncilArea'].isna(), 'CouncilArea'] = predicted_areas.values\n","else:\n","    print(\"No missing CouncilArea values to predict.\")"]},{"cell_type":"code","execution_count":30,"id":"b555e1c4","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:44.25879Z","iopub.status.busy":"2024-10-30T16:59:44.258338Z","iopub.status.idle":"2024-10-30T16:59:44.278128Z","shell.execute_reply":"2024-10-30T16:59:44.276983Z"},"papermill":{"duration":0.052453,"end_time":"2024-10-30T16:59:44.28056","exception":false,"start_time":"2024-10-30T16:59:44.228107","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Empty DataFrame\n","Columns: [Suburb, Address, CouncilArea]\n","Index: []\n"]}],"source":["# Identify rows where CouncilArea contains numeric values\n","numeric_council_area = df[pd.to_numeric(df['CouncilArea'], errors='coerce').notna()]\n","numeric_council_area = numeric_council_area[['Suburb', 'Address', 'CouncilArea']]\n","print(numeric_council_area)"]},{"cell_type":"code","execution_count":31,"id":"0f899874","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:44.340404Z","iopub.status.busy":"2024-10-30T16:59:44.339987Z","iopub.status.idle":"2024-10-30T16:59:44.355416Z","shell.execute_reply":"2024-10-30T16:59:44.354287Z"},"papermill":{"duration":0.047792,"end_time":"2024-10-30T16:59:44.357862","exception":false,"start_time":"2024-10-30T16:59:44.31007","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Unnamed: 0       0\n","Suburb           0\n","Address          0\n","Rooms            0\n","Type             0\n","Price            0\n","Method           0\n","SellerG          0\n","Date             0\n","Distance         0\n","Postcode         0\n","Bedroom2         0\n","Bathroom         0\n","Car              0\n","Landsize         0\n","BuildingArea     0\n","YearBuilt        0\n","CouncilArea      0\n","Lattitude        0\n","Longtitude       0\n","Regionname       0\n","Propertycount    0\n","dtype: int64"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["df.isnull().sum()"]},{"cell_type":"markdown","id":"d3bdc4b6","metadata":{"papermill":{"duration":0.028283,"end_time":"2024-10-30T16:59:44.414927","exception":false,"start_time":"2024-10-30T16:59:44.386644","status":"completed"},"tags":[]},"source":["The final numbers of non-null data can be shown below"]},{"cell_type":"code","execution_count":32,"id":"a80917af","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:44.474396Z","iopub.status.busy":"2024-10-30T16:59:44.473968Z","iopub.status.idle":"2024-10-30T16:59:44.494038Z","shell.execute_reply":"2024-10-30T16:59:44.492766Z"},"papermill":{"duration":0.05312,"end_time":"2024-10-30T16:59:44.496759","exception":false,"start_time":"2024-10-30T16:59:44.443639","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 12841 entries, 0 to 18395\n","Data columns (total 22 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   Unnamed: 0     12841 non-null  int64  \n"," 1   Suburb         12841 non-null  object \n"," 2   Address        12841 non-null  object \n"," 3   Rooms          12841 non-null  int64  \n"," 4   Type           12841 non-null  object \n"," 5   Price          12841 non-null  float64\n"," 6   Method         12841 non-null  object \n"," 7   SellerG        12841 non-null  object \n"," 8   Date           12841 non-null  object \n"," 9   Distance       12841 non-null  float64\n"," 10  Postcode       12841 non-null  float64\n"," 11  Bedroom2       12841 non-null  float64\n"," 12  Bathroom       12841 non-null  float64\n"," 13  Car            12841 non-null  float64\n"," 14  Landsize       12841 non-null  float64\n"," 15  BuildingArea   12841 non-null  float64\n"," 16  YearBuilt      12841 non-null  float64\n"," 17  CouncilArea    12841 non-null  object \n"," 18  Lattitude      12841 non-null  float64\n"," 19  Longtitude     12841 non-null  float64\n"," 20  Regionname     12841 non-null  object \n"," 21  Propertycount  12841 non-null  float64\n","dtypes: float64(12), int64(2), object(8)\n","memory usage: 2.3+ MB\n"]}],"source":["df.info()"]},{"cell_type":"markdown","id":"a5b3b5f3","metadata":{"papermill":{"duration":0.028809,"end_time":"2024-10-30T16:59:44.554691","exception":false,"start_time":"2024-10-30T16:59:44.525882","status":"completed"},"tags":[]},"source":["# Data Cleansing\n","\n","## Data Duplication\n","\n","Because there are some possibility of data duplication, we need to check it to make sure our data is clear"]},{"cell_type":"code","execution_count":33,"id":"4762bc3b","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:44.614279Z","iopub.status.busy":"2024-10-30T16:59:44.613868Z","iopub.status.idle":"2024-10-30T16:59:44.650292Z","shell.execute_reply":"2024-10-30T16:59:44.649185Z"},"papermill":{"duration":0.069464,"end_time":"2024-10-30T16:59:44.652969","exception":false,"start_time":"2024-10-30T16:59:44.583505","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>...</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>CouncilArea</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Regionname</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9850</th>\n","      <td>12654</td>\n","      <td>Coburg</td>\n","      <td>69 Victoria St</td>\n","      <td>3</td>\n","      <td>t</td>\n","      <td>720000.0</td>\n","      <td>PI</td>\n","      <td>C21</td>\n","      <td>29/04/2017</td>\n","      <td>7.8</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>531.0</td>\n","      <td>112.0</td>\n","      <td>2016.0</td>\n","      <td>Moreland</td>\n","      <td>-37.7424</td>\n","      <td>144.9571</td>\n","      <td>Northern Metropolitan</td>\n","      <td>11204.0</td>\n","    </tr>\n","    <tr>\n","      <th>9851</th>\n","      <td>12655</td>\n","      <td>Coburg</td>\n","      <td>69 Victoria St</td>\n","      <td>3</td>\n","      <td>t</td>\n","      <td>720000.0</td>\n","      <td>PI</td>\n","      <td>Century</td>\n","      <td>29/04/2017</td>\n","      <td>7.8</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>531.0</td>\n","      <td>112.0</td>\n","      <td>2016.0</td>\n","      <td>Moreland</td>\n","      <td>-37.7424</td>\n","      <td>144.9571</td>\n","      <td>Northern Metropolitan</td>\n","      <td>11204.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2 rows Ã— 22 columns</p>\n","</div>"],"text/plain":["      Unnamed: 0  Suburb         Address  Rooms Type     Price Method  \\\n","9850       12654  Coburg  69 Victoria St      3    t  720000.0     PI   \n","9851       12655  Coburg  69 Victoria St      3    t  720000.0     PI   \n","\n","      SellerG        Date  Distance  ...  Bathroom  Car  Landsize  \\\n","9850      C21  29/04/2017       7.8  ...       2.0  2.0     531.0   \n","9851  Century  29/04/2017       7.8  ...       2.0  2.0     531.0   \n","\n","      BuildingArea  YearBuilt  CouncilArea  Lattitude Longtitude  \\\n","9850         112.0     2016.0     Moreland   -37.7424   144.9571   \n","9851         112.0     2016.0     Moreland   -37.7424   144.9571   \n","\n","                 Regionname  Propertycount  \n","9850  Northern Metropolitan        11204.0  \n","9851  Northern Metropolitan        11204.0  \n","\n","[2 rows x 22 columns]"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["# Show all duplicate rows based on 'Address', 'Lattitude', 'Longtitude', and 'Date'\n","duplicate_date = df[df.duplicated(subset=['Address', 'Lattitude', 'Longtitude', 'Date'], keep=False)]\n","duplicate_date"]},{"cell_type":"markdown","id":"00e9622b","metadata":{"papermill":{"duration":0.029027,"end_time":"2024-10-30T16:59:44.711276","exception":false,"start_time":"2024-10-30T16:59:44.682249","status":"completed"},"tags":[]},"source":["I choose that columns to be checked to define duplication because those columns mean that there are a house that sold at the same day, which is impossible. So, I'll delete those duplication."]},{"cell_type":"code","execution_count":34,"id":"6d73384e","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:44.773263Z","iopub.status.busy":"2024-10-30T16:59:44.772295Z","iopub.status.idle":"2024-10-30T16:59:44.787788Z","shell.execute_reply":"2024-10-30T16:59:44.786652Z"},"papermill":{"duration":0.048841,"end_time":"2024-10-30T16:59:44.790414","exception":false,"start_time":"2024-10-30T16:59:44.741573","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop duplicate rows based on 'Address', 'Lattitude', 'Longtitude', and 'Date', keeping only the first occurrence\n","df.drop_duplicates(subset=['Address', 'Lattitude', 'Longtitude', 'Date'], keep='last', inplace=True)"]},{"cell_type":"code","execution_count":35,"id":"3e40b2d2","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:44.851517Z","iopub.status.busy":"2024-10-30T16:59:44.850491Z","iopub.status.idle":"2024-10-30T16:59:44.915543Z","shell.execute_reply":"2024-10-30T16:59:44.914297Z"},"papermill":{"duration":0.098542,"end_time":"2024-10-30T16:59:44.918746","exception":false,"start_time":"2024-10-30T16:59:44.820204","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>...</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>CouncilArea</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Regionname</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2076</th>\n","      <td>2663</td>\n","      <td>Camberwell</td>\n","      <td>3/220 Warrigal Rd</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>435000.0</td>\n","      <td>SP</td>\n","      <td>LITTLE</td>\n","      <td>7/11/2016</td>\n","      <td>7.8</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>896.000000</td>\n","      <td>77.00000</td>\n","      <td>1960.000000</td>\n","      <td>Boroondara</td>\n","      <td>-37.84790</td>\n","      <td>145.09580</td>\n","      <td>Southern Metropolitan</td>\n","      <td>8920.0</td>\n","    </tr>\n","    <tr>\n","      <th>2093</th>\n","      <td>2690</td>\n","      <td>Camberwell</td>\n","      <td>3/220 Warrigal Rd</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>435000.0</td>\n","      <td>SP</td>\n","      <td>LITTLE</td>\n","      <td>12/11/2016</td>\n","      <td>7.8</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>896.000000</td>\n","      <td>77.00000</td>\n","      <td>1960.000000</td>\n","      <td>Boroondara</td>\n","      <td>-37.84790</td>\n","      <td>145.09580</td>\n","      <td>Southern Metropolitan</td>\n","      <td>8920.0</td>\n","    </tr>\n","    <tr>\n","      <th>3372</th>\n","      <td>4379</td>\n","      <td>Footscray</td>\n","      <td>4 Adelaide St</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1225000.0</td>\n","      <td>SP</td>\n","      <td>Nelson</td>\n","      <td>3/12/2016</td>\n","      <td>6.4</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>319.000000</td>\n","      <td>130.00000</td>\n","      <td>1915.000000</td>\n","      <td>Maribyrnong</td>\n","      <td>-37.79430</td>\n","      <td>144.88750</td>\n","      <td>Western Metropolitan</td>\n","      <td>7570.0</td>\n","    </tr>\n","    <tr>\n","      <th>3460</th>\n","      <td>4484</td>\n","      <td>Footscray</td>\n","      <td>4 Adelaide St</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1225000.0</td>\n","      <td>SP</td>\n","      <td>Nelson</td>\n","      <td>27/11/2016</td>\n","      <td>6.4</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>319.000000</td>\n","      <td>130.00000</td>\n","      <td>1915.000000</td>\n","      <td>Maribyrnong</td>\n","      <td>-37.79430</td>\n","      <td>144.88750</td>\n","      <td>Western Metropolitan</td>\n","      <td>7570.0</td>\n","    </tr>\n","    <tr>\n","      <th>4560</th>\n","      <td>5877</td>\n","      <td>Kew</td>\n","      <td>2/27 Pakington St</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>610000.0</td>\n","      <td>SP</td>\n","      <td>Nelson</td>\n","      <td>4/03/2017</td>\n","      <td>5.6</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>745.000000</td>\n","      <td>72.00000</td>\n","      <td>1968.000000</td>\n","      <td>Boroondara</td>\n","      <td>-37.80240</td>\n","      <td>145.03460</td>\n","      <td>Southern Metropolitan</td>\n","      <td>10331.0</td>\n","    </tr>\n","    <tr>\n","      <th>4656</th>\n","      <td>6030</td>\n","      <td>Kew</td>\n","      <td>2/27 Pakington St</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>610000.0</td>\n","      <td>SP</td>\n","      <td>Nelson</td>\n","      <td>25/02/2017</td>\n","      <td>5.6</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>745.000000</td>\n","      <td>72.00000</td>\n","      <td>1968.000000</td>\n","      <td>Boroondara</td>\n","      <td>-37.80240</td>\n","      <td>145.03460</td>\n","      <td>Southern Metropolitan</td>\n","      <td>10331.0</td>\n","    </tr>\n","    <tr>\n","      <th>4718</th>\n","      <td>6111</td>\n","      <td>Kew East</td>\n","      <td>36 Belford Rd</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1315000.0</td>\n","      <td>SP</td>\n","      <td>Nelson</td>\n","      <td>17/09/2016</td>\n","      <td>7.5</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>458.000000</td>\n","      <td>200.00000</td>\n","      <td>1930.000000</td>\n","      <td>Boroondara</td>\n","      <td>-37.79810</td>\n","      <td>145.04720</td>\n","      <td>Southern Metropolitan</td>\n","      <td>2671.0</td>\n","    </tr>\n","    <tr>\n","      <th>4730</th>\n","      <td>6127</td>\n","      <td>Kew East</td>\n","      <td>36 Belford Rd</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1315000.0</td>\n","      <td>SP</td>\n","      <td>Nelson</td>\n","      <td>24/09/2016</td>\n","      <td>7.5</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>458.000000</td>\n","      <td>200.00000</td>\n","      <td>1930.000000</td>\n","      <td>Boroondara</td>\n","      <td>-37.79810</td>\n","      <td>145.04720</td>\n","      <td>Southern Metropolitan</td>\n","      <td>2671.0</td>\n","    </tr>\n","    <tr>\n","      <th>5874</th>\n","      <td>7620</td>\n","      <td>Pascoe Vale</td>\n","      <td>2 Hazel Gr</td>\n","      <td>2</td>\n","      <td>h</td>\n","      <td>915000.0</td>\n","      <td>S</td>\n","      <td>New</td>\n","      <td>3/12/2016</td>\n","      <td>9.9</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>629.000000</td>\n","      <td>154.04925</td>\n","      <td>1975.000000</td>\n","      <td>Moreland</td>\n","      <td>-37.73120</td>\n","      <td>144.93990</td>\n","      <td>Northern Metropolitan</td>\n","      <td>7485.0</td>\n","    </tr>\n","    <tr>\n","      <th>5910</th>\n","      <td>7661</td>\n","      <td>Pascoe Vale</td>\n","      <td>2 Hazel Gr</td>\n","      <td>2</td>\n","      <td>h</td>\n","      <td>915000.0</td>\n","      <td>S</td>\n","      <td>New</td>\n","      <td>10/12/2016</td>\n","      <td>9.9</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>629.000000</td>\n","      <td>154.04925</td>\n","      <td>1975.000000</td>\n","      <td>Moreland</td>\n","      <td>-37.73120</td>\n","      <td>144.93990</td>\n","      <td>Northern Metropolitan</td>\n","      <td>7485.0</td>\n","    </tr>\n","    <tr>\n","      <th>6478</th>\n","      <td>8404</td>\n","      <td>Reservoir</td>\n","      <td>2/102 Rathcown Rd</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>440000.0</td>\n","      <td>SP</td>\n","      <td>Ray</td>\n","      <td>8/10/2016</td>\n","      <td>11.2</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>132.000000</td>\n","      <td>83.00000</td>\n","      <td>1980.000000</td>\n","      <td>Darebin</td>\n","      <td>-37.70900</td>\n","      <td>145.02190</td>\n","      <td>Northern Metropolitan</td>\n","      <td>21650.0</td>\n","    </tr>\n","    <tr>\n","      <th>6556</th>\n","      <td>8492</td>\n","      <td>Reservoir</td>\n","      <td>2/102 Rathcown Rd</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>440000.0</td>\n","      <td>SP</td>\n","      <td>Ray</td>\n","      <td>15/10/2016</td>\n","      <td>11.2</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>132.000000</td>\n","      <td>83.00000</td>\n","      <td>1980.000000</td>\n","      <td>Darebin</td>\n","      <td>-37.70900</td>\n","      <td>145.02190</td>\n","      <td>Northern Metropolitan</td>\n","      <td>21650.0</td>\n","    </tr>\n","    <tr>\n","      <th>10979</th>\n","      <td>14106</td>\n","      <td>Kensington</td>\n","      <td>33 McCracken St</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1817000.0</td>\n","      <td>SP</td>\n","      <td>Hodges</td>\n","      <td>22/04/2017</td>\n","      <td>4.2</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>309.000000</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Melbourne</td>\n","      <td>-37.79100</td>\n","      <td>144.92800</td>\n","      <td>Northern Metropolitan</td>\n","      <td>5263.0</td>\n","    </tr>\n","    <tr>\n","      <th>10983</th>\n","      <td>14110</td>\n","      <td>Kensington</td>\n","      <td>33 McCracken St</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1817000.0</td>\n","      <td>SP</td>\n","      <td>Hodges</td>\n","      <td>29/04/2017</td>\n","      <td>4.2</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>309.000000</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Melbourne</td>\n","      <td>-37.79100</td>\n","      <td>144.92800</td>\n","      <td>Northern Metropolitan</td>\n","      <td>5263.0</td>\n","    </tr>\n","    <tr>\n","      <th>11363</th>\n","      <td>14587</td>\n","      <td>Richmond</td>\n","      <td>7/129 Hoddle St</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>890500.0</td>\n","      <td>SP</td>\n","      <td>Biggin</td>\n","      <td>1/07/2017</td>\n","      <td>2.4</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>180.000000</td>\n","      <td>123.00000</td>\n","      <td>1940.000000</td>\n","      <td>Yarra</td>\n","      <td>-37.81443</td>\n","      <td>144.99079</td>\n","      <td>Northern Metropolitan</td>\n","      <td>14949.0</td>\n","    </tr>\n","    <tr>\n","      <th>11778</th>\n","      <td>15145</td>\n","      <td>Moonee Ponds</td>\n","      <td>36 Aberfeldie St</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>1850000.0</td>\n","      <td>SP</td>\n","      <td>McDonald</td>\n","      <td>3/06/2017</td>\n","      <td>6.2</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>596.000000</td>\n","      <td>203.00000</td>\n","      <td>1950.000000</td>\n","      <td>Moonee Valley</td>\n","      <td>-37.76086</td>\n","      <td>144.90497</td>\n","      <td>Western Metropolitan</td>\n","      <td>6232.0</td>\n","    </tr>\n","    <tr>\n","      <th>12296</th>\n","      <td>15799</td>\n","      <td>Moonee Ponds</td>\n","      <td>36 Aberfeldie St</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>1850000.0</td>\n","      <td>SP</td>\n","      <td>McDonald</td>\n","      <td>17/06/2017</td>\n","      <td>6.2</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>596.000000</td>\n","      <td>203.00000</td>\n","      <td>1950.000000</td>\n","      <td>Moonee Valley</td>\n","      <td>-37.76086</td>\n","      <td>144.90497</td>\n","      <td>Western Metropolitan</td>\n","      <td>6232.0</td>\n","    </tr>\n","    <tr>\n","      <th>12344</th>\n","      <td>15864</td>\n","      <td>Oak Park</td>\n","      <td>79 New Rd</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1071888.0</td>\n","      <td>SP</td>\n","      <td>Rendina</td>\n","      <td>17/06/2017</td>\n","      <td>11.2</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>553.000000</td>\n","      <td>190.00000</td>\n","      <td>2001.000000</td>\n","      <td>Moreland</td>\n","      <td>-37.71328</td>\n","      <td>144.90585</td>\n","      <td>Northern Metropolitan</td>\n","      <td>2651.0</td>\n","    </tr>\n","    <tr>\n","      <th>12352</th>\n","      <td>15872</td>\n","      <td>Parkdale</td>\n","      <td>22 Keith St</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1300000.0</td>\n","      <td>SP</td>\n","      <td>Buxton</td>\n","      <td>17/06/2017</td>\n","      <td>21.5</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>597.000000</td>\n","      <td>150.00000</td>\n","      <td>1970.000000</td>\n","      <td>Kingston</td>\n","      <td>-37.99232</td>\n","      <td>145.08469</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>5087.0</td>\n","    </tr>\n","    <tr>\n","      <th>12580</th>\n","      <td>16181</td>\n","      <td>Coburg</td>\n","      <td>34 Soudan St</td>\n","      <td>2</td>\n","      <td>h</td>\n","      <td>996000.0</td>\n","      <td>S</td>\n","      <td>Nelson</td>\n","      <td>24/06/2017</td>\n","      <td>6.7</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>476.000000</td>\n","      <td>97.00000</td>\n","      <td>1930.000000</td>\n","      <td>Moreland</td>\n","      <td>-37.73883</td>\n","      <td>144.95321</td>\n","      <td>Northern Metropolitan</td>\n","      <td>11204.0</td>\n","    </tr>\n","    <tr>\n","      <th>12783</th>\n","      <td>16460</td>\n","      <td>Oak Park</td>\n","      <td>79 New Rd</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1071888.0</td>\n","      <td>SP</td>\n","      <td>Rendina</td>\n","      <td>24/06/2017</td>\n","      <td>11.2</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>553.000000</td>\n","      <td>190.00000</td>\n","      <td>2001.000000</td>\n","      <td>Moreland</td>\n","      <td>-37.71328</td>\n","      <td>144.90585</td>\n","      <td>Northern Metropolitan</td>\n","      <td>2651.0</td>\n","    </tr>\n","    <tr>\n","      <th>12796</th>\n","      <td>16476</td>\n","      <td>Parkdale</td>\n","      <td>22 Keith St</td>\n","      <td>4</td>\n","      <td>h</td>\n","      <td>1300000.0</td>\n","      <td>SP</td>\n","      <td>Buxton</td>\n","      <td>24/06/2017</td>\n","      <td>21.5</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>597.000000</td>\n","      <td>150.00000</td>\n","      <td>1970.000000</td>\n","      <td>Kingston</td>\n","      <td>-37.99232</td>\n","      <td>145.08469</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>5087.0</td>\n","    </tr>\n","    <tr>\n","      <th>12825</th>\n","      <td>16512</td>\n","      <td>Richmond</td>\n","      <td>7/129 Hoddle St</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>890500.0</td>\n","      <td>SP</td>\n","      <td>Biggin</td>\n","      <td>24/06/2017</td>\n","      <td>2.4</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>180.000000</td>\n","      <td>123.00000</td>\n","      <td>1940.000000</td>\n","      <td>Yarra</td>\n","      <td>-37.81443</td>\n","      <td>144.99079</td>\n","      <td>Northern Metropolitan</td>\n","      <td>14949.0</td>\n","    </tr>\n","    <tr>\n","      <th>14731</th>\n","      <td>18886</td>\n","      <td>Carlton</td>\n","      <td>66 Palmerston St</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>920000.0</td>\n","      <td>S</td>\n","      <td>Nelson</td>\n","      <td>22/07/2017</td>\n","      <td>1.6</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>98.000000</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Melbourne</td>\n","      <td>-37.79633</td>\n","      <td>144.97269</td>\n","      <td>Northern Metropolitan</td>\n","      <td>6786.0</td>\n","    </tr>\n","    <tr>\n","      <th>14896</th>\n","      <td>19107</td>\n","      <td>Pascoe Vale</td>\n","      <td>16/43 Arndt Rd</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>541000.0</td>\n","      <td>S</td>\n","      <td>Nelson</td>\n","      <td>22/07/2017</td>\n","      <td>8.5</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>133.000000</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Moreland</td>\n","      <td>-37.72136</td>\n","      <td>144.92932</td>\n","      <td>Northern Metropolitan</td>\n","      <td>7485.0</td>\n","    </tr>\n","    <tr>\n","      <th>15084</th>\n","      <td>19346</td>\n","      <td>Carlton</td>\n","      <td>66 Palmerston St</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>920000.0</td>\n","      <td>S</td>\n","      <td>Nelson</td>\n","      <td>29/07/2017</td>\n","      <td>1.6</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>98.000000</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Melbourne</td>\n","      <td>-37.79633</td>\n","      <td>144.97269</td>\n","      <td>Northern Metropolitan</td>\n","      <td>6786.0</td>\n","    </tr>\n","    <tr>\n","      <th>15106</th>\n","      <td>19373</td>\n","      <td>Coburg</td>\n","      <td>34 Soudan St</td>\n","      <td>2</td>\n","      <td>h</td>\n","      <td>996000.0</td>\n","      <td>S</td>\n","      <td>Nelson</td>\n","      <td>29/07/2017</td>\n","      <td>6.7</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>476.000000</td>\n","      <td>97.00000</td>\n","      <td>1930.000000</td>\n","      <td>Moreland</td>\n","      <td>-37.73883</td>\n","      <td>144.95321</td>\n","      <td>Northern Metropolitan</td>\n","      <td>11204.0</td>\n","    </tr>\n","    <tr>\n","      <th>15295</th>\n","      <td>19616</td>\n","      <td>Pascoe Vale</td>\n","      <td>16/43 Arndt Rd</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>541000.0</td>\n","      <td>S</td>\n","      <td>Nelson</td>\n","      <td>29/07/2017</td>\n","      <td>8.5</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>133.000000</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Moreland</td>\n","      <td>-37.72136</td>\n","      <td>144.92932</td>\n","      <td>Northern Metropolitan</td>\n","      <td>7485.0</td>\n","    </tr>\n","    <tr>\n","      <th>15555</th>\n","      <td>19943</td>\n","      <td>Epping</td>\n","      <td>11 Simon Ct</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>569000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>3/09/2017</td>\n","      <td>19.6</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>580.576245</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Whittlesea</td>\n","      <td>-37.63864</td>\n","      <td>145.02928</td>\n","      <td>Northern Metropolitan</td>\n","      <td>10926.0</td>\n","    </tr>\n","    <tr>\n","      <th>15588</th>\n","      <td>19981</td>\n","      <td>Frankston South</td>\n","      <td>3 Diosma Ct</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>1155000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>3/09/2017</td>\n","      <td>38.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2405.000000</td>\n","      <td>242.00000</td>\n","      <td>1980.000000</td>\n","      <td>Frankston</td>\n","      <td>-38.16457</td>\n","      <td>145.12421</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>7566.0</td>\n","    </tr>\n","    <tr>\n","      <th>16019</th>\n","      <td>20552</td>\n","      <td>Glen Iris</td>\n","      <td>1/16 Osborne Av</td>\n","      <td>2</td>\n","      <td>t</td>\n","      <td>965000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>9/09/2017</td>\n","      <td>7.3</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>704.000000</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Stonnington</td>\n","      <td>-37.85698</td>\n","      <td>145.04686</td>\n","      <td>Southern Metropolitan</td>\n","      <td>10412.0</td>\n","    </tr>\n","    <tr>\n","      <th>16377</th>\n","      <td>21009</td>\n","      <td>Brunswick</td>\n","      <td>7/39 Davies St</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>495000.0</td>\n","      <td>SP</td>\n","      <td>Nelson</td>\n","      <td>16/09/2017</td>\n","      <td>5.2</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>580.576245</td>\n","      <td>61.00000</td>\n","      <td>1970.000000</td>\n","      <td>Moreland</td>\n","      <td>-37.75675</td>\n","      <td>144.96753</td>\n","      <td>Northern Metropolitan</td>\n","      <td>11918.0</td>\n","    </tr>\n","    <tr>\n","      <th>16516</th>\n","      <td>21208</td>\n","      <td>Glen Iris</td>\n","      <td>1/16 Osborne Av</td>\n","      <td>2</td>\n","      <td>t</td>\n","      <td>965000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>16/09/2017</td>\n","      <td>7.3</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>704.000000</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Stonnington</td>\n","      <td>-37.85698</td>\n","      <td>145.04686</td>\n","      <td>Southern Metropolitan</td>\n","      <td>10412.0</td>\n","    </tr>\n","    <tr>\n","      <th>16694</th>\n","      <td>21451</td>\n","      <td>Patterson Lakes</td>\n","      <td>6 Balarang Ct</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>670000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>16/09/2017</td>\n","      <td>31.2</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>580.576245</td>\n","      <td>104.00000</td>\n","      <td>1964.101277</td>\n","      <td>Frankston</td>\n","      <td>-38.07868</td>\n","      <td>145.14743</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>3351.0</td>\n","    </tr>\n","    <tr>\n","      <th>17373</th>\n","      <td>22278</td>\n","      <td>Brunswick</td>\n","      <td>7/39 Davies St</td>\n","      <td>2</td>\n","      <td>u</td>\n","      <td>495000.0</td>\n","      <td>SP</td>\n","      <td>Nelson</td>\n","      <td>23/09/2017</td>\n","      <td>5.2</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>580.576245</td>\n","      <td>61.00000</td>\n","      <td>1970.000000</td>\n","      <td>Moreland</td>\n","      <td>-37.75675</td>\n","      <td>144.96753</td>\n","      <td>Northern Metropolitan</td>\n","      <td>11918.0</td>\n","    </tr>\n","    <tr>\n","      <th>18038</th>\n","      <td>23116</td>\n","      <td>Epping</td>\n","      <td>11 Simon Ct</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>569000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>26/08/2017</td>\n","      <td>19.6</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>580.576245</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Whittlesea</td>\n","      <td>-37.63864</td>\n","      <td>145.02928</td>\n","      <td>Northern Metropolitan</td>\n","      <td>10926.0</td>\n","    </tr>\n","    <tr>\n","      <th>18066</th>\n","      <td>23146</td>\n","      <td>Frankston South</td>\n","      <td>3 Diosma Ct</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>1155000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>26/08/2017</td>\n","      <td>38.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2405.000000</td>\n","      <td>242.00000</td>\n","      <td>1980.000000</td>\n","      <td>Frankston</td>\n","      <td>-38.16457</td>\n","      <td>145.12421</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>7566.0</td>\n","    </tr>\n","    <tr>\n","      <th>18256</th>\n","      <td>23375</td>\n","      <td>Patterson Lakes</td>\n","      <td>6 Balarang Ct</td>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>670000.0</td>\n","      <td>S</td>\n","      <td>hockingstuart</td>\n","      <td>26/08/2017</td>\n","      <td>31.2</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>580.576245</td>\n","      <td>104.00000</td>\n","      <td>1964.101277</td>\n","      <td>Frankston</td>\n","      <td>-38.07868</td>\n","      <td>145.14743</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>3351.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>38 rows Ã— 22 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0           Suburb            Address  Rooms Type      Price  \\\n","2076         2663       Camberwell  3/220 Warrigal Rd      2    u   435000.0   \n","2093         2690       Camberwell  3/220 Warrigal Rd      2    u   435000.0   \n","3372         4379        Footscray      4 Adelaide St      4    h  1225000.0   \n","3460         4484        Footscray      4 Adelaide St      4    h  1225000.0   \n","4560         5877              Kew  2/27 Pakington St      2    u   610000.0   \n","4656         6030              Kew  2/27 Pakington St      2    u   610000.0   \n","4718         6111         Kew East      36 Belford Rd      4    h  1315000.0   \n","4730         6127         Kew East      36 Belford Rd      4    h  1315000.0   \n","5874         7620      Pascoe Vale         2 Hazel Gr      2    h   915000.0   \n","5910         7661      Pascoe Vale         2 Hazel Gr      2    h   915000.0   \n","6478         8404        Reservoir  2/102 Rathcown Rd      2    u   440000.0   \n","6556         8492        Reservoir  2/102 Rathcown Rd      2    u   440000.0   \n","10979       14106       Kensington    33 McCracken St      4    h  1817000.0   \n","10983       14110       Kensington    33 McCracken St      4    h  1817000.0   \n","11363       14587         Richmond    7/129 Hoddle St      2    u   890500.0   \n","11778       15145     Moonee Ponds   36 Aberfeldie St      3    h  1850000.0   \n","12296       15799     Moonee Ponds   36 Aberfeldie St      3    h  1850000.0   \n","12344       15864         Oak Park          79 New Rd      4    h  1071888.0   \n","12352       15872         Parkdale        22 Keith St      4    h  1300000.0   \n","12580       16181           Coburg       34 Soudan St      2    h   996000.0   \n","12783       16460         Oak Park          79 New Rd      4    h  1071888.0   \n","12796       16476         Parkdale        22 Keith St      4    h  1300000.0   \n","12825       16512         Richmond    7/129 Hoddle St      2    u   890500.0   \n","14731       18886          Carlton   66 Palmerston St      3    h   920000.0   \n","14896       19107      Pascoe Vale     16/43 Arndt Rd      2    u   541000.0   \n","15084       19346          Carlton   66 Palmerston St      3    h   920000.0   \n","15106       19373           Coburg       34 Soudan St      2    h   996000.0   \n","15295       19616      Pascoe Vale     16/43 Arndt Rd      2    u   541000.0   \n","15555       19943           Epping        11 Simon Ct      3    h   569000.0   \n","15588       19981  Frankston South        3 Diosma Ct      3    h  1155000.0   \n","16019       20552        Glen Iris    1/16 Osborne Av      2    t   965000.0   \n","16377       21009        Brunswick     7/39 Davies St      2    u   495000.0   \n","16516       21208        Glen Iris    1/16 Osborne Av      2    t   965000.0   \n","16694       21451  Patterson Lakes      6 Balarang Ct      3    h   670000.0   \n","17373       22278        Brunswick     7/39 Davies St      2    u   495000.0   \n","18038       23116           Epping        11 Simon Ct      3    h   569000.0   \n","18066       23146  Frankston South        3 Diosma Ct      3    h  1155000.0   \n","18256       23375  Patterson Lakes      6 Balarang Ct      3    h   670000.0   \n","\n","      Method        SellerG        Date  Distance  ...  Bathroom  Car  \\\n","2076      SP         LITTLE   7/11/2016       7.8  ...       1.0  1.0   \n","2093      SP         LITTLE  12/11/2016       7.8  ...       1.0  1.0   \n","3372      SP         Nelson   3/12/2016       6.4  ...       2.0  1.0   \n","3460      SP         Nelson  27/11/2016       6.4  ...       2.0  1.0   \n","4560      SP         Nelson   4/03/2017       5.6  ...       1.0  1.0   \n","4656      SP         Nelson  25/02/2017       5.6  ...       1.0  1.0   \n","4718      SP         Nelson  17/09/2016       7.5  ...       2.0  2.0   \n","4730      SP         Nelson  24/09/2016       7.5  ...       2.0  2.0   \n","5874       S            New   3/12/2016       9.9  ...       1.0  3.0   \n","5910       S            New  10/12/2016       9.9  ...       1.0  3.0   \n","6478      SP            Ray   8/10/2016      11.2  ...       1.0  2.0   \n","6556      SP            Ray  15/10/2016      11.2  ...       1.0  2.0   \n","10979     SP         Hodges  22/04/2017       4.2  ...       2.0  1.0   \n","10983     SP         Hodges  29/04/2017       4.2  ...       2.0  1.0   \n","11363     SP         Biggin   1/07/2017       2.4  ...       2.0  2.0   \n","11778     SP       McDonald   3/06/2017       6.2  ...       2.0  2.0   \n","12296     SP       McDonald  17/06/2017       6.2  ...       2.0  2.0   \n","12344     SP        Rendina  17/06/2017      11.2  ...       2.0  4.0   \n","12352     SP         Buxton  17/06/2017      21.5  ...       2.0  2.0   \n","12580      S         Nelson  24/06/2017       6.7  ...       1.0  1.0   \n","12783     SP        Rendina  24/06/2017      11.2  ...       2.0  4.0   \n","12796     SP         Buxton  24/06/2017      21.5  ...       2.0  2.0   \n","12825     SP         Biggin  24/06/2017       2.4  ...       2.0  2.0   \n","14731      S         Nelson  22/07/2017       1.6  ...       1.0  0.0   \n","14896      S         Nelson  22/07/2017       8.5  ...       1.0  1.0   \n","15084      S         Nelson  29/07/2017       1.6  ...       1.0  0.0   \n","15106      S         Nelson  29/07/2017       6.7  ...       1.0  1.0   \n","15295      S         Nelson  29/07/2017       8.5  ...       1.0  1.0   \n","15555      S  hockingstuart   3/09/2017      19.6  ...       2.0  2.0   \n","15588      S  hockingstuart   3/09/2017      38.0  ...       2.0  2.0   \n","16019      S  hockingstuart   9/09/2017       7.3  ...       2.0  1.0   \n","16377     SP         Nelson  16/09/2017       5.2  ...       1.0  1.0   \n","16516      S  hockingstuart  16/09/2017       7.3  ...       2.0  1.0   \n","16694      S  hockingstuart  16/09/2017      31.2  ...       1.0  3.0   \n","17373     SP         Nelson  23/09/2017       5.2  ...       1.0  1.0   \n","18038      S  hockingstuart  26/08/2017      19.6  ...       2.0  2.0   \n","18066      S  hockingstuart  26/08/2017      38.0  ...       2.0  2.0   \n","18256      S  hockingstuart  26/08/2017      31.2  ...       1.0  3.0   \n","\n","          Landsize  BuildingArea    YearBuilt    CouncilArea  Lattitude  \\\n","2076    896.000000      77.00000  1960.000000     Boroondara  -37.84790   \n","2093    896.000000      77.00000  1960.000000     Boroondara  -37.84790   \n","3372    319.000000     130.00000  1915.000000    Maribyrnong  -37.79430   \n","3460    319.000000     130.00000  1915.000000    Maribyrnong  -37.79430   \n","4560    745.000000      72.00000  1968.000000     Boroondara  -37.80240   \n","4656    745.000000      72.00000  1968.000000     Boroondara  -37.80240   \n","4718    458.000000     200.00000  1930.000000     Boroondara  -37.79810   \n","4730    458.000000     200.00000  1930.000000     Boroondara  -37.79810   \n","5874    629.000000     154.04925  1975.000000       Moreland  -37.73120   \n","5910    629.000000     154.04925  1975.000000       Moreland  -37.73120   \n","6478    132.000000      83.00000  1980.000000        Darebin  -37.70900   \n","6556    132.000000      83.00000  1980.000000        Darebin  -37.70900   \n","10979   309.000000     154.04925  1964.101277      Melbourne  -37.79100   \n","10983   309.000000     154.04925  1964.101277      Melbourne  -37.79100   \n","11363   180.000000     123.00000  1940.000000          Yarra  -37.81443   \n","11778   596.000000     203.00000  1950.000000  Moonee Valley  -37.76086   \n","12296   596.000000     203.00000  1950.000000  Moonee Valley  -37.76086   \n","12344   553.000000     190.00000  2001.000000       Moreland  -37.71328   \n","12352   597.000000     150.00000  1970.000000       Kingston  -37.99232   \n","12580   476.000000      97.00000  1930.000000       Moreland  -37.73883   \n","12783   553.000000     190.00000  2001.000000       Moreland  -37.71328   \n","12796   597.000000     150.00000  1970.000000       Kingston  -37.99232   \n","12825   180.000000     123.00000  1940.000000          Yarra  -37.81443   \n","14731    98.000000     154.04925  1964.101277      Melbourne  -37.79633   \n","14896   133.000000     154.04925  1964.101277       Moreland  -37.72136   \n","15084    98.000000     154.04925  1964.101277      Melbourne  -37.79633   \n","15106   476.000000      97.00000  1930.000000       Moreland  -37.73883   \n","15295   133.000000     154.04925  1964.101277       Moreland  -37.72136   \n","15555   580.576245     154.04925  1964.101277     Whittlesea  -37.63864   \n","15588  2405.000000     242.00000  1980.000000      Frankston  -38.16457   \n","16019   704.000000     154.04925  1964.101277    Stonnington  -37.85698   \n","16377   580.576245      61.00000  1970.000000       Moreland  -37.75675   \n","16516   704.000000     154.04925  1964.101277    Stonnington  -37.85698   \n","16694   580.576245     104.00000  1964.101277      Frankston  -38.07868   \n","17373   580.576245      61.00000  1970.000000       Moreland  -37.75675   \n","18038   580.576245     154.04925  1964.101277     Whittlesea  -37.63864   \n","18066  2405.000000     242.00000  1980.000000      Frankston  -38.16457   \n","18256   580.576245     104.00000  1964.101277      Frankston  -38.07868   \n","\n","      Longtitude                  Regionname  Propertycount  \n","2076   145.09580       Southern Metropolitan         8920.0  \n","2093   145.09580       Southern Metropolitan         8920.0  \n","3372   144.88750        Western Metropolitan         7570.0  \n","3460   144.88750        Western Metropolitan         7570.0  \n","4560   145.03460       Southern Metropolitan        10331.0  \n","4656   145.03460       Southern Metropolitan        10331.0  \n","4718   145.04720       Southern Metropolitan         2671.0  \n","4730   145.04720       Southern Metropolitan         2671.0  \n","5874   144.93990       Northern Metropolitan         7485.0  \n","5910   144.93990       Northern Metropolitan         7485.0  \n","6478   145.02190       Northern Metropolitan        21650.0  \n","6556   145.02190       Northern Metropolitan        21650.0  \n","10979  144.92800       Northern Metropolitan         5263.0  \n","10983  144.92800       Northern Metropolitan         5263.0  \n","11363  144.99079       Northern Metropolitan        14949.0  \n","11778  144.90497        Western Metropolitan         6232.0  \n","12296  144.90497        Western Metropolitan         6232.0  \n","12344  144.90585       Northern Metropolitan         2651.0  \n","12352  145.08469  South-Eastern Metropolitan         5087.0  \n","12580  144.95321       Northern Metropolitan        11204.0  \n","12783  144.90585       Northern Metropolitan         2651.0  \n","12796  145.08469  South-Eastern Metropolitan         5087.0  \n","12825  144.99079       Northern Metropolitan        14949.0  \n","14731  144.97269       Northern Metropolitan         6786.0  \n","14896  144.92932       Northern Metropolitan         7485.0  \n","15084  144.97269       Northern Metropolitan         6786.0  \n","15106  144.95321       Northern Metropolitan        11204.0  \n","15295  144.92932       Northern Metropolitan         7485.0  \n","15555  145.02928       Northern Metropolitan        10926.0  \n","15588  145.12421  South-Eastern Metropolitan         7566.0  \n","16019  145.04686       Southern Metropolitan        10412.0  \n","16377  144.96753       Northern Metropolitan        11918.0  \n","16516  145.04686       Southern Metropolitan        10412.0  \n","16694  145.14743  South-Eastern Metropolitan         3351.0  \n","17373  144.96753       Northern Metropolitan        11918.0  \n","18038  145.02928       Northern Metropolitan        10926.0  \n","18066  145.12421  South-Eastern Metropolitan         7566.0  \n","18256  145.14743  South-Eastern Metropolitan         3351.0  \n","\n","[38 rows x 22 columns]"]},"execution_count":35,"metadata":{},"output_type":"execute_result"}],"source":["# Show all duplicate rows based on 'Address', 'Lattitude', 'Longtitude', and 'Date'\n","duplicate_price = df[df.duplicated(subset=['Address', 'Lattitude', 'Longtitude', 'Price'], keep=False)]\n","duplicate_price"]},{"cell_type":"markdown","id":"c7865276","metadata":{"papermill":{"duration":0.030369,"end_time":"2024-10-30T16:59:44.979791","exception":false,"start_time":"2024-10-30T16:59:44.949422","status":"completed"},"tags":[]},"source":["The reason I choose those columns are the same with the first table. The house with the same price can be a duplication of the unsupposed data."]},{"cell_type":"code","execution_count":36,"id":"75198da1","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:45.044003Z","iopub.status.busy":"2024-10-30T16:59:45.043556Z","iopub.status.idle":"2024-10-30T16:59:45.05721Z","shell.execute_reply":"2024-10-30T16:59:45.056145Z"},"papermill":{"duration":0.049006,"end_time":"2024-10-30T16:59:45.06006","exception":false,"start_time":"2024-10-30T16:59:45.011054","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop duplicate rows based on 'Address', 'Lattitude', 'Longtitude', and 'Price', keeping only the first occurrence\n","df.drop_duplicates(subset=['Address', 'Lattitude', 'Longtitude', 'Price'], keep='last', inplace=True)"]},{"cell_type":"markdown","id":"5c207ffe","metadata":{"papermill":{"duration":0.029996,"end_time":"2024-10-30T16:59:45.120605","exception":false,"start_time":"2024-10-30T16:59:45.090609","status":"completed"},"tags":[]},"source":["## Correlation Matrix\n","\n","The last thing we need to consider when do data cleaning is checking their correlation. The most popular way to trace is by using Correlation Matrix"]},{"cell_type":"code","execution_count":37,"id":"6bdfcb9d","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:45.183262Z","iopub.status.busy":"2024-10-30T16:59:45.18283Z","iopub.status.idle":"2024-10-30T16:59:46.319577Z","shell.execute_reply":"2024-10-30T16:59:46.318346Z"},"papermill":{"duration":1.172586,"end_time":"2024-10-30T16:59:46.323497","exception":false,"start_time":"2024-10-30T16:59:45.150911","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 1080x504 with 2 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["# Create the figure\n","plt.figure(figsize=(15, 7))\n","\n","# Custom diverging palette from blue to red\n","cmap = sns.diverging_palette(10, 240, as_cmap=True)  # 240 is blue, 10 is red\n","\n","# Use seaborn to create the heatmap with the custom palette\n","sns.heatmap(df.corr(), annot=True, annot_kws={\"size\": 10}, cmap=cmap, vmin=-1, vmax=1)\n","\n","\n","# Give the table a title\n","plt.title(\"Correlation of Each Column\")\n","\n","# Show the table\n","plt.show()"]},{"cell_type":"markdown","id":"9cc89165","metadata":{"papermill":{"duration":0.032461,"end_time":"2024-10-30T16:59:46.388667","exception":false,"start_time":"2024-10-30T16:59:46.356206","status":"completed"},"tags":[]},"source":["The correlation matrix showed that most of the value has low correlation coefficient value. That means most of the variables are can be referred as independent variables.\n"]},{"cell_type":"markdown","id":"eeead047","metadata":{"papermill":{"duration":0.032257,"end_time":"2024-10-30T16:59:46.453383","exception":false,"start_time":"2024-10-30T16:59:46.421126","status":"completed"},"tags":[]},"source":["# Data Splitting\n","\n","The next step before creates a regression model is by splitting the data into X and y and also to train and test data. We drop the 'Price' column because that's the column we'll use to determine the quality of our model"]},{"cell_type":"code","execution_count":38,"id":"a5aa56c1","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:46.521199Z","iopub.status.busy":"2024-10-30T16:59:46.520794Z","iopub.status.idle":"2024-10-30T16:59:46.53593Z","shell.execute_reply":"2024-10-30T16:59:46.534775Z"},"papermill":{"duration":0.052078,"end_time":"2024-10-30T16:59:46.538646","exception":false,"start_time":"2024-10-30T16:59:46.486568","status":"completed"},"tags":[]},"outputs":[],"source":["# Define your features (X) and target (y) variable\n","X = df.drop('Price', axis=1)\n","y = df['Price']\n","\n","# Split the data into training and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"]},{"cell_type":"code","execution_count":39,"id":"2ef8c864","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:46.606613Z","iopub.status.busy":"2024-10-30T16:59:46.605713Z","iopub.status.idle":"2024-10-30T16:59:46.612377Z","shell.execute_reply":"2024-10-30T16:59:46.611215Z"},"papermill":{"duration":0.043403,"end_time":"2024-10-30T16:59:46.615279","exception":false,"start_time":"2024-10-30T16:59:46.571876","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["AFTER SPLITTING \n","\n","X_train set shape: \t (10256, 21)\n","y_train set shape: \t (10256,)\n","X_Test set shape: \t (2565, 21)\n","y_Test set shape: \t (2565,)\n"]}],"source":["print(\"AFTER SPLITTING \\n\")\n","print(\"X_train set shape: \\t\", X_train.shape)\n","print(\"y_train set shape: \\t\", y_train.shape)\n","print(\"X_Test set shape: \\t\", X_test.shape)\n","print(\"y_Test set shape: \\t\", y_test.shape)"]},{"cell_type":"markdown","id":"3de2a937","metadata":{"papermill":{"duration":0.032748,"end_time":"2024-10-30T16:59:46.681009","exception":false,"start_time":"2024-10-30T16:59:46.648261","status":"completed"},"tags":[]},"source":["# Feature Encoding\n","\n","From the list above we can see that there are still 6 object-type variables. So, we need to encode them into numerical variables to improve their collinearity to the 'Price'. We're going to encode them column by column with 2 encoding method.\n","\n","We'll use 'One Hot Encoding' to the column with less than 10 values and 'Label Encoder' with a column with more than 10 values"]},{"cell_type":"markdown","id":"7ce1dfa2","metadata":{"papermill":{"duration":0.033874,"end_time":"2024-10-30T16:59:46.747527","exception":false,"start_time":"2024-10-30T16:59:46.713653","status":"completed"},"tags":[]},"source":["## 1. Type\n","\n"]},{"cell_type":"code","execution_count":40,"id":"c4034f52","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:46.814636Z","iopub.status.busy":"2024-10-30T16:59:46.8142Z","iopub.status.idle":"2024-10-30T16:59:46.823777Z","shell.execute_reply":"2024-10-30T16:59:46.822655Z"},"papermill":{"duration":0.045931,"end_time":"2024-10-30T16:59:46.826226","exception":false,"start_time":"2024-10-30T16:59:46.780295","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["h    7940\n","u    1405\n","t     911\n","Name: Type, dtype: int64"]},"execution_count":40,"metadata":{},"output_type":"execute_result"}],"source":["# Count the number of each value in 'Type' column\n","X_train['Type'].value_counts()"]},{"cell_type":"code","execution_count":41,"id":"dd766a5f","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:46.895826Z","iopub.status.busy":"2024-10-30T16:59:46.894946Z","iopub.status.idle":"2024-10-30T16:59:46.913308Z","shell.execute_reply":"2024-10-30T16:59:46.912167Z"},"papermill":{"duration":0.055951,"end_time":"2024-10-30T16:59:46.916087","exception":false,"start_time":"2024-10-30T16:59:46.860136","status":"completed"},"tags":[]},"outputs":[],"source":["# Creating dummy variables for the 'Type' column on all dataframes\n","type_train = pd.get_dummies(X_train['Type'])\n","type_test = pd.get_dummies(X_test['Type'])\n","\n","# Adding these new dummy columns to the dataframes\n","X_train = X_train.join(type_train)\n","X_test = X_test.join(type_test)"]},{"cell_type":"code","execution_count":42,"id":"9abb47d0","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:46.984594Z","iopub.status.busy":"2024-10-30T16:59:46.984128Z","iopub.status.idle":"2024-10-30T16:59:46.999675Z","shell.execute_reply":"2024-10-30T16:59:46.998665Z"},"papermill":{"duration":0.053383,"end_time":"2024-10-30T16:59:47.002484","exception":false,"start_time":"2024-10-30T16:59:46.949101","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop the 'Type' column on every dataframes\n","X_train.drop('Type', axis=1, inplace=True)\n","X_test.drop('Type', axis=1, inplace=True)"]},{"cell_type":"code","execution_count":43,"id":"a3496f70","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:47.070116Z","iopub.status.busy":"2024-10-30T16:59:47.069663Z","iopub.status.idle":"2024-10-30T16:59:47.101078Z","shell.execute_reply":"2024-10-30T16:59:47.099919Z"},"papermill":{"duration":0.068292,"end_time":"2024-10-30T16:59:47.10366","exception":false,"start_time":"2024-10-30T16:59:47.035368","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>...</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>CouncilArea</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Regionname</th>\n","      <th>Propertycount</th>\n","      <th>h</th>\n","      <th>t</th>\n","      <th>u</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9291</th>\n","      <td>11926</td>\n","      <td>Oakleigh</td>\n","      <td>53 William St</td>\n","      <td>3</td>\n","      <td>SP</td>\n","      <td>Buxton</td>\n","      <td>15/10/2016</td>\n","      <td>14.0</td>\n","      <td>3166.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>146.00000</td>\n","      <td>1970.000000</td>\n","      <td>Monash</td>\n","      <td>-37.90550</td>\n","      <td>145.10240</td>\n","      <td>Southern Metropolitan</td>\n","      <td>3224.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3592</th>\n","      <td>4691</td>\n","      <td>Glen Iris</td>\n","      <td>32 Howie St</td>\n","      <td>3</td>\n","      <td>S</td>\n","      <td>Jellis</td>\n","      <td>25/02/2017</td>\n","      <td>9.2</td>\n","      <td>3146.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>140.00000</td>\n","      <td>1930.000000</td>\n","      <td>Boroondara</td>\n","      <td>-37.85420</td>\n","      <td>145.07330</td>\n","      <td>Southern Metropolitan</td>\n","      <td>10412.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4389</th>\n","      <td>5687</td>\n","      <td>Keilor East</td>\n","      <td>4a Cohen St</td>\n","      <td>3</td>\n","      <td>S</td>\n","      <td>Alexkarbon</td>\n","      <td>10/09/2016</td>\n","      <td>12.8</td>\n","      <td>3033.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>133.00000</td>\n","      <td>2003.000000</td>\n","      <td>Moonee Valley</td>\n","      <td>-37.74590</td>\n","      <td>144.86430</td>\n","      <td>Western Metropolitan</td>\n","      <td>5629.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1771</th>\n","      <td>2271</td>\n","      <td>Brunswick</td>\n","      <td>35 Percy St</td>\n","      <td>2</td>\n","      <td>S</td>\n","      <td>Chambers</td>\n","      <td>23/04/2016</td>\n","      <td>5.2</td>\n","      <td>3056.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>68.00000</td>\n","      <td>1910.000000</td>\n","      <td>Moreland</td>\n","      <td>-37.76460</td>\n","      <td>144.95860</td>\n","      <td>Northern Metropolitan</td>\n","      <td>11918.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15522</th>\n","      <td>19901</td>\n","      <td>Dandenong North</td>\n","      <td>39 Galloway St</td>\n","      <td>3</td>\n","      <td>SP</td>\n","      <td>Del</td>\n","      <td>3/09/2017</td>\n","      <td>24.7</td>\n","      <td>3175.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>Greater Dandenong</td>\n","      <td>-37.95135</td>\n","      <td>145.19806</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>8322.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 23 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0           Suburb         Address  Rooms Method     SellerG  \\\n","9291        11926         Oakleigh   53 William St      3     SP      Buxton   \n","3592         4691        Glen Iris     32 Howie St      3      S      Jellis   \n","4389         5687      Keilor East     4a Cohen St      3      S  Alexkarbon   \n","1771         2271        Brunswick     35 Percy St      2      S    Chambers   \n","15522       19901  Dandenong North  39 Galloway St      3     SP         Del   \n","\n","             Date  Distance  Postcode  Bedroom2  ...  BuildingArea  \\\n","9291   15/10/2016      14.0    3166.0       3.0  ...     146.00000   \n","3592   25/02/2017       9.2    3146.0       3.0  ...     140.00000   \n","4389   10/09/2016      12.8    3033.0       3.0  ...     133.00000   \n","1771   23/04/2016       5.2    3056.0       2.0  ...      68.00000   \n","15522   3/09/2017      24.7    3175.0       3.0  ...     154.04925   \n","\n","         YearBuilt        CouncilArea  Lattitude  Longtitude  \\\n","9291   1970.000000             Monash  -37.90550   145.10240   \n","3592   1930.000000         Boroondara  -37.85420   145.07330   \n","4389   2003.000000      Moonee Valley  -37.74590   144.86430   \n","1771   1910.000000           Moreland  -37.76460   144.95860   \n","15522  1964.101277  Greater Dandenong  -37.95135   145.19806   \n","\n","                       Regionname  Propertycount  h  t  u  \n","9291        Southern Metropolitan         3224.0  1  0  0  \n","3592        Southern Metropolitan        10412.0  1  0  0  \n","4389         Western Metropolitan         5629.0  1  0  0  \n","1771        Northern Metropolitan        11918.0  1  0  0  \n","15522  South-Eastern Metropolitan         8322.0  1  0  0  \n","\n","[5 rows x 23 columns]"]},"execution_count":43,"metadata":{},"output_type":"execute_result"}],"source":["# Show the encoding result\n","X_train.head()"]},{"cell_type":"markdown","id":"619d0646","metadata":{"papermill":{"duration":0.03343,"end_time":"2024-10-30T16:59:47.170398","exception":false,"start_time":"2024-10-30T16:59:47.136968","status":"completed"},"tags":[]},"source":["## 2. Method"]},{"cell_type":"code","execution_count":44,"id":"31f4f9e9","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:47.239932Z","iopub.status.busy":"2024-10-30T16:59:47.2395Z","iopub.status.idle":"2024-10-30T16:59:47.250135Z","shell.execute_reply":"2024-10-30T16:59:47.249061Z"},"papermill":{"duration":0.048147,"end_time":"2024-10-30T16:59:47.252571","exception":false,"start_time":"2024-10-30T16:59:47.204424","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["S     6958\n","SP    1245\n","PI    1145\n","VB     843\n","SA      65\n","Name: Method, dtype: int64"]},"execution_count":44,"metadata":{},"output_type":"execute_result"}],"source":["# Count the number of each value in 'Method' column\n","X_train['Method'].value_counts()"]},{"cell_type":"code","execution_count":45,"id":"ad83848e","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:47.322613Z","iopub.status.busy":"2024-10-30T16:59:47.322141Z","iopub.status.idle":"2024-10-30T16:59:47.337889Z","shell.execute_reply":"2024-10-30T16:59:47.336673Z"},"papermill":{"duration":0.054674,"end_time":"2024-10-30T16:59:47.340797","exception":false,"start_time":"2024-10-30T16:59:47.286123","status":"completed"},"tags":[]},"outputs":[],"source":["# Creating dummy variables for the 'Method' column on all dataframes\n","method_train = pd.get_dummies(X_train['Method'])\n","method_test = pd.get_dummies(X_test['Method'])\n","\n","# Adding these new dummy columns to the dataframes\n","X_train = X_train.join(method_train)\n","X_test = X_test.join(method_test)"]},{"cell_type":"code","execution_count":46,"id":"7fbb4a74","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:47.409877Z","iopub.status.busy":"2024-10-30T16:59:47.409382Z","iopub.status.idle":"2024-10-30T16:59:47.423548Z","shell.execute_reply":"2024-10-30T16:59:47.422631Z"},"papermill":{"duration":0.051368,"end_time":"2024-10-30T16:59:47.42626","exception":false,"start_time":"2024-10-30T16:59:47.374892","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop the 'Method' column on every dataframes\n","X_train.drop('Method', axis=1, inplace=True)\n","X_test.drop('Method', axis=1, inplace=True)"]},{"cell_type":"code","execution_count":47,"id":"e18a14ef","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:47.494728Z","iopub.status.busy":"2024-10-30T16:59:47.493849Z","iopub.status.idle":"2024-10-30T16:59:47.521565Z","shell.execute_reply":"2024-10-30T16:59:47.520328Z"},"papermill":{"duration":0.064861,"end_time":"2024-10-30T16:59:47.524199","exception":false,"start_time":"2024-10-30T16:59:47.459338","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>...</th>\n","      <th>Regionname</th>\n","      <th>Propertycount</th>\n","      <th>h</th>\n","      <th>t</th>\n","      <th>u</th>\n","      <th>PI</th>\n","      <th>S</th>\n","      <th>SA</th>\n","      <th>SP</th>\n","      <th>VB</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9291</th>\n","      <td>11926</td>\n","      <td>Oakleigh</td>\n","      <td>53 William St</td>\n","      <td>3</td>\n","      <td>Buxton</td>\n","      <td>15/10/2016</td>\n","      <td>14.0</td>\n","      <td>3166.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>Southern Metropolitan</td>\n","      <td>3224.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3592</th>\n","      <td>4691</td>\n","      <td>Glen Iris</td>\n","      <td>32 Howie St</td>\n","      <td>3</td>\n","      <td>Jellis</td>\n","      <td>25/02/2017</td>\n","      <td>9.2</td>\n","      <td>3146.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>Southern Metropolitan</td>\n","      <td>10412.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4389</th>\n","      <td>5687</td>\n","      <td>Keilor East</td>\n","      <td>4a Cohen St</td>\n","      <td>3</td>\n","      <td>Alexkarbon</td>\n","      <td>10/09/2016</td>\n","      <td>12.8</td>\n","      <td>3033.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>Western Metropolitan</td>\n","      <td>5629.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1771</th>\n","      <td>2271</td>\n","      <td>Brunswick</td>\n","      <td>35 Percy St</td>\n","      <td>2</td>\n","      <td>Chambers</td>\n","      <td>23/04/2016</td>\n","      <td>5.2</td>\n","      <td>3056.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>Northern Metropolitan</td>\n","      <td>11918.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15522</th>\n","      <td>19901</td>\n","      <td>Dandenong North</td>\n","      <td>39 Galloway St</td>\n","      <td>3</td>\n","      <td>Del</td>\n","      <td>3/09/2017</td>\n","      <td>24.7</td>\n","      <td>3175.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>South-Eastern Metropolitan</td>\n","      <td>8322.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 27 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0           Suburb         Address  Rooms     SellerG  \\\n","9291        11926         Oakleigh   53 William St      3      Buxton   \n","3592         4691        Glen Iris     32 Howie St      3      Jellis   \n","4389         5687      Keilor East     4a Cohen St      3  Alexkarbon   \n","1771         2271        Brunswick     35 Percy St      2    Chambers   \n","15522       19901  Dandenong North  39 Galloway St      3         Del   \n","\n","             Date  Distance  Postcode  Bedroom2  Bathroom  ...  \\\n","9291   15/10/2016      14.0    3166.0       3.0       2.0  ...   \n","3592   25/02/2017       9.2    3146.0       3.0       1.0  ...   \n","4389   10/09/2016      12.8    3033.0       3.0       1.0  ...   \n","1771   23/04/2016       5.2    3056.0       2.0       1.0  ...   \n","15522   3/09/2017      24.7    3175.0       3.0       1.0  ...   \n","\n","                       Regionname  Propertycount  h  t  u  PI  S SA  SP  VB  \n","9291        Southern Metropolitan         3224.0  1  0  0   0  0  0   1   0  \n","3592        Southern Metropolitan        10412.0  1  0  0   0  1  0   0   0  \n","4389         Western Metropolitan         5629.0  1  0  0   0  1  0   0   0  \n","1771        Northern Metropolitan        11918.0  1  0  0   0  1  0   0   0  \n","15522  South-Eastern Metropolitan         8322.0  1  0  0   0  0  0   1   0  \n","\n","[5 rows x 27 columns]"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["# Show the encoding result\n","X_train.head()"]},{"cell_type":"markdown","id":"101b5303","metadata":{"papermill":{"duration":0.033412,"end_time":"2024-10-30T16:59:47.591259","exception":false,"start_time":"2024-10-30T16:59:47.557847","status":"completed"},"tags":[]},"source":["## 3. Regionname"]},{"cell_type":"code","execution_count":48,"id":"5a9290b4","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:47.659783Z","iopub.status.busy":"2024-10-30T16:59:47.65935Z","iopub.status.idle":"2024-10-30T16:59:47.669339Z","shell.execute_reply":"2024-10-30T16:59:47.668176Z"},"papermill":{"duration":0.047368,"end_time":"2024-10-30T16:59:47.671905","exception":false,"start_time":"2024-10-30T16:59:47.624537","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Southern Metropolitan         3185\n","Northern Metropolitan         2915\n","Western Metropolitan          2303\n","Eastern Metropolitan          1294\n","South-Eastern Metropolitan     438\n","Eastern Victoria                49\n","Northern Victoria               41\n","Western Victoria                31\n","Name: Regionname, dtype: int64"]},"execution_count":48,"metadata":{},"output_type":"execute_result"}],"source":["# Count the number of each value in 'Regionname' column\n","X_train['Regionname'].value_counts()"]},{"cell_type":"code","execution_count":49,"id":"f93571e5","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:47.743627Z","iopub.status.busy":"2024-10-30T16:59:47.742703Z","iopub.status.idle":"2024-10-30T16:59:47.757269Z","shell.execute_reply":"2024-10-30T16:59:47.756241Z"},"papermill":{"duration":0.054167,"end_time":"2024-10-30T16:59:47.759951","exception":false,"start_time":"2024-10-30T16:59:47.705784","status":"completed"},"tags":[]},"outputs":[],"source":["# Creating dummy variables for the 'Regionname' column on all dataframes\n","region_train = pd.get_dummies(X_train['Regionname'])\n","region_test = pd.get_dummies(X_test['Regionname'])\n","\n","# Adding these new dummy columns to the dataframes\n","X_train = X_train.join(region_train)\n","X_test = X_test.join(region_test)"]},{"cell_type":"code","execution_count":50,"id":"58ac0985","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:47.828382Z","iopub.status.busy":"2024-10-30T16:59:47.827977Z","iopub.status.idle":"2024-10-30T16:59:47.840388Z","shell.execute_reply":"2024-10-30T16:59:47.839381Z"},"papermill":{"duration":0.049671,"end_time":"2024-10-30T16:59:47.843031","exception":false,"start_time":"2024-10-30T16:59:47.79336","status":"completed"},"tags":[]},"outputs":[],"source":["# Drop the 'Regionname' column on every dataframes\n","X_train.drop('Regionname', axis=1, inplace=True)\n","X_test.drop('Regionname', axis=1, inplace=True)"]},{"cell_type":"code","execution_count":51,"id":"9527730a","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:47.912666Z","iopub.status.busy":"2024-10-30T16:59:47.911653Z","iopub.status.idle":"2024-10-30T16:59:47.937352Z","shell.execute_reply":"2024-10-30T16:59:47.93629Z"},"papermill":{"duration":0.062988,"end_time":"2024-10-30T16:59:47.939672","exception":false,"start_time":"2024-10-30T16:59:47.876684","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>...</th>\n","      <th>SP</th>\n","      <th>VB</th>\n","      <th>Eastern Metropolitan</th>\n","      <th>Eastern Victoria</th>\n","      <th>Northern Metropolitan</th>\n","      <th>Northern Victoria</th>\n","      <th>South-Eastern Metropolitan</th>\n","      <th>Southern Metropolitan</th>\n","      <th>Western Metropolitan</th>\n","      <th>Western Victoria</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9291</th>\n","      <td>11926</td>\n","      <td>Oakleigh</td>\n","      <td>53 William St</td>\n","      <td>3</td>\n","      <td>Buxton</td>\n","      <td>15/10/2016</td>\n","      <td>14.0</td>\n","      <td>3166.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3592</th>\n","      <td>4691</td>\n","      <td>Glen Iris</td>\n","      <td>32 Howie St</td>\n","      <td>3</td>\n","      <td>Jellis</td>\n","      <td>25/02/2017</td>\n","      <td>9.2</td>\n","      <td>3146.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4389</th>\n","      <td>5687</td>\n","      <td>Keilor East</td>\n","      <td>4a Cohen St</td>\n","      <td>3</td>\n","      <td>Alexkarbon</td>\n","      <td>10/09/2016</td>\n","      <td>12.8</td>\n","      <td>3033.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1771</th>\n","      <td>2271</td>\n","      <td>Brunswick</td>\n","      <td>35 Percy St</td>\n","      <td>2</td>\n","      <td>Chambers</td>\n","      <td>23/04/2016</td>\n","      <td>5.2</td>\n","      <td>3056.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15522</th>\n","      <td>19901</td>\n","      <td>Dandenong North</td>\n","      <td>39 Galloway St</td>\n","      <td>3</td>\n","      <td>Del</td>\n","      <td>3/09/2017</td>\n","      <td>24.7</td>\n","      <td>3175.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 34 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0           Suburb         Address  Rooms     SellerG  \\\n","9291        11926         Oakleigh   53 William St      3      Buxton   \n","3592         4691        Glen Iris     32 Howie St      3      Jellis   \n","4389         5687      Keilor East     4a Cohen St      3  Alexkarbon   \n","1771         2271        Brunswick     35 Percy St      2    Chambers   \n","15522       19901  Dandenong North  39 Galloway St      3         Del   \n","\n","             Date  Distance  Postcode  Bedroom2  Bathroom  ...  SP  VB  \\\n","9291   15/10/2016      14.0    3166.0       3.0       2.0  ...   1   0   \n","3592   25/02/2017       9.2    3146.0       3.0       1.0  ...   0   0   \n","4389   10/09/2016      12.8    3033.0       3.0       1.0  ...   0   0   \n","1771   23/04/2016       5.2    3056.0       2.0       1.0  ...   0   0   \n","15522   3/09/2017      24.7    3175.0       3.0       1.0  ...   1   0   \n","\n","       Eastern Metropolitan  Eastern Victoria Northern Metropolitan  \\\n","9291                      0                 0                     0   \n","3592                      0                 0                     0   \n","4389                      0                 0                     0   \n","1771                      0                 0                     1   \n","15522                     0                 0                     0   \n","\n","       Northern Victoria  South-Eastern Metropolitan  Southern Metropolitan  \\\n","9291                   0                           0                      1   \n","3592                   0                           0                      1   \n","4389                   0                           0                      0   \n","1771                   0                           0                      0   \n","15522                  0                           1                      0   \n","\n","       Western Metropolitan  Western Victoria  \n","9291                      0                 0  \n","3592                      0                 0  \n","4389                      1                 0  \n","1771                      0                 0  \n","15522                     0                 0  \n","\n","[5 rows x 34 columns]"]},"execution_count":51,"metadata":{},"output_type":"execute_result"}],"source":["# Show the encoding result\n","X_train.head()"]},{"cell_type":"markdown","id":"b186b44b","metadata":{"papermill":{"duration":0.034024,"end_time":"2024-10-30T16:59:48.007629","exception":false,"start_time":"2024-10-30T16:59:47.973605","status":"completed"},"tags":[]},"source":["## 4. SellerG"]},{"cell_type":"code","execution_count":52,"id":"10cfdcb6","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:48.077381Z","iopub.status.busy":"2024-10-30T16:59:48.076965Z","iopub.status.idle":"2024-10-30T16:59:48.087337Z","shell.execute_reply":"2024-10-30T16:59:48.086274Z"},"papermill":{"duration":0.048054,"end_time":"2024-10-30T16:59:48.089705","exception":false,"start_time":"2024-10-30T16:59:48.041651","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Nelson           1171\n","Jellis            977\n","Barry             858\n","hockingstuart     801\n","Ray               585\n","                 ... \n","JRW                 1\n","WHITEFOX            1\n","Crane               1\n","Elite               1\n","Rounds              1\n","Name: SellerG, Length: 251, dtype: int64"]},"execution_count":52,"metadata":{},"output_type":"execute_result"}],"source":["# Count the number of each value in 'SellerG' column\n","X_train['SellerG'].value_counts()"]},{"cell_type":"code","execution_count":53,"id":"fc70ace3","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:48.159791Z","iopub.status.busy":"2024-10-30T16:59:48.158811Z","iopub.status.idle":"2024-10-30T16:59:48.174156Z","shell.execute_reply":"2024-10-30T16:59:48.173251Z"},"papermill":{"duration":0.052833,"end_time":"2024-10-30T16:59:48.176526","exception":false,"start_time":"2024-10-30T16:59:48.123693","status":"completed"},"tags":[]},"outputs":[],"source":["# Initialize LabelEncoder\n","label_encoder = LabelEncoder()\n","\n","# Encode the 'Seller' column\n","X_train['Seller_Encoded'] = label_encoder.fit_transform(X_train['SellerG'])\n","X_test['Seller_Encoded'] = label_encoder.fit_transform(X_test['SellerG'])\n","\n","# Drop the 'SellerG' column\n","X_train.drop('SellerG', axis=1, inplace=True)\n","X_test.drop('SellerG', axis=1, inplace=True)"]},{"cell_type":"code","execution_count":54,"id":"8568dd67","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:48.247533Z","iopub.status.busy":"2024-10-30T16:59:48.246617Z","iopub.status.idle":"2024-10-30T16:59:48.271976Z","shell.execute_reply":"2024-10-30T16:59:48.270806Z"},"papermill":{"duration":0.063023,"end_time":"2024-10-30T16:59:48.274441","exception":false,"start_time":"2024-10-30T16:59:48.211418","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>...</th>\n","      <th>VB</th>\n","      <th>Eastern Metropolitan</th>\n","      <th>Eastern Victoria</th>\n","      <th>Northern Metropolitan</th>\n","      <th>Northern Victoria</th>\n","      <th>South-Eastern Metropolitan</th>\n","      <th>Southern Metropolitan</th>\n","      <th>Western Metropolitan</th>\n","      <th>Western Victoria</th>\n","      <th>Seller_Encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9291</th>\n","      <td>11926</td>\n","      <td>Oakleigh</td>\n","      <td>53 William St</td>\n","      <td>3</td>\n","      <td>15/10/2016</td>\n","      <td>14.0</td>\n","      <td>3166.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>3592</th>\n","      <td>4691</td>\n","      <td>Glen Iris</td>\n","      <td>32 Howie St</td>\n","      <td>3</td>\n","      <td>25/02/2017</td>\n","      <td>9.2</td>\n","      <td>3146.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>99</td>\n","    </tr>\n","    <tr>\n","      <th>4389</th>\n","      <td>5687</td>\n","      <td>Keilor East</td>\n","      <td>4a Cohen St</td>\n","      <td>3</td>\n","      <td>10/09/2016</td>\n","      <td>12.8</td>\n","      <td>3033.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1771</th>\n","      <td>2271</td>\n","      <td>Brunswick</td>\n","      <td>35 Percy St</td>\n","      <td>2</td>\n","      <td>23/04/2016</td>\n","      <td>5.2</td>\n","      <td>3056.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>15522</th>\n","      <td>19901</td>\n","      <td>Dandenong North</td>\n","      <td>39 Galloway St</td>\n","      <td>3</td>\n","      <td>3/09/2017</td>\n","      <td>24.7</td>\n","      <td>3175.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>59</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 34 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0           Suburb         Address  Rooms        Date  \\\n","9291        11926         Oakleigh   53 William St      3  15/10/2016   \n","3592         4691        Glen Iris     32 Howie St      3  25/02/2017   \n","4389         5687      Keilor East     4a Cohen St      3  10/09/2016   \n","1771         2271        Brunswick     35 Percy St      2  23/04/2016   \n","15522       19901  Dandenong North  39 Galloway St      3   3/09/2017   \n","\n","       Distance  Postcode  Bedroom2  Bathroom  Car  ...  VB  \\\n","9291       14.0    3166.0       3.0       2.0  2.0  ...   0   \n","3592        9.2    3146.0       3.0       1.0  3.0  ...   0   \n","4389       12.8    3033.0       3.0       1.0  1.0  ...   0   \n","1771        5.2    3056.0       2.0       1.0  1.0  ...   0   \n","15522      24.7    3175.0       3.0       1.0  2.0  ...   0   \n","\n","       Eastern Metropolitan  Eastern Victoria Northern Metropolitan  \\\n","9291                      0                 0                     0   \n","3592                      0                 0                     0   \n","4389                      0                 0                     0   \n","1771                      0                 0                     1   \n","15522                     0                 0                     0   \n","\n","       Northern Victoria  South-Eastern Metropolitan  Southern Metropolitan  \\\n","9291                   0                           0                      1   \n","3592                   0                           0                      1   \n","4389                   0                           0                      0   \n","1771                   0                           0                      0   \n","15522                  0                           1                      0   \n","\n","       Western Metropolitan  Western Victoria  Seller_Encoded  \n","9291                      0                 0              31  \n","3592                      0                 0              99  \n","4389                      1                 0               3  \n","1771                      0                 0              40  \n","15522                     0                 0              59  \n","\n","[5 rows x 34 columns]"]},"execution_count":54,"metadata":{},"output_type":"execute_result"}],"source":["# Show the encoding result\n","X_train.head()"]},{"cell_type":"markdown","id":"be1f439c","metadata":{"papermill":{"duration":0.035329,"end_time":"2024-10-30T16:59:48.343978","exception":false,"start_time":"2024-10-30T16:59:48.308649","status":"completed"},"tags":[]},"source":["## 5. Suburb"]},{"cell_type":"code","execution_count":55,"id":"50592b49","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:48.41407Z","iopub.status.busy":"2024-10-30T16:59:48.413677Z","iopub.status.idle":"2024-10-30T16:59:48.42447Z","shell.execute_reply":"2024-10-30T16:59:48.423321Z"},"papermill":{"duration":0.048577,"end_time":"2024-10-30T16:59:48.426853","exception":false,"start_time":"2024-10-30T16:59:48.378276","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Reservoir           297\n","Bentleigh East      203\n","Preston             182\n","Richmond            177\n","Brunswick           163\n","                   ... \n","Deepdene              1\n","Burnside              1\n","Cranbourne North      1\n","Monbulk               1\n","Healesville           1\n","Name: Suburb, Length: 311, dtype: int64"]},"execution_count":55,"metadata":{},"output_type":"execute_result"}],"source":["# Count the number of each value in 'Suburb' column\n","X_train['Suburb'].value_counts()"]},{"cell_type":"code","execution_count":56,"id":"05e3ebb9","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:48.497848Z","iopub.status.busy":"2024-10-30T16:59:48.49742Z","iopub.status.idle":"2024-10-30T16:59:48.515138Z","shell.execute_reply":"2024-10-30T16:59:48.513977Z"},"papermill":{"duration":0.05668,"end_time":"2024-10-30T16:59:48.517802","exception":false,"start_time":"2024-10-30T16:59:48.461122","status":"completed"},"tags":[]},"outputs":[],"source":["# Encode the 'Suburb' column\n","X_train['Suburb_Encoded'] = label_encoder.fit_transform(X_train['Suburb'])\n","X_test['Suburb_Encoded'] = label_encoder.fit_transform(X_test['Suburb'])\n","\n","# Drop the column\n","X_train.drop('Suburb', axis=1, inplace=True)\n","X_test.drop('Suburb', axis=1, inplace=True)"]},{"cell_type":"code","execution_count":57,"id":"719f0f58","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:48.589412Z","iopub.status.busy":"2024-10-30T16:59:48.588566Z","iopub.status.idle":"2024-10-30T16:59:48.613792Z","shell.execute_reply":"2024-10-30T16:59:48.612718Z"},"papermill":{"duration":0.063367,"end_time":"2024-10-30T16:59:48.616071","exception":false,"start_time":"2024-10-30T16:59:48.552704","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>...</th>\n","      <th>Eastern Metropolitan</th>\n","      <th>Eastern Victoria</th>\n","      <th>Northern Metropolitan</th>\n","      <th>Northern Victoria</th>\n","      <th>South-Eastern Metropolitan</th>\n","      <th>Southern Metropolitan</th>\n","      <th>Western Metropolitan</th>\n","      <th>Western Victoria</th>\n","      <th>Seller_Encoded</th>\n","      <th>Suburb_Encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9291</th>\n","      <td>11926</td>\n","      <td>53 William St</td>\n","      <td>3</td>\n","      <td>15/10/2016</td>\n","      <td>14.0</td>\n","      <td>3166.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>544.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>31</td>\n","      <td>221</td>\n","    </tr>\n","    <tr>\n","      <th>3592</th>\n","      <td>4691</td>\n","      <td>32 Howie St</td>\n","      <td>3</td>\n","      <td>25/02/2017</td>\n","      <td>9.2</td>\n","      <td>3146.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>609.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>99</td>\n","      <td>135</td>\n","    </tr>\n","    <tr>\n","      <th>4389</th>\n","      <td>5687</td>\n","      <td>4a Cohen St</td>\n","      <td>3</td>\n","      <td>10/09/2016</td>\n","      <td>12.8</td>\n","      <td>3033.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>412.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>165</td>\n","    </tr>\n","    <tr>\n","      <th>1771</th>\n","      <td>2271</td>\n","      <td>35 Percy St</td>\n","      <td>2</td>\n","      <td>23/04/2016</td>\n","      <td>5.2</td>\n","      <td>3056.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>161.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>15522</th>\n","      <td>19901</td>\n","      <td>39 Galloway St</td>\n","      <td>3</td>\n","      <td>3/09/2017</td>\n","      <td>24.7</td>\n","      <td>3175.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>544.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>59</td>\n","      <td>94</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 34 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0         Address  Rooms        Date  Distance  Postcode  \\\n","9291        11926   53 William St      3  15/10/2016      14.0    3166.0   \n","3592         4691     32 Howie St      3  25/02/2017       9.2    3146.0   \n","4389         5687     4a Cohen St      3  10/09/2016      12.8    3033.0   \n","1771         2271     35 Percy St      2  23/04/2016       5.2    3056.0   \n","15522       19901  39 Galloway St      3   3/09/2017      24.7    3175.0   \n","\n","       Bedroom2  Bathroom  Car  Landsize  ...  Eastern Metropolitan  \\\n","9291        3.0       2.0  2.0     544.0  ...                     0   \n","3592        3.0       1.0  3.0     609.0  ...                     0   \n","4389        3.0       1.0  1.0     412.0  ...                     0   \n","1771        2.0       1.0  1.0     161.0  ...                     0   \n","15522       3.0       1.0  2.0     544.0  ...                     0   \n","\n","       Eastern Victoria Northern Metropolitan  Northern Victoria  \\\n","9291                  0                     0                  0   \n","3592                  0                     0                  0   \n","4389                  0                     0                  0   \n","1771                  0                     1                  0   \n","15522                 0                     0                  0   \n","\n","       South-Eastern Metropolitan  Southern Metropolitan  \\\n","9291                            0                      1   \n","3592                            0                      1   \n","4389                            0                      0   \n","1771                            0                      0   \n","15522                           1                      0   \n","\n","       Western Metropolitan  Western Victoria  Seller_Encoded  Suburb_Encoded  \n","9291                      0                 0              31             221  \n","3592                      0                 0              99             135  \n","4389                      1                 0               3             165  \n","1771                      0                 0              40              46  \n","15522                     0                 0              59              94  \n","\n","[5 rows x 34 columns]"]},"execution_count":57,"metadata":{},"output_type":"execute_result"}],"source":["# Show the encoding result\n","X_train.head()"]},{"cell_type":"markdown","id":"c8fd17c5","metadata":{"papermill":{"duration":0.034554,"end_time":"2024-10-30T16:59:48.685488","exception":false,"start_time":"2024-10-30T16:59:48.650934","status":"completed"},"tags":[]},"source":["## 6. Council Aera"]},{"cell_type":"code","execution_count":58,"id":"93f7aa43","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:48.758855Z","iopub.status.busy":"2024-10-30T16:59:48.757871Z","iopub.status.idle":"2024-10-30T16:59:48.768061Z","shell.execute_reply":"2024-10-30T16:59:48.767025Z"},"papermill":{"duration":0.05022,"end_time":"2024-10-30T16:59:48.770392","exception":false,"start_time":"2024-10-30T16:59:48.720172","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Moreland             964\n","Boroondara           908\n","Moonee Valley        786\n","Darebin              775\n","Glen Eira            648\n","Banyule              548\n","Maribyrnong          524\n","Yarra                459\n","Stonnington          435\n","Bayside              434\n","Brimbank             411\n","Hobsons Bay          378\n","Monash               372\n","Port Phillip         346\n","Whitehorse           319\n","Manningham           311\n","Kingston             265\n","Hume                 239\n","Melbourne            230\n","Whittlesea           228\n","Wyndham              113\n","Maroondah            110\n","Knox                  95\n","Melton                82\n","Frankston             75\n","Greater Dandenong     69\n","Nillumbik             49\n","Casey                 44\n","Yarra Ranges          18\n","Macedon Ranges        10\n","Cardinia               9\n","Moorabool              1\n","Unavailable            1\n","Name: CouncilArea, dtype: int64"]},"execution_count":58,"metadata":{},"output_type":"execute_result"}],"source":["# Count the number of each value in 'CouncilArea' column\n","X_train['CouncilArea'].value_counts()"]},{"cell_type":"code","execution_count":59,"id":"77df9a32","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:48.842478Z","iopub.status.busy":"2024-10-30T16:59:48.84204Z","iopub.status.idle":"2024-10-30T16:59:48.859508Z","shell.execute_reply":"2024-10-30T16:59:48.858533Z"},"papermill":{"duration":0.056433,"end_time":"2024-10-30T16:59:48.862362","exception":false,"start_time":"2024-10-30T16:59:48.805929","status":"completed"},"tags":[]},"outputs":[],"source":["# Encode the 'CouncilArea' column\n","X_train['Council_Encoded'] = label_encoder.fit_transform(X_train['CouncilArea'])\n","X_test['Council_Encoded'] = label_encoder.fit_transform(X_test['CouncilArea'])\n","\n","# Drop the column\n","X_train.drop('CouncilArea', axis=1, inplace=True)\n","X_test.drop('CouncilArea', axis=1, inplace=True)"]},{"cell_type":"code","execution_count":60,"id":"da4d425b","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:48.934152Z","iopub.status.busy":"2024-10-30T16:59:48.933732Z","iopub.status.idle":"2024-10-30T16:59:48.960401Z","shell.execute_reply":"2024-10-30T16:59:48.959216Z"},"papermill":{"duration":0.065614,"end_time":"2024-10-30T16:59:48.963015","exception":false,"start_time":"2024-10-30T16:59:48.897401","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>...</th>\n","      <th>Eastern Victoria</th>\n","      <th>Northern Metropolitan</th>\n","      <th>Northern Victoria</th>\n","      <th>South-Eastern Metropolitan</th>\n","      <th>Southern Metropolitan</th>\n","      <th>Western Metropolitan</th>\n","      <th>Western Victoria</th>\n","      <th>Seller_Encoded</th>\n","      <th>Suburb_Encoded</th>\n","      <th>Council_Encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9291</th>\n","      <td>11926</td>\n","      <td>53 William St</td>\n","      <td>3</td>\n","      <td>15/10/2016</td>\n","      <td>14.0</td>\n","      <td>3166.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>544.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>31</td>\n","      <td>221</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>3592</th>\n","      <td>4691</td>\n","      <td>32 Howie St</td>\n","      <td>3</td>\n","      <td>25/02/2017</td>\n","      <td>9.2</td>\n","      <td>3146.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>609.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>99</td>\n","      <td>135</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4389</th>\n","      <td>5687</td>\n","      <td>4a Cohen St</td>\n","      <td>3</td>\n","      <td>10/09/2016</td>\n","      <td>12.8</td>\n","      <td>3033.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>412.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>165</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>1771</th>\n","      <td>2271</td>\n","      <td>35 Percy St</td>\n","      <td>2</td>\n","      <td>23/04/2016</td>\n","      <td>5.2</td>\n","      <td>3056.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>161.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>46</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>15522</th>\n","      <td>19901</td>\n","      <td>39 Galloway St</td>\n","      <td>3</td>\n","      <td>3/09/2017</td>\n","      <td>24.7</td>\n","      <td>3175.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>544.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>59</td>\n","      <td>94</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 34 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0         Address  Rooms        Date  Distance  Postcode  \\\n","9291        11926   53 William St      3  15/10/2016      14.0    3166.0   \n","3592         4691     32 Howie St      3  25/02/2017       9.2    3146.0   \n","4389         5687     4a Cohen St      3  10/09/2016      12.8    3033.0   \n","1771         2271     35 Percy St      2  23/04/2016       5.2    3056.0   \n","15522       19901  39 Galloway St      3   3/09/2017      24.7    3175.0   \n","\n","       Bedroom2  Bathroom  Car  Landsize  ...  Eastern Victoria  \\\n","9291        3.0       2.0  2.0     544.0  ...                 0   \n","3592        3.0       1.0  3.0     609.0  ...                 0   \n","4389        3.0       1.0  1.0     412.0  ...                 0   \n","1771        2.0       1.0  1.0     161.0  ...                 0   \n","15522       3.0       1.0  2.0     544.0  ...                 0   \n","\n","       Northern Metropolitan  Northern Victoria  South-Eastern Metropolitan  \\\n","9291                       0                  0                           0   \n","3592                       0                  0                           0   \n","4389                       0                  0                           0   \n","1771                       1                  0                           0   \n","15522                      0                  0                           1   \n","\n","       Southern Metropolitan  Western Metropolitan  Western Victoria  \\\n","9291                       1                     0                 0   \n","3592                       1                     0                 0   \n","4389                       0                     1                 0   \n","1771                       0                     0                 0   \n","15522                      0                     0                 0   \n","\n","       Seller_Encoded  Suburb_Encoded  Council_Encoded  \n","9291               31             221               20  \n","3592               99             135                2  \n","4389                3             165               21  \n","1771               40              46               23  \n","15522              59              94                9  \n","\n","[5 rows x 34 columns]"]},"execution_count":60,"metadata":{},"output_type":"execute_result"}],"source":["# Show the encoding result\n","X_train.head()"]},{"cell_type":"markdown","id":"b66c0c55","metadata":{"papermill":{"duration":0.035536,"end_time":"2024-10-30T16:59:49.033896","exception":false,"start_time":"2024-10-30T16:59:48.99836","status":"completed"},"tags":[]},"source":["## 7. Address"]},{"cell_type":"code","execution_count":61,"id":"ae1a4f50","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:49.10665Z","iopub.status.busy":"2024-10-30T16:59:49.106221Z","iopub.status.idle":"2024-10-30T16:59:49.122035Z","shell.execute_reply":"2024-10-30T16:59:49.120835Z"},"papermill":{"duration":0.055268,"end_time":"2024-10-30T16:59:49.12451","exception":false,"start_time":"2024-10-30T16:59:49.069242","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["53 William St      3\n","13 Robinson St     3\n","28 Blair St        3\n","2 Bruce St         3\n","5 Charles St       3\n","                  ..\n","1 Dundee Ct        1\n","3/2 Cooper St      1\n","24 Yallop Ct       1\n","504/79 River St    1\n","14 Wardrop Gr      1\n","Name: Address, Length: 10142, dtype: int64"]},"execution_count":61,"metadata":{},"output_type":"execute_result"}],"source":["# Count the number of each value in 'Address' column\n","X_train['Address'].value_counts()"]},{"cell_type":"code","execution_count":62,"id":"32236ea5","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:49.197434Z","iopub.status.busy":"2024-10-30T16:59:49.197044Z","iopub.status.idle":"2024-10-30T16:59:49.242299Z","shell.execute_reply":"2024-10-30T16:59:49.241174Z"},"papermill":{"duration":0.085254,"end_time":"2024-10-30T16:59:49.245098","exception":false,"start_time":"2024-10-30T16:59:49.159844","status":"completed"},"tags":[]},"outputs":[],"source":["# Encode the 'Address' column\n","X_train['Address_Encoded'] = label_encoder.fit_transform(X_train['Address'])\n","X_test['Address_Encoded'] = label_encoder.fit_transform(X_test['Address'])\n","\n","# Drop the column\n","X_train.drop('Address', axis=1, inplace=True)\n","X_test.drop('Address', axis=1, inplace=True)"]},{"cell_type":"code","execution_count":63,"id":"8478ebee","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:49.31803Z","iopub.status.busy":"2024-10-30T16:59:49.317607Z","iopub.status.idle":"2024-10-30T16:59:49.342793Z","shell.execute_reply":"2024-10-30T16:59:49.341769Z"},"papermill":{"duration":0.064264,"end_time":"2024-10-30T16:59:49.34507","exception":false,"start_time":"2024-10-30T16:59:49.280806","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Rooms</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>...</th>\n","      <th>Northern Metropolitan</th>\n","      <th>Northern Victoria</th>\n","      <th>South-Eastern Metropolitan</th>\n","      <th>Southern Metropolitan</th>\n","      <th>Western Metropolitan</th>\n","      <th>Western Victoria</th>\n","      <th>Seller_Encoded</th>\n","      <th>Suburb_Encoded</th>\n","      <th>Council_Encoded</th>\n","      <th>Address_Encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9291</th>\n","      <td>11926</td>\n","      <td>3</td>\n","      <td>15/10/2016</td>\n","      <td>14.0</td>\n","      <td>3166.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>544.0</td>\n","      <td>146.00000</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>31</td>\n","      <td>221</td>\n","      <td>20</td>\n","      <td>8001</td>\n","    </tr>\n","    <tr>\n","      <th>3592</th>\n","      <td>4691</td>\n","      <td>3</td>\n","      <td>25/02/2017</td>\n","      <td>9.2</td>\n","      <td>3146.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>609.0</td>\n","      <td>140.00000</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>99</td>\n","      <td>135</td>\n","      <td>2</td>\n","      <td>5818</td>\n","    </tr>\n","    <tr>\n","      <th>4389</th>\n","      <td>5687</td>\n","      <td>3</td>\n","      <td>10/09/2016</td>\n","      <td>12.8</td>\n","      <td>3033.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>412.0</td>\n","      <td>133.00000</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>165</td>\n","      <td>21</td>\n","      <td>7474</td>\n","    </tr>\n","    <tr>\n","      <th>1771</th>\n","      <td>2271</td>\n","      <td>2</td>\n","      <td>23/04/2016</td>\n","      <td>5.2</td>\n","      <td>3056.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>161.0</td>\n","      <td>68.00000</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>46</td>\n","      <td>23</td>\n","      <td>6120</td>\n","    </tr>\n","    <tr>\n","      <th>15522</th>\n","      <td>19901</td>\n","      <td>3</td>\n","      <td>3/09/2017</td>\n","      <td>24.7</td>\n","      <td>3175.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>544.0</td>\n","      <td>154.04925</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>59</td>\n","      <td>94</td>\n","      <td>9</td>\n","      <td>6379</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 34 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0  Rooms        Date  Distance  Postcode  Bedroom2  Bathroom  \\\n","9291        11926      3  15/10/2016      14.0    3166.0       3.0       2.0   \n","3592         4691      3  25/02/2017       9.2    3146.0       3.0       1.0   \n","4389         5687      3  10/09/2016      12.8    3033.0       3.0       1.0   \n","1771         2271      2  23/04/2016       5.2    3056.0       2.0       1.0   \n","15522       19901      3   3/09/2017      24.7    3175.0       3.0       1.0   \n","\n","       Car  Landsize  BuildingArea  ...  Northern Metropolitan  \\\n","9291   2.0     544.0     146.00000  ...                      0   \n","3592   3.0     609.0     140.00000  ...                      0   \n","4389   1.0     412.0     133.00000  ...                      0   \n","1771   1.0     161.0      68.00000  ...                      1   \n","15522  2.0     544.0     154.04925  ...                      0   \n","\n","       Northern Victoria  South-Eastern Metropolitan  Southern Metropolitan  \\\n","9291                   0                           0                      1   \n","3592                   0                           0                      1   \n","4389                   0                           0                      0   \n","1771                   0                           0                      0   \n","15522                  0                           1                      0   \n","\n","       Western Metropolitan  Western Victoria  Seller_Encoded  Suburb_Encoded  \\\n","9291                      0                 0              31             221   \n","3592                      0                 0              99             135   \n","4389                      1                 0               3             165   \n","1771                      0                 0              40              46   \n","15522                     0                 0              59              94   \n","\n","       Council_Encoded  Address_Encoded  \n","9291                20             8001  \n","3592                 2             5818  \n","4389                21             7474  \n","1771                23             6120  \n","15522                9             6379  \n","\n","[5 rows x 34 columns]"]},"execution_count":63,"metadata":{},"output_type":"execute_result"}],"source":["# Show the encoding result\n","X_train.head()"]},{"cell_type":"markdown","id":"dc64765c","metadata":{"papermill":{"duration":0.03547,"end_time":"2024-10-30T16:59:49.417068","exception":false,"start_time":"2024-10-30T16:59:49.381598","status":"completed"},"tags":[]},"source":["## 8. Date"]},{"cell_type":"code","execution_count":64,"id":"bfb2027b","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:49.49107Z","iopub.status.busy":"2024-10-30T16:59:49.490656Z","iopub.status.idle":"2024-10-30T16:59:49.525573Z","shell.execute_reply":"2024-10-30T16:59:49.52452Z"},"papermill":{"duration":0.074932,"end_time":"2024-10-30T16:59:49.528336","exception":false,"start_time":"2024-10-30T16:59:49.453404","status":"completed"},"tags":[]},"outputs":[],"source":["# Convert 'Date' column to datetime format\n","X_train['Date'] = pd.to_datetime(X_train['Date'], errors='coerce')\n","X_test['Date'] = pd.to_datetime(X_test['Date'], errors='coerce')\n","\n","# Extract day, month, and year from the date\n","X_train['Day'] = X_train['Date'].dt.day\n","X_train['Month'] = X_train['Date'].dt.month\n","X_train['Year'] = X_train['Date'].dt.year\n","\n","X_test['Day'] = X_test['Date'].dt.day\n","X_test['Month'] = X_test['Date'].dt.month\n","X_test['Year'] = X_test['Date'].dt.year\n","\n","# Delete 'Date' column\n","X_train.drop('Date', axis=1, inplace=True)\n","X_test.drop('Date', axis=1, inplace=True)"]},{"cell_type":"code","execution_count":65,"id":"32233c7e","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:49.602872Z","iopub.status.busy":"2024-10-30T16:59:49.602435Z","iopub.status.idle":"2024-10-30T16:59:49.627686Z","shell.execute_reply":"2024-10-30T16:59:49.626533Z"},"papermill":{"duration":0.064903,"end_time":"2024-10-30T16:59:49.630167","exception":false,"start_time":"2024-10-30T16:59:49.565264","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Rooms</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>...</th>\n","      <th>Southern Metropolitan</th>\n","      <th>Western Metropolitan</th>\n","      <th>Western Victoria</th>\n","      <th>Seller_Encoded</th>\n","      <th>Suburb_Encoded</th>\n","      <th>Council_Encoded</th>\n","      <th>Address_Encoded</th>\n","      <th>Day</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9291</th>\n","      <td>11926</td>\n","      <td>3</td>\n","      <td>14.0</td>\n","      <td>3166.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>544.0</td>\n","      <td>146.00000</td>\n","      <td>1970.000000</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>31</td>\n","      <td>221</td>\n","      <td>20</td>\n","      <td>8001</td>\n","      <td>15</td>\n","      <td>10</td>\n","      <td>2016</td>\n","    </tr>\n","    <tr>\n","      <th>3592</th>\n","      <td>4691</td>\n","      <td>3</td>\n","      <td>9.2</td>\n","      <td>3146.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>609.0</td>\n","      <td>140.00000</td>\n","      <td>1930.000000</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>99</td>\n","      <td>135</td>\n","      <td>2</td>\n","      <td>5818</td>\n","      <td>25</td>\n","      <td>2</td>\n","      <td>2017</td>\n","    </tr>\n","    <tr>\n","      <th>4389</th>\n","      <td>5687</td>\n","      <td>3</td>\n","      <td>12.8</td>\n","      <td>3033.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>412.0</td>\n","      <td>133.00000</td>\n","      <td>2003.000000</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>165</td>\n","      <td>21</td>\n","      <td>7474</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>2016</td>\n","    </tr>\n","    <tr>\n","      <th>1771</th>\n","      <td>2271</td>\n","      <td>2</td>\n","      <td>5.2</td>\n","      <td>3056.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>161.0</td>\n","      <td>68.00000</td>\n","      <td>1910.000000</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>46</td>\n","      <td>23</td>\n","      <td>6120</td>\n","      <td>23</td>\n","      <td>4</td>\n","      <td>2016</td>\n","    </tr>\n","    <tr>\n","      <th>15522</th>\n","      <td>19901</td>\n","      <td>3</td>\n","      <td>24.7</td>\n","      <td>3175.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>544.0</td>\n","      <td>154.04925</td>\n","      <td>1964.101277</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>59</td>\n","      <td>94</td>\n","      <td>9</td>\n","      <td>6379</td>\n","      <td>9</td>\n","      <td>3</td>\n","      <td>2017</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 36 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0  Rooms  Distance  Postcode  Bedroom2  Bathroom  Car  \\\n","9291        11926      3      14.0    3166.0       3.0       2.0  2.0   \n","3592         4691      3       9.2    3146.0       3.0       1.0  3.0   \n","4389         5687      3      12.8    3033.0       3.0       1.0  1.0   \n","1771         2271      2       5.2    3056.0       2.0       1.0  1.0   \n","15522       19901      3      24.7    3175.0       3.0       1.0  2.0   \n","\n","       Landsize  BuildingArea    YearBuilt  ...  Southern Metropolitan  \\\n","9291      544.0     146.00000  1970.000000  ...                      1   \n","3592      609.0     140.00000  1930.000000  ...                      1   \n","4389      412.0     133.00000  2003.000000  ...                      0   \n","1771      161.0      68.00000  1910.000000  ...                      0   \n","15522     544.0     154.04925  1964.101277  ...                      0   \n","\n","       Western Metropolitan  Western Victoria  Seller_Encoded  Suburb_Encoded  \\\n","9291                      0                 0              31             221   \n","3592                      0                 0              99             135   \n","4389                      1                 0               3             165   \n","1771                      0                 0              40              46   \n","15522                     0                 0              59              94   \n","\n","       Council_Encoded  Address_Encoded  Day  Month  Year  \n","9291                20             8001   15     10  2016  \n","3592                 2             5818   25      2  2017  \n","4389                21             7474    9     10  2016  \n","1771                23             6120   23      4  2016  \n","15522                9             6379    9      3  2017  \n","\n","[5 rows x 36 columns]"]},"execution_count":65,"metadata":{},"output_type":"execute_result"}],"source":["# Show the encoding result\n","X_train.head()"]},{"cell_type":"code","execution_count":66,"id":"f63709b0","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:49.704353Z","iopub.status.busy":"2024-10-30T16:59:49.70391Z","iopub.status.idle":"2024-10-30T16:59:49.72037Z","shell.execute_reply":"2024-10-30T16:59:49.719165Z"},"papermill":{"duration":0.057032,"end_time":"2024-10-30T16:59:49.723349","exception":false,"start_time":"2024-10-30T16:59:49.666317","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 10256 entries, 9291 to 11322\n","Data columns (total 36 columns):\n"," #   Column                      Non-Null Count  Dtype  \n","---  ------                      --------------  -----  \n"," 0   Unnamed: 0                  10256 non-null  int64  \n"," 1   Rooms                       10256 non-null  int64  \n"," 2   Distance                    10256 non-null  float64\n"," 3   Postcode                    10256 non-null  float64\n"," 4   Bedroom2                    10256 non-null  float64\n"," 5   Bathroom                    10256 non-null  float64\n"," 6   Car                         10256 non-null  float64\n"," 7   Landsize                    10256 non-null  float64\n"," 8   BuildingArea                10256 non-null  float64\n"," 9   YearBuilt                   10256 non-null  float64\n"," 10  Lattitude                   10256 non-null  float64\n"," 11  Longtitude                  10256 non-null  float64\n"," 12  Propertycount               10256 non-null  float64\n"," 13  h                           10256 non-null  uint8  \n"," 14  t                           10256 non-null  uint8  \n"," 15  u                           10256 non-null  uint8  \n"," 16  PI                          10256 non-null  uint8  \n"," 17  S                           10256 non-null  uint8  \n"," 18  SA                          10256 non-null  uint8  \n"," 19  SP                          10256 non-null  uint8  \n"," 20  VB                          10256 non-null  uint8  \n"," 21  Eastern Metropolitan        10256 non-null  uint8  \n"," 22  Eastern Victoria            10256 non-null  uint8  \n"," 23  Northern Metropolitan       10256 non-null  uint8  \n"," 24  Northern Victoria           10256 non-null  uint8  \n"," 25  South-Eastern Metropolitan  10256 non-null  uint8  \n"," 26  Southern Metropolitan       10256 non-null  uint8  \n"," 27  Western Metropolitan        10256 non-null  uint8  \n"," 28  Western Victoria            10256 non-null  uint8  \n"," 29  Seller_Encoded              10256 non-null  int64  \n"," 30  Suburb_Encoded              10256 non-null  int64  \n"," 31  Council_Encoded             10256 non-null  int64  \n"," 32  Address_Encoded             10256 non-null  int64  \n"," 33  Day                         10256 non-null  int64  \n"," 34  Month                       10256 non-null  int64  \n"," 35  Year                        10256 non-null  int64  \n","dtypes: float64(11), int64(9), uint8(16)\n","memory usage: 2.1 MB\n"]}],"source":["X_train.info()"]},{"cell_type":"markdown","id":"e813ed06","metadata":{"papermill":{"duration":0.036019,"end_time":"2024-10-30T16:59:49.797781","exception":false,"start_time":"2024-10-30T16:59:49.761762","status":"completed"},"tags":[]},"source":["From the list above we can see that all of our columns are already a numerical column"]},{"cell_type":"markdown","id":"59ec658c","metadata":{"papermill":{"duration":0.035774,"end_time":"2024-10-30T16:59:49.871047","exception":false,"start_time":"2024-10-30T16:59:49.835273","status":"completed"},"tags":[]},"source":["# Feature Scaling"]},{"cell_type":"code","execution_count":67,"id":"6307dcdd","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:49.94555Z","iopub.status.busy":"2024-10-30T16:59:49.94511Z","iopub.status.idle":"2024-10-30T16:59:49.973487Z","shell.execute_reply":"2024-10-30T16:59:49.972229Z"},"papermill":{"duration":0.068802,"end_time":"2024-10-30T16:59:49.975902","exception":false,"start_time":"2024-10-30T16:59:49.9071","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["array([[-8.53952818e-02, -8.88996626e-02,  5.04272585e-01,\n","         5.98481370e-01, -6.00049470e-02,  5.87494670e-01,\n","         3.16826869e-01, -4.27246351e-02, -1.31846661e-01,\n","         2.01459832e-01, -1.15563140e+00,  9.35358174e-01,\n","        -9.32003600e-01,  5.40081158e-01, -3.12226338e-01,\n","        -3.98420790e-01, -3.54502841e-01, -1.45250249e+00,\n","        -7.98634887e-02,  2.69030686e+00, -2.99260749e-01,\n","        -3.79983438e-01, -6.92865573e-02, -6.30146702e-01,\n","        -6.33538107e-02, -2.11215381e-01,  1.48999805e+00,\n","        -5.38122905e-01, -5.50616458e-02, -1.24664911e+00,\n","         7.49001546e-01,  5.75729415e-01,  1.00190628e+00,\n","        -1.94750166e-01,  1.17813359e+00, -1.23990231e+00],\n","       [-1.12772058e+00, -8.88996626e-02, -2.79925589e-01,\n","         3.95491937e-01, -6.00049470e-02, -8.29900140e-01,\n","         1.34348607e+00,  4.04402041e-02, -2.29189339e-01,\n","        -1.21700236e+00, -5.51575369e-01,  6.74179417e-01,\n","         7.00343367e-01,  5.40081158e-01, -3.12226338e-01,\n","        -3.98420790e-01, -3.54502841e-01,  6.88466977e-01,\n","        -7.98634887e-02, -3.71704810e-01, -2.99260749e-01,\n","        -3.79983438e-01, -6.92865573e-02, -6.30146702e-01,\n","        -6.33538107e-02, -2.11215381e-01,  1.48999805e+00,\n","        -5.38122905e-01, -5.50616458e-02, -3.25908574e-01,\n","        -2.04628960e-01, -1.26379871e+00,  2.55576972e-01,\n","         1.07148395e+00, -1.77081253e+00,  8.06515151e-01],\n","       [-9.84229770e-01, -8.88996626e-02,  3.08223041e-01,\n","        -7.51398361e-01, -6.00049470e-02, -8.29900140e-01,\n","        -7.09832332e-01, -2.11613232e-01, -3.42755796e-01,\n","         1.37169114e+00,  7.23654036e-01, -1.20164052e+00,\n","        -3.85844104e-01,  5.40081158e-01, -3.12226338e-01,\n","        -3.98420790e-01, -3.54502841e-01,  6.88466977e-01,\n","        -7.98634887e-02, -3.71704810e-01, -2.99260749e-01,\n","        -3.79983438e-01, -6.92865573e-02, -6.30146702e-01,\n","        -6.33538107e-02, -2.11215381e-01, -6.71141818e-01,\n","         1.85831153e+00, -5.50616458e-02, -1.62577757e+00,\n","         1.28032844e-01,  6.77925422e-01,  8.21734250e-01,\n","        -9.54490638e-01,  1.17813359e+00, -1.23990231e+00],\n","       [-1.47636290e+00, -1.19271920e+00, -9.33424066e-01,\n","        -5.17960513e-01, -1.14157039e+00, -8.29900140e-01,\n","        -7.09832332e-01, -5.32757457e-01, -1.39730147e+00,\n","        -1.92623346e+00,  5.03462071e-01, -3.55277745e-01,\n","         1.04234595e+00,  5.40081158e-01, -3.12226338e-01,\n","        -3.98420790e-01, -3.54502841e-01,  6.88466977e-01,\n","        -7.98634887e-02, -3.71704810e-01, -2.99260749e-01,\n","        -3.79983438e-01, -6.92865573e-02,  1.58693205e+00,\n","        -6.33538107e-02, -2.11215381e-01, -6.71141818e-01,\n","        -5.38122905e-01, -5.50616458e-02, -1.12478639e+00,\n","        -1.19152565e+00,  8.82317436e-01,  3.58825461e-01,\n","         8.18237131e-01, -1.03357600e+00, -1.23990231e+00],\n","       [ 1.06353965e+00, -8.88996626e-02,  2.25238101e+00,\n","         6.89826615e-01, -6.00049470e-02, -8.29900140e-01,\n","         3.16826869e-01, -4.27246351e-02, -1.25739497e-03,\n","        -7.71803968e-03, -1.69551384e+00,  1.79392724e+00,\n","         2.25718275e-01,  5.40081158e-01, -3.12226338e-01,\n","        -3.98420790e-01, -3.54502841e-01, -1.45250249e+00,\n","        -7.98634887e-02,  2.69030686e+00, -2.99260749e-01,\n","        -3.79983438e-01, -6.92865573e-02, -6.30146702e-01,\n","        -6.33538107e-02,  4.73450368e+00, -6.71141818e-01,\n","        -5.38122905e-01, -5.50616458e-02, -8.67520655e-01,\n","        -6.59266760e-01, -5.48426660e-01,  4.47373006e-01,\n","        -9.54490638e-01, -1.40219426e+00,  8.06515151e-01]])"]},"execution_count":67,"metadata":{},"output_type":"execute_result"}],"source":["# Create an instance scaler\n","scaler = StandardScaler()\n","\n","# Fit the scaler to all sets and transform them\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","\n","X_train_scaled[:5]"]},{"cell_type":"markdown","id":"c9906e3b","metadata":{"papermill":{"duration":0.036041,"end_time":"2024-10-30T16:59:50.048255","exception":false,"start_time":"2024-10-30T16:59:50.012214","status":"completed"},"tags":[]},"source":["# Model Training\n","\n","## 1. Linear Regression"]},{"cell_type":"code","execution_count":68,"id":"1fcd2b0d","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:50.123547Z","iopub.status.busy":"2024-10-30T16:59:50.123102Z","iopub.status.idle":"2024-10-30T16:59:50.187551Z","shell.execute_reply":"2024-10-30T16:59:50.185114Z"},"papermill":{"duration":0.105858,"end_time":"2024-10-30T16:59:50.191181","exception":false,"start_time":"2024-10-30T16:59:50.085323","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Mean Absolute Error: 276089.6688429791\n","Mean Squared Error: 206411343948.05682\n","RÂ² Score: 0.5901083985806127\n"]}],"source":["# Create a regression model\n","model = LinearRegression()\n","\n","# Train the model\n","model.fit(X_train_scaled, y_train)\n","\n","# Make predictions\n","y_pred = model.predict(X_test_scaled)\n","\n","# Evaluate the model\n","mae = mean_absolute_error(y_test, y_pred)\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(f'Mean Absolute Error: {mae}')\n","print(f'Mean Squared Error: {mse}')\n","print(f'RÂ² Score: {r2}')"]},{"cell_type":"markdown","id":"4cddad10","metadata":{"papermill":{"duration":0.036115,"end_time":"2024-10-30T16:59:50.320107","exception":false,"start_time":"2024-10-30T16:59:50.283992","status":"completed"},"tags":[]},"source":["## 2. Decision Tree"]},{"cell_type":"code","execution_count":69,"id":"9a7d4569","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:50.395382Z","iopub.status.busy":"2024-10-30T16:59:50.394948Z","iopub.status.idle":"2024-10-30T16:59:50.585646Z","shell.execute_reply":"2024-10-30T16:59:50.584356Z"},"papermill":{"duration":0.231463,"end_time":"2024-10-30T16:59:50.588356","exception":false,"start_time":"2024-10-30T16:59:50.356893","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Decision Tree Regression Metrics:\n","Mean Absolute Error: 266041.4721247563\n","Mean Squared Error: 226353848664.77582\n","RÂ² Score: 0.5505065770997803\n"]}],"source":["# Decision Tree Regression\n","dt_model = DecisionTreeRegressor(random_state=42)\n","dt_model.fit(X_train_scaled, y_train)\n","dt_predictions = dt_model.predict(X_test_scaled)\n","\n","# Evaluate Decision Tree Model\n","dt_mae = mean_absolute_error(y_test, dt_predictions)\n","dt_mse = mean_squared_error(y_test, dt_predictions)\n","dt_r2 = r2_score(y_test, dt_predictions)\n","\n","print(\"Decision Tree Regression Metrics:\")\n","print(f\"Mean Absolute Error: {dt_mae}\")\n","print(f\"Mean Squared Error: {dt_mse}\")\n","print(f\"RÂ² Score: {dt_r2}\")"]},{"cell_type":"markdown","id":"195d504f","metadata":{"papermill":{"duration":0.036466,"end_time":"2024-10-30T16:59:50.66267","exception":false,"start_time":"2024-10-30T16:59:50.626204","status":"completed"},"tags":[]},"source":["## 3. K-Nearest Neighbors"]},{"cell_type":"code","execution_count":70,"id":"43d72638","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:50.738098Z","iopub.status.busy":"2024-10-30T16:59:50.737668Z","iopub.status.idle":"2024-10-30T16:59:51.341255Z","shell.execute_reply":"2024-10-30T16:59:51.339832Z"},"papermill":{"duration":0.644816,"end_time":"2024-10-30T16:59:51.344113","exception":false,"start_time":"2024-10-30T16:59:50.699297","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["K-Nearest Neighbors Regression Metrics:\n","Mean Absolute Error: 251334.37793372318\n","Mean Squared Error: 198279667318.03015\n","RÂ² Score: 0.6062562802442533\n"]}],"source":["# K-Nearest Neighbors Regression\n","knn_model = KNeighborsRegressor(n_neighbors=10)\n","knn_model.fit(X_train_scaled, y_train)\n","knn_predictions = knn_model.predict(X_test_scaled)\n","\n","# Evaluate KNN Model\n","knn_mae = mean_absolute_error(y_test, knn_predictions)\n","knn_mse = mean_squared_error(y_test, knn_predictions)\n","knn_r2 = r2_score(y_test, knn_predictions)\n","\n","print(\"K-Nearest Neighbors Regression Metrics:\")\n","print(f\"Mean Absolute Error: {knn_mae}\")\n","print(f\"Mean Squared Error: {knn_mse}\")\n","print(f\"RÂ² Score: {knn_r2}\")"]},{"cell_type":"markdown","id":"765e6728","metadata":{"papermill":{"duration":0.03737,"end_time":"2024-10-30T16:59:51.419243","exception":false,"start_time":"2024-10-30T16:59:51.381873","status":"completed"},"tags":[]},"source":["## 4. XGBoost Regression"]},{"cell_type":"code","execution_count":71,"id":"0c5a12fd","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:51.49633Z","iopub.status.busy":"2024-10-30T16:59:51.495886Z","iopub.status.idle":"2024-10-30T16:59:53.422837Z","shell.execute_reply":"2024-10-30T16:59:53.421431Z"},"papermill":{"duration":1.968787,"end_time":"2024-10-30T16:59:53.425677","exception":false,"start_time":"2024-10-30T16:59:51.45689","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["XGBoost Regression Metrics:\n","Mean Absolute Error: 184311.47480811403\n","Mean Squared Error: 121536328137.91661\n","RÂ² Score: 0.7586531863112179\n"]}],"source":["# XGBoost Regression\n","xgb_model = XGBRegressor(objective='reg:squarederror', random_state=42)\n","xgb_model.fit(X_train_scaled, y_train)\n","xgb_predictions = xgb_model.predict(X_test_scaled)\n","\n","# Evaluate XGBoost Model\n","xgb_mae = mean_absolute_error(y_test, xgb_predictions)\n","xgb_mse = mean_squared_error(y_test, xgb_predictions)\n","xgb_r2 = r2_score(y_test, xgb_predictions)\n","\n","print(\"XGBoost Regression Metrics:\")\n","print(f\"Mean Absolute Error: {xgb_mae}\")\n","print(f\"Mean Squared Error: {xgb_mse}\")\n","print(f\"RÂ² Score: {xgb_r2}\")"]},{"cell_type":"markdown","id":"3eb6c3fa","metadata":{"papermill":{"duration":0.036651,"end_time":"2024-10-30T16:59:53.499345","exception":false,"start_time":"2024-10-30T16:59:53.462694","status":"completed"},"tags":[]},"source":["## 5. Random Forest Regressor"]},{"cell_type":"code","execution_count":72,"id":"73b4fdae","metadata":{"execution":{"iopub.execute_input":"2024-10-30T16:59:53.575653Z","iopub.status.busy":"2024-10-30T16:59:53.575225Z","iopub.status.idle":"2024-10-30T17:00:04.548483Z","shell.execute_reply":"2024-10-30T17:00:04.546907Z"},"papermill":{"duration":11.014767,"end_time":"2024-10-30T17:00:04.551349","exception":false,"start_time":"2024-10-30T16:59:53.536582","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Random Forest Metrics:\n","Mean Absolute Error: 174123.98949317736\n","Mean Squared Error: 114198560865.24522\n","RÂ² Score: 0.7732245229476139\n"]}],"source":["# Train the Random Forest model\n","rf = RandomForestRegressor(n_estimators=100, random_state=42)  # You can tune n_estimators and other parameters\n","rf.fit(X_train_scaled, y_train)\n","\n","# Make predictions\n","y_pred_rf = rf.predict(X_test_scaled)\n","\n","# Evaluate the model\n","mae_rf = mean_absolute_error(y_test, y_pred_rf)\n","mse_rf = mean_squared_error(y_test, y_pred_rf)\n","r2_rf = r2_score(y_test, y_pred_rf)\n","\n","print(\"Random Forest Metrics:\")\n","print(f\"Mean Absolute Error: {mae_rf}\")\n","print(f\"Mean Squared Error: {mse_rf}\")\n","print(f\"RÂ² Score: {r2_rf}\")"]},{"cell_type":"markdown","id":"912b5572","metadata":{"papermill":{"duration":0.037199,"end_time":"2024-10-30T17:00:04.626896","exception":false,"start_time":"2024-10-30T17:00:04.589697","status":"completed"},"tags":[]},"source":["# Hyperparameter Tuning\n","\n","Based on the RÂ² score, I choose Random Forest Regressor and XGBoost Regression as the main model. So, I'm going to tune their parameters so I can maximize their result and their predictions\n","\n","## 1. Random Forest Regressor"]},{"cell_type":"code","execution_count":73,"id":"89f333da","metadata":{"execution":{"iopub.execute_input":"2024-10-30T17:00:04.703875Z","iopub.status.busy":"2024-10-30T17:00:04.702949Z","iopub.status.idle":"2024-10-30T17:00:52.661997Z","shell.execute_reply":"2024-10-30T17:00:52.660632Z"},"papermill":{"duration":48.036877,"end_time":"2024-10-30T17:00:52.701419","exception":false,"start_time":"2024-10-30T17:00:04.664542","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Best Random Forest Parameters: {'n_estimators': 200, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': None}\n","---------------------\n","Random Forest Metrics:\n","Mean Absolute Error: 180603.98683820662\n","Mean Squared Error: 121428825409.45726\n","RÂ² Score: 0.7588666652057512\n"]}],"source":["# Define a reduced parameter grid\n","param_dist = {\n","    'n_estimators': [100, 150, 200],\n","    'max_depth': [10, 20, None],\n","    'min_samples_split': [2, 5],\n","    'min_samples_leaf': [1, 2],\n","    'max_features': ['sqrt', 'log2'],\n","}\n","\n","# Initialize the Random Forest Regressor\n","rf = RandomForestRegressor(random_state=42)\n","\n","# Set up RandomizedSearchCV with reduced n_iter and fewer parameters\n","random_search = RandomizedSearchCV(\n","    estimator=rf,\n","    param_distributions=param_dist,\n","    n_iter=20,  # Reduced iterations\n","    scoring='neg_mean_squared_error',\n","    cv=3,       # Reduce cross-validation folds to 3\n","    n_jobs=-1,\n","    random_state=42\n",")\n","\n","# Fit the model to the training data\n","random_search.fit(X_train_scaled, y_train)\n","\n","# Get the best hyperparameters and evaluate the model\n","best_rf_params = random_search.best_params_\n","best_rf_model = random_search.best_estimator_\n","\n","# Make predictions\n","y_pred = best_rf_model.predict(X_test_scaled)\n","\n","# Evaluate the model\n","mae = mean_absolute_error(y_test, y_pred)\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"Best Random Forest Parameters:\", best_rf_params)\n","print(\"---------------------\")\n","print(\"Random Forest Metrics:\")\n","print(f\"Mean Absolute Error: {mae}\")\n","print(f\"Mean Squared Error: {mse}\")\n","print(f\"RÂ² Score: {r2}\")"]},{"cell_type":"markdown","id":"3e672c68","metadata":{"papermill":{"duration":0.03665,"end_time":"2024-10-30T17:00:52.774837","exception":false,"start_time":"2024-10-30T17:00:52.738187","status":"completed"},"tags":[]},"source":["## 2. XGBoost Regression"]},{"cell_type":"code","execution_count":74,"id":"9389e58c","metadata":{"execution":{"iopub.execute_input":"2024-10-30T17:00:52.850533Z","iopub.status.busy":"2024-10-30T17:00:52.85007Z","iopub.status.idle":"2024-10-30T17:02:04.914425Z","shell.execute_reply":"2024-10-30T17:02:04.913066Z"},"papermill":{"duration":72.141449,"end_time":"2024-10-30T17:02:04.953026","exception":false,"start_time":"2024-10-30T17:00:52.811577","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Best XGBoost Parameters: {'subsample': 0.8, 'n_estimators': 150, 'min_child_weight': 1, 'max_depth': 7, 'learning_rate': 0.1}\n","Best XGBoost Cross-Validated MSE: 78027792994.6831\n","----------------------\n","XGBoost Metrics:\n","Mean Absolute Error: 168185.08801778752\n","Mean Squared Error: 107120424091.15918\n","RÂ² Score: 0.7872802853970153\n"]}],"source":["# Define the model\n","xgb = XGBRegressor()\n","\n","# Reduced parameter grid for faster search\n","param_dist_xgb = {\n","    'n_estimators': [100, 150, 200],\n","    'learning_rate': [0.05, 0.1, 0.2],\n","    'max_depth': [3, 5, 7],\n","    'min_child_weight': [1, 3],\n","    'subsample': [0.8, 1.0],\n","}\n","\n","# Initialize RandomizedSearchCV with reduced n_iter and cv\n","random_search_xgb = RandomizedSearchCV(\n","    xgb, \n","    param_distributions=param_dist_xgb, \n","    n_iter=20,  # Fewer iterations\n","    scoring='neg_mean_squared_error', \n","    cv=3,       # Fewer cross-validation folds\n","    n_jobs=-1, \n","    random_state=42\n",")\n","\n","# Fit the model\n","random_search_xgb.fit(X_train_scaled, y_train)\n","\n","# Get the best parameters and best score\n","best_xgb_params = random_search_xgb.best_params_\n","best_xgb_score = -random_search_xgb.best_score_\n","\n","# Predictions and evaluation\n","xgb_best = random_search_xgb.best_estimator_\n","xgb_predictions = xgb_best.predict(X_test_scaled)\n","\n","# Calculate metrics\n","xgb_mae = mean_absolute_error(y_test, xgb_predictions)\n","xgb_mse = mean_squared_error(y_test, xgb_predictions)\n","xgb_r2 = r2_score(y_test, xgb_predictions)\n","\n","# Print results\n","print(\"Best XGBoost Parameters:\", best_xgb_params)\n","print(\"Best XGBoost Cross-Validated MSE:\", best_xgb_score)\n","print(\"----------------------\")\n","print(\"XGBoost Metrics:\")\n","print(f\"Mean Absolute Error: {xgb_mae}\")\n","print(f\"Mean Squared Error: {xgb_mse}\")\n","print(f\"RÂ² Score: {xgb_r2}\")"]},{"cell_type":"markdown","id":"7347cd83","metadata":{"papermill":{"duration":0.036456,"end_time":"2024-10-30T17:02:05.026134","exception":false,"start_time":"2024-10-30T17:02:04.989678","status":"completed"},"tags":[]},"source":["From RÂ² result we can see that XGBoost Regression has bigger RÂ² score than Random Forest Regressor. That means the model with highest accuracy rate, compared with the other models, is XGBoost Regression Model."]},{"cell_type":"markdown","id":"b60bdb2e","metadata":{"papermill":{"duration":0.036984,"end_time":"2024-10-30T17:02:05.099825","exception":false,"start_time":"2024-10-30T17:02:05.062841","status":"completed"},"tags":[]},"source":["# Prediction"]},{"cell_type":"code","execution_count":75,"id":"15332205","metadata":{"execution":{"iopub.execute_input":"2024-10-30T17:02:05.176767Z","iopub.status.busy":"2024-10-30T17:02:05.176321Z","iopub.status.idle":"2024-10-30T17:02:05.184072Z","shell.execute_reply":"2024-10-30T17:02:05.182908Z"},"papermill":{"duration":0.049514,"end_time":"2024-10-30T17:02:05.186577","exception":false,"start_time":"2024-10-30T17:02:05.137063","status":"completed"},"tags":[]},"outputs":[],"source":["# Prepare the submission DataFrame\n","submission = pd.DataFrame({\n","    'Id': X_test['Unnamed: 0'],\n","    'Predicted House price': xgb_predictions,\n","    'Real House Price': y_test\n","})"]},{"cell_type":"code","execution_count":76,"id":"1f99e959","metadata":{"execution":{"iopub.execute_input":"2024-10-30T17:02:05.262517Z","iopub.status.busy":"2024-10-30T17:02:05.262088Z","iopub.status.idle":"2024-10-30T17:02:05.274035Z","shell.execute_reply":"2024-10-30T17:02:05.272615Z"},"papermill":{"duration":0.052627,"end_time":"2024-10-30T17:02:05.276381","exception":false,"start_time":"2024-10-30T17:02:05.223754","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["          Id  Predicted House price  Real House Price\n","13139  16908           5.100095e+05          445000.0\n","5678    7380           1.111346e+06         1085000.0\n","7039    9088           8.020789e+05          822500.0\n","4652    6022           3.480624e+06         2460000.0\n","6444    8366           4.734388e+05          405000.0\n","...      ...                    ...               ...\n","13492  17360           5.718343e+05          745000.0\n","6902    8912           1.072500e+06          975000.0\n","6666    8617           7.379599e+05          700000.0\n","8193   10523           9.777303e+05          910000.0\n","1184    1505           9.889664e+05          791000.0\n","\n","[2565 rows x 3 columns]\n"]}],"source":["# Display the submission DataFrame\n","print(submission)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":13426,"sourceId":18170,"sourceType":"datasetVersion"}],"dockerImageVersionId":30350,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.12"},"papermill":{"default_parameters":{},"duration":161.436624,"end_time":"2024-10-30T17:02:07.935948","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-10-30T16:59:26.499324","version":"2.3.4"}},"nbformat":4,"nbformat_minor":5}