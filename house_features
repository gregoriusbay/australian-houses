{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":18170,"sourceType":"datasetVersion","datasetId":13426}],"dockerImageVersionId":30350,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/gregoriusbayuaji/house-price-prediction?scriptVersionId=204063085\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\n#Importing the required libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-29T09:18:59.698805Z","iopub.execute_input":"2024-10-29T09:18:59.699639Z","iopub.status.idle":"2024-10-29T09:18:59.711159Z","shell.execute_reply.started":"2024-10-29T09:18:59.69958Z","shell.execute_reply":"2024-10-29T09:18:59.709588Z"},"trusted":true},"execution_count":856,"outputs":[{"name":"stdout","text":"/kaggle/input/melb-data/melb_data.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"If we want to buy or sell a house, we need to consider several aspects. Sometimes, we don't know how much effect these aspects have on the price of a house. That nescience may give us a bad decision. So, it's important for us if we can figure what aspects we need to know when we want to buy or sell a house.","metadata":{}},{"cell_type":"markdown","source":"# Data Describing","metadata":{}},{"cell_type":"markdown","source":"We took the data from Melbourne Housing Price. As you can see, there are so many variables about it. We're gonna choose what variables has the best effect on the house price.","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('../input/melb-data/melb_data.csv')\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:18:59.713758Z","iopub.execute_input":"2024-10-29T09:18:59.714194Z","iopub.status.idle":"2024-10-29T09:18:59.828451Z","shell.execute_reply.started":"2024-10-29T09:18:59.714155Z","shell.execute_reply":"2024-10-29T09:18:59.827192Z"},"trusted":true},"execution_count":857,"outputs":[{"execution_count":857,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0      Suburb           Address  Rooms Type      Price Method  \\\n0           1  Abbotsford      85 Turner St      2    h  1480000.0      S   \n1           2  Abbotsford   25 Bloomburg St      2    h  1035000.0      S   \n2           4  Abbotsford      5 Charles St      3    h  1465000.0     SP   \n3           5  Abbotsford  40 Federation La      3    h   850000.0     PI   \n4           6  Abbotsford       55a Park St      4    h  1600000.0     VB   \n\n  SellerG       Date  Distance  ...  Bathroom  Car  Landsize  BuildingArea  \\\n0  Biggin  3/12/2016       2.5  ...       1.0  1.0     202.0           NaN   \n1  Biggin  4/02/2016       2.5  ...       1.0  0.0     156.0          79.0   \n2  Biggin  4/03/2017       2.5  ...       2.0  0.0     134.0         150.0   \n3  Biggin  4/03/2017       2.5  ...       2.0  1.0      94.0           NaN   \n4  Nelson  4/06/2016       2.5  ...       1.0  2.0     120.0         142.0   \n\n   YearBuilt  CouncilArea  Lattitude Longtitude             Regionname  \\\n0        NaN        Yarra   -37.7996   144.9984  Northern Metropolitan   \n1     1900.0        Yarra   -37.8079   144.9934  Northern Metropolitan   \n2     1900.0        Yarra   -37.8093   144.9944  Northern Metropolitan   \n3        NaN        Yarra   -37.7969   144.9969  Northern Metropolitan   \n4     2014.0        Yarra   -37.8072   144.9941  Northern Metropolitan   \n\n   Propertycount  \n0         4019.0  \n1         4019.0  \n2         4019.0  \n3         4019.0  \n4         4019.0  \n\n[5 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Suburb</th>\n      <th>Address</th>\n      <th>Rooms</th>\n      <th>Type</th>\n      <th>Price</th>\n      <th>Method</th>\n      <th>SellerG</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>...</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>BuildingArea</th>\n      <th>YearBuilt</th>\n      <th>CouncilArea</th>\n      <th>Lattitude</th>\n      <th>Longtitude</th>\n      <th>Regionname</th>\n      <th>Propertycount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Abbotsford</td>\n      <td>85 Turner St</td>\n      <td>2</td>\n      <td>h</td>\n      <td>1480000.0</td>\n      <td>S</td>\n      <td>Biggin</td>\n      <td>3/12/2016</td>\n      <td>2.5</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>202.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Yarra</td>\n      <td>-37.7996</td>\n      <td>144.9984</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Abbotsford</td>\n      <td>25 Bloomburg St</td>\n      <td>2</td>\n      <td>h</td>\n      <td>1035000.0</td>\n      <td>S</td>\n      <td>Biggin</td>\n      <td>4/02/2016</td>\n      <td>2.5</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>156.0</td>\n      <td>79.0</td>\n      <td>1900.0</td>\n      <td>Yarra</td>\n      <td>-37.8079</td>\n      <td>144.9934</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>Abbotsford</td>\n      <td>5 Charles St</td>\n      <td>3</td>\n      <td>h</td>\n      <td>1465000.0</td>\n      <td>SP</td>\n      <td>Biggin</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>134.0</td>\n      <td>150.0</td>\n      <td>1900.0</td>\n      <td>Yarra</td>\n      <td>-37.8093</td>\n      <td>144.9944</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>Abbotsford</td>\n      <td>40 Federation La</td>\n      <td>3</td>\n      <td>h</td>\n      <td>850000.0</td>\n      <td>PI</td>\n      <td>Biggin</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>94.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Yarra</td>\n      <td>-37.7969</td>\n      <td>144.9969</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>Abbotsford</td>\n      <td>55a Park St</td>\n      <td>4</td>\n      <td>h</td>\n      <td>1600000.0</td>\n      <td>VB</td>\n      <td>Nelson</td>\n      <td>4/06/2016</td>\n      <td>2.5</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>120.0</td>\n      <td>142.0</td>\n      <td>2014.0</td>\n      <td>Yarra</td>\n      <td>-37.8072</td>\n      <td>144.9941</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:18:59.829826Z","iopub.execute_input":"2024-10-29T09:18:59.830204Z","iopub.status.idle":"2024-10-29T09:18:59.85882Z","shell.execute_reply.started":"2024-10-29T09:18:59.830168Z","shell.execute_reply":"2024-10-29T09:18:59.857118Z"},"trusted":true},"execution_count":858,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 18396 entries, 0 to 18395\nData columns (total 22 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Unnamed: 0     18396 non-null  int64  \n 1   Suburb         18396 non-null  object \n 2   Address        18396 non-null  object \n 3   Rooms          18396 non-null  int64  \n 4   Type           18396 non-null  object \n 5   Price          18396 non-null  float64\n 6   Method         18396 non-null  object \n 7   SellerG        18396 non-null  object \n 8   Date           18396 non-null  object \n 9   Distance       18395 non-null  float64\n 10  Postcode       18395 non-null  float64\n 11  Bedroom2       14927 non-null  float64\n 12  Bathroom       14925 non-null  float64\n 13  Car            14820 non-null  float64\n 14  Landsize       13603 non-null  float64\n 15  BuildingArea   7762 non-null   float64\n 16  YearBuilt      8958 non-null   float64\n 17  CouncilArea    12233 non-null  object \n 18  Lattitude      15064 non-null  float64\n 19  Longtitude     15064 non-null  float64\n 20  Regionname     18395 non-null  object \n 21  Propertycount  18395 non-null  float64\ndtypes: float64(12), int64(2), object(8)\nmemory usage: 3.1+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:18:59.860516Z","iopub.execute_input":"2024-10-29T09:18:59.860927Z","iopub.status.idle":"2024-10-29T09:18:59.940464Z","shell.execute_reply.started":"2024-10-29T09:18:59.86089Z","shell.execute_reply":"2024-10-29T09:18:59.938917Z"},"trusted":true},"execution_count":859,"outputs":[{"execution_count":859,"output_type":"execute_result","data":{"text/plain":"         Unnamed: 0         Rooms         Price      Distance      Postcode  \\\ncount  18396.000000  18396.000000  1.839600e+04  18395.000000  18395.000000   \nmean   11826.787073      2.935040  1.056697e+06     10.389986   3107.140147   \nstd     6800.710448      0.958202  6.419217e+05      6.009050     95.000995   \nmin        1.000000      1.000000  8.500000e+04      0.000000   3000.000000   \n25%     5936.750000      2.000000  6.330000e+05      6.300000   3046.000000   \n50%    11820.500000      3.000000  8.800000e+05      9.700000   3085.000000   \n75%    17734.250000      3.000000  1.302000e+06     13.300000   3149.000000   \nmax    23546.000000     12.000000  9.000000e+06     48.100000   3978.000000   \n\n           Bedroom2      Bathroom           Car       Landsize  BuildingArea  \\\ncount  14927.000000  14925.000000  14820.000000   13603.000000   7762.000000   \nmean       2.913043      1.538492      1.615520     558.116371    151.220219   \nstd        0.964641      0.689311      0.955916    3987.326586    519.188596   \nmin        0.000000      0.000000      0.000000       0.000000      0.000000   \n25%        2.000000      1.000000      1.000000     176.500000     93.000000   \n50%        3.000000      1.000000      2.000000     440.000000    126.000000   \n75%        3.000000      2.000000      2.000000     651.000000    174.000000   \nmax       20.000000      8.000000     10.000000  433014.000000  44515.000000   \n\n         YearBuilt     Lattitude    Longtitude  Propertycount  \ncount  8958.000000  15064.000000  15064.000000   18395.000000  \nmean   1965.879996    -37.809849    144.996338    7517.975265  \nstd      37.013261      0.081152      0.106375    4488.416599  \nmin    1196.000000    -38.182550    144.431810     249.000000  \n25%    1950.000000    -37.858100    144.931193    4294.000000  \n50%    1970.000000    -37.803625    145.000920    6567.000000  \n75%    2000.000000    -37.756270    145.060000   10331.000000  \nmax    2018.000000    -37.408530    145.526350   21650.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Rooms</th>\n      <th>Price</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>BuildingArea</th>\n      <th>YearBuilt</th>\n      <th>Lattitude</th>\n      <th>Longtitude</th>\n      <th>Propertycount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>18396.000000</td>\n      <td>18396.000000</td>\n      <td>1.839600e+04</td>\n      <td>18395.000000</td>\n      <td>18395.000000</td>\n      <td>14927.000000</td>\n      <td>14925.000000</td>\n      <td>14820.000000</td>\n      <td>13603.000000</td>\n      <td>7762.000000</td>\n      <td>8958.000000</td>\n      <td>15064.000000</td>\n      <td>15064.000000</td>\n      <td>18395.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>11826.787073</td>\n      <td>2.935040</td>\n      <td>1.056697e+06</td>\n      <td>10.389986</td>\n      <td>3107.140147</td>\n      <td>2.913043</td>\n      <td>1.538492</td>\n      <td>1.615520</td>\n      <td>558.116371</td>\n      <td>151.220219</td>\n      <td>1965.879996</td>\n      <td>-37.809849</td>\n      <td>144.996338</td>\n      <td>7517.975265</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>6800.710448</td>\n      <td>0.958202</td>\n      <td>6.419217e+05</td>\n      <td>6.009050</td>\n      <td>95.000995</td>\n      <td>0.964641</td>\n      <td>0.689311</td>\n      <td>0.955916</td>\n      <td>3987.326586</td>\n      <td>519.188596</td>\n      <td>37.013261</td>\n      <td>0.081152</td>\n      <td>0.106375</td>\n      <td>4488.416599</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>8.500000e+04</td>\n      <td>0.000000</td>\n      <td>3000.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1196.000000</td>\n      <td>-38.182550</td>\n      <td>144.431810</td>\n      <td>249.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>5936.750000</td>\n      <td>2.000000</td>\n      <td>6.330000e+05</td>\n      <td>6.300000</td>\n      <td>3046.000000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>176.500000</td>\n      <td>93.000000</td>\n      <td>1950.000000</td>\n      <td>-37.858100</td>\n      <td>144.931193</td>\n      <td>4294.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>11820.500000</td>\n      <td>3.000000</td>\n      <td>8.800000e+05</td>\n      <td>9.700000</td>\n      <td>3085.000000</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>440.000000</td>\n      <td>126.000000</td>\n      <td>1970.000000</td>\n      <td>-37.803625</td>\n      <td>145.000920</td>\n      <td>6567.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>17734.250000</td>\n      <td>3.000000</td>\n      <td>1.302000e+06</td>\n      <td>13.300000</td>\n      <td>3149.000000</td>\n      <td>3.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>651.000000</td>\n      <td>174.000000</td>\n      <td>2000.000000</td>\n      <td>-37.756270</td>\n      <td>145.060000</td>\n      <td>10331.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>23546.000000</td>\n      <td>12.000000</td>\n      <td>9.000000e+06</td>\n      <td>48.100000</td>\n      <td>3978.000000</td>\n      <td>20.000000</td>\n      <td>8.000000</td>\n      <td>10.000000</td>\n      <td>433014.000000</td>\n      <td>44515.000000</td>\n      <td>2018.000000</td>\n      <td>-37.408530</td>\n      <td>145.526350</td>\n      <td>21650.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# Notes on Specific Variables\n\nRooms: Number of rooms\n\nPrice: Price in dollars\n\nMethod: S - property sold; SP - property sold prior; PI - property passed in; PN - sold prior not disclosed; SN - sold not disclosed; NB - no bid; VB - vendor bid; W - withdrawn prior to auction; SA - sold after auction; SS - sold after auction price not disclosed. N/A - price or highest bid not available.\n\nType: br - bedroom(s); h - house,cottage,villa, semi,terrace; u - unit, duplex; t - townhouse; dev site - development site; o res - other residential.\n\nSellerG: Real Estate Agent\n\nDate: Date sold\n\nDistance: Distance from CBD\n\nRegionname: General Region (West, North West, North, North east â€¦etc)\n\nPropertycount: Number of properties that exist in the suburb.\n\nBedroom2 : Scraped # of Bedrooms (from different source)\n\nBathroom: Number of Bathrooms\n\nCar: Number of carspots\n\nLandsize: Land Size\n\nBuildingArea: Building Size\n\nCouncilArea: Governing council for the area","metadata":{}},{"cell_type":"markdown","source":"# Handling Missing Values","metadata":{}},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:18:59.943248Z","iopub.execute_input":"2024-10-29T09:18:59.944038Z","iopub.status.idle":"2024-10-29T09:18:59.96604Z","shell.execute_reply.started":"2024-10-29T09:18:59.943992Z","shell.execute_reply":"2024-10-29T09:18:59.96425Z"},"trusted":true},"execution_count":860,"outputs":[{"execution_count":860,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0           0\nSuburb               0\nAddress              0\nRooms                0\nType                 0\nPrice                0\nMethod               0\nSellerG              0\nDate                 0\nDistance             1\nPostcode             1\nBedroom2          3469\nBathroom          3471\nCar               3576\nLandsize          4793\nBuildingArea     10634\nYearBuilt         9438\nCouncilArea       6163\nLattitude         3332\nLongtitude        3332\nRegionname           1\nPropertycount        1\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"From the list above we can see that there are so many missing values. We will handle it one by one","metadata":{}},{"cell_type":"markdown","source":"## 1. Distance, Postcode, Region Name, and Property Count\n\nBecause it has only 1 null values, we can just delete the row.","metadata":{}},{"cell_type":"code","source":"df.dropna(subset=['Distance'], inplace=True)\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:18:59.967561Z","iopub.execute_input":"2024-10-29T09:18:59.968027Z","iopub.status.idle":"2024-10-29T09:18:59.997534Z","shell.execute_reply.started":"2024-10-29T09:18:59.967983Z","shell.execute_reply":"2024-10-29T09:18:59.996154Z"},"trusted":true},"execution_count":861,"outputs":[{"execution_count":861,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0           0\nSuburb               0\nAddress              0\nRooms                0\nType                 0\nPrice                0\nMethod               0\nSellerG              0\nDate                 0\nDistance             0\nPostcode             0\nBedroom2          3468\nBathroom          3470\nCar               3575\nLandsize          4792\nBuildingArea     10633\nYearBuilt         9437\nCouncilArea       6162\nLattitude         3331\nLongtitude        3331\nRegionname           0\nPropertycount        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"Other column has more than 10% of null values, so we cannot just delete it. We need to analyze them. Let's start with the location. Lattitude and Longitude. See the rows when lattitude and longitude is null.","metadata":{}},{"cell_type":"markdown","source":"## 2. Lattitude and Longtitude","metadata":{}},{"cell_type":"code","source":"df_null_latitude = df[df['Lattitude'].isnull()]\n\ndf_null_latitude.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:18:59.999282Z","iopub.execute_input":"2024-10-29T09:18:59.999813Z","iopub.status.idle":"2024-10-29T09:19:00.018856Z","shell.execute_reply.started":"2024-10-29T09:18:59.999762Z","shell.execute_reply":"2024-10-29T09:19:00.017352Z"},"trusted":true},"execution_count":862,"outputs":[{"execution_count":862,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0          0\nSuburb              0\nAddress             0\nRooms               0\nType                0\nPrice               0\nMethod              0\nSellerG             0\nDate                0\nDistance            0\nPostcode            0\nBedroom2         3309\nBathroom         3309\nCar              3309\nLandsize         3309\nBuildingArea     3322\nYearBuilt        3323\nCouncilArea      3309\nLattitude        3331\nLongtitude       3331\nRegionname          0\nPropertycount       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"It shows that almost all of the house has no house specification data when their lattitude and longitude is null. So, we can delete them","metadata":{}},{"cell_type":"code","source":"df.dropna(subset=['Bathroom', 'Bedroom2', 'Car', 'Landsize', 'BuildingArea', 'YearBuilt', 'CouncilArea', 'Lattitude', 'Longtitude'], how='all', inplace=True)\n\ndf_null_longtitude = df[df['Longtitude'].isnull()]\n\ndf_null_longtitude","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.021929Z","iopub.execute_input":"2024-10-29T09:19:00.022357Z","iopub.status.idle":"2024-10-29T09:19:00.085748Z","shell.execute_reply.started":"2024-10-29T09:19:00.022317Z","shell.execute_reply":"2024-10-29T09:19:00.084398Z"},"trusted":true},"execution_count":863,"outputs":[{"execution_count":863,"output_type":"execute_result","data":{"text/plain":"       Unnamed: 0              Suburb                Address  Rooms Type  \\\n2019         2572             Burwood           23 Monica St      3    h   \n2507         3257        Clifton Hill  3/268 Alexandra Pde E      1    u   \n3461         4485           Footscray          483 Barkly St      3    t   \n3987         5170        Hampton East           7 Seafoam St      4    t   \n8371        10745  Williamstown North         4/9 Adeline St      1    u   \n10269       13223           Melbourne   1913/228 Abeckett St      3    u   \n10902       14008            Brooklyn          9 Richards Ct      3    h   \n10996       14132     North Melbourne   13/201 Abbotsford St      2    t   \n11003       14139      Oakleigh South            4 Druitt St      4    h   \n11005       14142      Oakleigh South        298 Warrigal Rd      3    h   \n11006       14143      Oakleigh South            11 Yarra Ct      5    h   \n11656       14976            Essendon        9 Washington St      3    h   \n11881       15278              Seddon          60 Station Rd      4    h   \n12112       15561             Croydon       3 Silvergrass Ct      3    h   \n12704       16358          Kensington     201/102 Rankins Rd      2    u   \n12864       16564          Strathmore          48 Lebanon St      3    h   \n13702       17616          Kensington     109/102 Rankins Rd      1    u   \n13706       17620         Keysborough          19 Denmark Rd      5    h   \n14131       18141               Lalor           83 Rotino Cr      3    t   \n14515       18614           Mickleham        17 Primavera Dr      4    h   \n14655       18793             Wollert      13 Strathalbyn Ch      4    h   \n14813       18995           Greenvale         40 Frontier Av      3    t   \n\n           Price Method        SellerG        Date  Distance  ...  Bathroom  \\\n2019    990000.0     VB      Fletchers  17/09/2016      11.7  ...       2.0   \n2507    363000.0      S  hockingstuart  27/06/2016       3.4  ...       1.0   \n3461    781000.0      S            Jas  27/11/2016       6.4  ...       2.0   \n3987   1185000.0      S             RT  28/05/2016      14.5  ...       3.0   \n8371    355000.0      S        Sweeney  27/11/2016       8.9  ...       1.0   \n10269  1175000.0     PI           Icon  29/04/2017       2.8  ...       3.0   \n10902   750000.0      S  hockingstuart  20/05/2017      10.9  ...       1.0   \n10996   755000.0     PI         Nelson  29/04/2017       2.3  ...       1.0   \n11003  1205500.0      S       Woodards  22/04/2017      14.7  ...       2.0   \n11005   799999.0      S       Woodards  29/04/2017      14.7  ...       2.0   \n11006  1200000.0     PI         Buxton  29/04/2017      14.7  ...       2.0   \n11656  1520000.0      S           Brad   3/06/2017       7.5  ...       2.0   \n11881  1500000.0     SP        Sweeney   3/06/2017       5.1  ...       3.0   \n12112   630000.0      S        McGrath  17/06/2017      23.0  ...       2.0   \n12704   876000.0      S        Rendina  24/06/2017       3.4  ...       2.0   \n12864   950000.0     PI      Considine  24/06/2017       8.2  ...       2.0   \n13702   410000.0     PI        Rendina   8/07/2017       3.4  ...       1.0   \n13706  1100000.0     PI       VicHomes   8/07/2017      25.2  ...       3.0   \n14131   463000.0      S            HAR  12/08/2017      16.3  ...       2.0   \n14515   610000.0      S            Ray  15/07/2017      20.6  ...       2.0   \n14655   631000.0     PI  hockingstuart  15/07/2017      25.5  ...       2.0   \n14813   470000.0     SP          Barry  22/07/2017      20.4  ...       2.0   \n\n       Car  Landsize  BuildingArea  YearBuilt        CouncilArea  Lattitude  \\\n2019   2.0     263.0           NaN        NaN         Whitehorse        NaN   \n2507   1.0       0.0           NaN        NaN              Yarra        NaN   \n3461   2.0      98.0         169.0     2015.0        Maribyrnong        NaN   \n3987   1.0     300.0           NaN        NaN            Bayside        NaN   \n8371   1.0      46.0          46.0        NaN        Hobsons Bay        NaN   \n10269  2.0       0.0           NaN        NaN          Melbourne        NaN   \n10902  2.0     667.0           NaN        NaN        Hobsons Bay        NaN   \n10996  1.0    1537.0          81.0     1890.0          Melbourne        NaN   \n11003  2.0     553.0           NaN        NaN           Kingston        NaN   \n11005  4.0     590.0         135.0     1960.0             Monash        NaN   \n11006  2.0     532.0           NaN        NaN           Kingston        NaN   \n11656  1.0     321.0           NaN        NaN      Moonee Valley        NaN   \n11881  2.0     169.0           NaN        NaN        Maribyrnong        NaN   \n12112  2.0     319.0           NaN        NaN          Maroondah        NaN   \n12704  2.0       0.0          74.0     2015.0          Melbourne        NaN   \n12864  2.0     216.0           NaN        NaN      Moonee Valley        NaN   \n13702  1.0    1053.0           NaN        NaN          Melbourne        NaN   \n13706  2.0     522.0           NaN        NaN  Greater Dandenong        NaN   \n14131  2.0     114.0          88.0     2014.0         Whittlesea        NaN   \n14515  2.0     490.0         208.0     2015.0               Hume        NaN   \n14655  2.0     400.0         184.0     2015.0         Whittlesea        NaN   \n14813  2.0     201.0         133.0     2016.0               Hume        NaN   \n\n      Longtitude                  Regionname  Propertycount  \n2019         NaN       Southern Metropolitan         5678.0  \n2507         NaN       Northern Metropolitan         2954.0  \n3461         NaN        Western Metropolitan         7570.0  \n3987         NaN       Southern Metropolitan         2356.0  \n8371         NaN        Western Metropolitan          802.0  \n10269        NaN       Northern Metropolitan        17496.0  \n10902        NaN        Western Metropolitan          962.0  \n10996        NaN       Northern Metropolitan         6821.0  \n11003        NaN  South-Eastern Metropolitan         3692.0  \n11005        NaN  South-Eastern Metropolitan         3692.0  \n11006        NaN  South-Eastern Metropolitan         3692.0  \n11656        NaN        Western Metropolitan         9264.0  \n11881        NaN        Western Metropolitan         2417.0  \n12112        NaN        Eastern Metropolitan        11925.0  \n12704        NaN       Northern Metropolitan         5263.0  \n12864        NaN        Western Metropolitan         3284.0  \n13702        NaN       Northern Metropolitan         5263.0  \n13706        NaN  South-Eastern Metropolitan         8459.0  \n14131        NaN       Northern Metropolitan         8279.0  \n14515        NaN       Northern Metropolitan         1158.0  \n14655        NaN       Northern Metropolitan         2940.0  \n14813        NaN       Northern Metropolitan         4864.0  \n\n[22 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Suburb</th>\n      <th>Address</th>\n      <th>Rooms</th>\n      <th>Type</th>\n      <th>Price</th>\n      <th>Method</th>\n      <th>SellerG</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>...</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>BuildingArea</th>\n      <th>YearBuilt</th>\n      <th>CouncilArea</th>\n      <th>Lattitude</th>\n      <th>Longtitude</th>\n      <th>Regionname</th>\n      <th>Propertycount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2019</th>\n      <td>2572</td>\n      <td>Burwood</td>\n      <td>23 Monica St</td>\n      <td>3</td>\n      <td>h</td>\n      <td>990000.0</td>\n      <td>VB</td>\n      <td>Fletchers</td>\n      <td>17/09/2016</td>\n      <td>11.7</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>263.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Whitehorse</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Southern Metropolitan</td>\n      <td>5678.0</td>\n    </tr>\n    <tr>\n      <th>2507</th>\n      <td>3257</td>\n      <td>Clifton Hill</td>\n      <td>3/268 Alexandra Pde E</td>\n      <td>1</td>\n      <td>u</td>\n      <td>363000.0</td>\n      <td>S</td>\n      <td>hockingstuart</td>\n      <td>27/06/2016</td>\n      <td>3.4</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Yarra</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Northern Metropolitan</td>\n      <td>2954.0</td>\n    </tr>\n    <tr>\n      <th>3461</th>\n      <td>4485</td>\n      <td>Footscray</td>\n      <td>483 Barkly St</td>\n      <td>3</td>\n      <td>t</td>\n      <td>781000.0</td>\n      <td>S</td>\n      <td>Jas</td>\n      <td>27/11/2016</td>\n      <td>6.4</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>98.0</td>\n      <td>169.0</td>\n      <td>2015.0</td>\n      <td>Maribyrnong</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Western Metropolitan</td>\n      <td>7570.0</td>\n    </tr>\n    <tr>\n      <th>3987</th>\n      <td>5170</td>\n      <td>Hampton East</td>\n      <td>7 Seafoam St</td>\n      <td>4</td>\n      <td>t</td>\n      <td>1185000.0</td>\n      <td>S</td>\n      <td>RT</td>\n      <td>28/05/2016</td>\n      <td>14.5</td>\n      <td>...</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>300.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Bayside</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Southern Metropolitan</td>\n      <td>2356.0</td>\n    </tr>\n    <tr>\n      <th>8371</th>\n      <td>10745</td>\n      <td>Williamstown North</td>\n      <td>4/9 Adeline St</td>\n      <td>1</td>\n      <td>u</td>\n      <td>355000.0</td>\n      <td>S</td>\n      <td>Sweeney</td>\n      <td>27/11/2016</td>\n      <td>8.9</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>46.0</td>\n      <td>46.0</td>\n      <td>NaN</td>\n      <td>Hobsons Bay</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Western Metropolitan</td>\n      <td>802.0</td>\n    </tr>\n    <tr>\n      <th>10269</th>\n      <td>13223</td>\n      <td>Melbourne</td>\n      <td>1913/228 Abeckett St</td>\n      <td>3</td>\n      <td>u</td>\n      <td>1175000.0</td>\n      <td>PI</td>\n      <td>Icon</td>\n      <td>29/04/2017</td>\n      <td>2.8</td>\n      <td>...</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Melbourne</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Northern Metropolitan</td>\n      <td>17496.0</td>\n    </tr>\n    <tr>\n      <th>10902</th>\n      <td>14008</td>\n      <td>Brooklyn</td>\n      <td>9 Richards Ct</td>\n      <td>3</td>\n      <td>h</td>\n      <td>750000.0</td>\n      <td>S</td>\n      <td>hockingstuart</td>\n      <td>20/05/2017</td>\n      <td>10.9</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>667.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Hobsons Bay</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Western Metropolitan</td>\n      <td>962.0</td>\n    </tr>\n    <tr>\n      <th>10996</th>\n      <td>14132</td>\n      <td>North Melbourne</td>\n      <td>13/201 Abbotsford St</td>\n      <td>2</td>\n      <td>t</td>\n      <td>755000.0</td>\n      <td>PI</td>\n      <td>Nelson</td>\n      <td>29/04/2017</td>\n      <td>2.3</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1537.0</td>\n      <td>81.0</td>\n      <td>1890.0</td>\n      <td>Melbourne</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Northern Metropolitan</td>\n      <td>6821.0</td>\n    </tr>\n    <tr>\n      <th>11003</th>\n      <td>14139</td>\n      <td>Oakleigh South</td>\n      <td>4 Druitt St</td>\n      <td>4</td>\n      <td>h</td>\n      <td>1205500.0</td>\n      <td>S</td>\n      <td>Woodards</td>\n      <td>22/04/2017</td>\n      <td>14.7</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>553.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Kingston</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>South-Eastern Metropolitan</td>\n      <td>3692.0</td>\n    </tr>\n    <tr>\n      <th>11005</th>\n      <td>14142</td>\n      <td>Oakleigh South</td>\n      <td>298 Warrigal Rd</td>\n      <td>3</td>\n      <td>h</td>\n      <td>799999.0</td>\n      <td>S</td>\n      <td>Woodards</td>\n      <td>29/04/2017</td>\n      <td>14.7</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>4.0</td>\n      <td>590.0</td>\n      <td>135.0</td>\n      <td>1960.0</td>\n      <td>Monash</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>South-Eastern Metropolitan</td>\n      <td>3692.0</td>\n    </tr>\n    <tr>\n      <th>11006</th>\n      <td>14143</td>\n      <td>Oakleigh South</td>\n      <td>11 Yarra Ct</td>\n      <td>5</td>\n      <td>h</td>\n      <td>1200000.0</td>\n      <td>PI</td>\n      <td>Buxton</td>\n      <td>29/04/2017</td>\n      <td>14.7</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>532.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Kingston</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>South-Eastern Metropolitan</td>\n      <td>3692.0</td>\n    </tr>\n    <tr>\n      <th>11656</th>\n      <td>14976</td>\n      <td>Essendon</td>\n      <td>9 Washington St</td>\n      <td>3</td>\n      <td>h</td>\n      <td>1520000.0</td>\n      <td>S</td>\n      <td>Brad</td>\n      <td>3/06/2017</td>\n      <td>7.5</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>321.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Moonee Valley</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Western Metropolitan</td>\n      <td>9264.0</td>\n    </tr>\n    <tr>\n      <th>11881</th>\n      <td>15278</td>\n      <td>Seddon</td>\n      <td>60 Station Rd</td>\n      <td>4</td>\n      <td>h</td>\n      <td>1500000.0</td>\n      <td>SP</td>\n      <td>Sweeney</td>\n      <td>3/06/2017</td>\n      <td>5.1</td>\n      <td>...</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>169.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Maribyrnong</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Western Metropolitan</td>\n      <td>2417.0</td>\n    </tr>\n    <tr>\n      <th>12112</th>\n      <td>15561</td>\n      <td>Croydon</td>\n      <td>3 Silvergrass Ct</td>\n      <td>3</td>\n      <td>h</td>\n      <td>630000.0</td>\n      <td>S</td>\n      <td>McGrath</td>\n      <td>17/06/2017</td>\n      <td>23.0</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>319.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Maroondah</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Eastern Metropolitan</td>\n      <td>11925.0</td>\n    </tr>\n    <tr>\n      <th>12704</th>\n      <td>16358</td>\n      <td>Kensington</td>\n      <td>201/102 Rankins Rd</td>\n      <td>2</td>\n      <td>u</td>\n      <td>876000.0</td>\n      <td>S</td>\n      <td>Rendina</td>\n      <td>24/06/2017</td>\n      <td>3.4</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>74.0</td>\n      <td>2015.0</td>\n      <td>Melbourne</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Northern Metropolitan</td>\n      <td>5263.0</td>\n    </tr>\n    <tr>\n      <th>12864</th>\n      <td>16564</td>\n      <td>Strathmore</td>\n      <td>48 Lebanon St</td>\n      <td>3</td>\n      <td>h</td>\n      <td>950000.0</td>\n      <td>PI</td>\n      <td>Considine</td>\n      <td>24/06/2017</td>\n      <td>8.2</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>216.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Moonee Valley</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Western Metropolitan</td>\n      <td>3284.0</td>\n    </tr>\n    <tr>\n      <th>13702</th>\n      <td>17616</td>\n      <td>Kensington</td>\n      <td>109/102 Rankins Rd</td>\n      <td>1</td>\n      <td>u</td>\n      <td>410000.0</td>\n      <td>PI</td>\n      <td>Rendina</td>\n      <td>8/07/2017</td>\n      <td>3.4</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1053.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Melbourne</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Northern Metropolitan</td>\n      <td>5263.0</td>\n    </tr>\n    <tr>\n      <th>13706</th>\n      <td>17620</td>\n      <td>Keysborough</td>\n      <td>19 Denmark Rd</td>\n      <td>5</td>\n      <td>h</td>\n      <td>1100000.0</td>\n      <td>PI</td>\n      <td>VicHomes</td>\n      <td>8/07/2017</td>\n      <td>25.2</td>\n      <td>...</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>522.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Greater Dandenong</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>South-Eastern Metropolitan</td>\n      <td>8459.0</td>\n    </tr>\n    <tr>\n      <th>14131</th>\n      <td>18141</td>\n      <td>Lalor</td>\n      <td>83 Rotino Cr</td>\n      <td>3</td>\n      <td>t</td>\n      <td>463000.0</td>\n      <td>S</td>\n      <td>HAR</td>\n      <td>12/08/2017</td>\n      <td>16.3</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>114.0</td>\n      <td>88.0</td>\n      <td>2014.0</td>\n      <td>Whittlesea</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Northern Metropolitan</td>\n      <td>8279.0</td>\n    </tr>\n    <tr>\n      <th>14515</th>\n      <td>18614</td>\n      <td>Mickleham</td>\n      <td>17 Primavera Dr</td>\n      <td>4</td>\n      <td>h</td>\n      <td>610000.0</td>\n      <td>S</td>\n      <td>Ray</td>\n      <td>15/07/2017</td>\n      <td>20.6</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>490.0</td>\n      <td>208.0</td>\n      <td>2015.0</td>\n      <td>Hume</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Northern Metropolitan</td>\n      <td>1158.0</td>\n    </tr>\n    <tr>\n      <th>14655</th>\n      <td>18793</td>\n      <td>Wollert</td>\n      <td>13 Strathalbyn Ch</td>\n      <td>4</td>\n      <td>h</td>\n      <td>631000.0</td>\n      <td>PI</td>\n      <td>hockingstuart</td>\n      <td>15/07/2017</td>\n      <td>25.5</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>400.0</td>\n      <td>184.0</td>\n      <td>2015.0</td>\n      <td>Whittlesea</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Northern Metropolitan</td>\n      <td>2940.0</td>\n    </tr>\n    <tr>\n      <th>14813</th>\n      <td>18995</td>\n      <td>Greenvale</td>\n      <td>40 Frontier Av</td>\n      <td>3</td>\n      <td>t</td>\n      <td>470000.0</td>\n      <td>SP</td>\n      <td>Barry</td>\n      <td>22/07/2017</td>\n      <td>20.4</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>201.0</td>\n      <td>133.0</td>\n      <td>2016.0</td>\n      <td>Hume</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Northern Metropolitan</td>\n      <td>4864.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>22 rows Ã— 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Calculate average Lattitude and Longtitude for each CouncilArea\naverage_coords = df.groupby('CouncilArea')[['Lattitude', 'Longtitude']].transform('mean')\n\n# Fill NaN values in 'Lattitude' and 'Longtitude' columns with the average for each CouncilArea\ndf['Lattitude'] = df['Lattitude'].fillna(average_coords['Lattitude'])\ndf['Longtitude'] = df['Longtitude'].fillna(average_coords['Longtitude'])","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.087633Z","iopub.execute_input":"2024-10-29T09:19:00.088108Z","iopub.status.idle":"2024-10-29T09:19:00.102418Z","shell.execute_reply.started":"2024-10-29T09:19:00.088067Z","shell.execute_reply":"2024-10-29T09:19:00.101051Z"},"trusted":true},"execution_count":864,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.104249Z","iopub.execute_input":"2024-10-29T09:19:00.105461Z","iopub.status.idle":"2024-10-29T09:19:00.12571Z","shell.execute_reply.started":"2024-10-29T09:19:00.105405Z","shell.execute_reply":"2024-10-29T09:19:00.124341Z"},"trusted":true},"execution_count":865,"outputs":[{"execution_count":865,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0          0\nSuburb              0\nAddress             0\nRooms               0\nType                0\nPrice               0\nMethod              0\nSellerG             0\nDate                0\nDistance            0\nPostcode            0\nBedroom2          159\nBathroom          161\nCar               266\nLandsize         1483\nBuildingArea     7324\nYearBuilt        6128\nCouncilArea      2853\nLattitude           0\nLongtitude          0\nRegionname          0\nPropertycount       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"## 3. Cars","metadata":{}},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.127722Z","iopub.execute_input":"2024-10-29T09:19:00.128144Z","iopub.status.idle":"2024-10-29T09:19:00.137Z","shell.execute_reply.started":"2024-10-29T09:19:00.128106Z","shell.execute_reply":"2024-10-29T09:19:00.135148Z"},"trusted":true},"execution_count":866,"outputs":[{"execution_count":866,"output_type":"execute_result","data":{"text/plain":"(15086, 22)"},"metadata":{}}]},{"cell_type":"markdown","source":"From that data we can see that some house area has no data about car garage. Because of that, and also because the numbers of that kind of data is so small compared to the total numbers of the data, we can assumed that house is exist but has no car garage/car park.","metadata":{}},{"cell_type":"code","source":"df_null_latitude = df[df['Car'].isnull()]\n\ndf_null_latitude.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.139026Z","iopub.execute_input":"2024-10-29T09:19:00.139784Z","iopub.status.idle":"2024-10-29T09:19:00.15481Z","shell.execute_reply.started":"2024-10-29T09:19:00.139728Z","shell.execute_reply":"2024-10-29T09:19:00.153448Z"},"trusted":true},"execution_count":867,"outputs":[{"execution_count":867,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0         0\nSuburb             0\nAddress            0\nRooms              0\nType               0\nPrice              0\nMethod             0\nSellerG            0\nDate               0\nDistance           0\nPostcode           0\nBedroom2         159\nBathroom         161\nCar              266\nLandsize         203\nBuildingArea     222\nYearBuilt        217\nCouncilArea      266\nLattitude          0\nLongtitude         0\nRegionname         0\nPropertycount      0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df.dropna(subset=['Bathroom', 'Bedroom2', 'Car', 'Landsize', 'BuildingArea', 'YearBuilt', 'CouncilArea'], how='all', inplace=True)\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.156781Z","iopub.execute_input":"2024-10-29T09:19:00.158009Z","iopub.status.idle":"2024-10-29T09:19:00.195724Z","shell.execute_reply.started":"2024-10-29T09:19:00.157947Z","shell.execute_reply":"2024-10-29T09:19:00.194449Z"},"trusted":true},"execution_count":868,"outputs":[{"execution_count":868,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0          0\nSuburb              0\nAddress             0\nRooms               0\nType                0\nPrice               0\nMethod              0\nSellerG             0\nDate                0\nDistance            0\nPostcode            0\nBedroom2            0\nBathroom            2\nCar               107\nLandsize         1324\nBuildingArea     7165\nYearBuilt        5969\nCouncilArea      2694\nLattitude           0\nLongtitude          0\nRegionname          0\nPropertycount       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Car'] = df['Car'].fillna(0)\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.197491Z","iopub.execute_input":"2024-10-29T09:19:00.198007Z","iopub.status.idle":"2024-10-29T09:19:00.221139Z","shell.execute_reply.started":"2024-10-29T09:19:00.197954Z","shell.execute_reply":"2024-10-29T09:19:00.219658Z"},"trusted":true},"execution_count":869,"outputs":[{"execution_count":869,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0          0\nSuburb              0\nAddress             0\nRooms               0\nType                0\nPrice               0\nMethod              0\nSellerG             0\nDate                0\nDistance            0\nPostcode            0\nBedroom2            0\nBathroom            2\nCar                 0\nLandsize         1324\nBuildingArea     7165\nYearBuilt        5969\nCouncilArea      2694\nLattitude           0\nLongtitude          0\nRegionname          0\nPropertycount       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"## 4. Landsize, BuildingArea, and YearBuilt","metadata":{}},{"cell_type":"markdown","source":"We can change the null values with the average value of those columns. But we need to see is there any outliers that makes the mean value goes wrong.","metadata":{}},{"cell_type":"code","source":"sns.scatterplot(data=df, x='Landsize', y='Price')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.227563Z","iopub.execute_input":"2024-10-29T09:19:00.22859Z","iopub.status.idle":"2024-10-29T09:19:00.466578Z","shell.execute_reply.started":"2024-10-29T09:19:00.228538Z","shell.execute_reply":"2024-10-29T09:19:00.465174Z"},"trusted":true},"execution_count":870,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":"You can see, there's one house that has more than 40000 miles of landsize. It should be deleted","metadata":{}},{"cell_type":"code","source":"Landsize1 = df[df['Landsize'] > 100000].index\ndf.drop(Landsize1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.468192Z","iopub.execute_input":"2024-10-29T09:19:00.468602Z","iopub.status.idle":"2024-10-29T09:19:00.481294Z","shell.execute_reply.started":"2024-10-29T09:19:00.468565Z","shell.execute_reply":"2024-10-29T09:19:00.480004Z"},"trusted":true},"execution_count":871,"outputs":[]},{"cell_type":"code","source":"sns.scatterplot(data=df, x='BuildingArea', y='Price')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.482956Z","iopub.execute_input":"2024-10-29T09:19:00.483396Z","iopub.status.idle":"2024-10-29T09:19:00.703076Z","shell.execute_reply.started":"2024-10-29T09:19:00.483332Z","shell.execute_reply":"2024-10-29T09:19:00.701614Z"},"trusted":true},"execution_count":872,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"Building1 = df[df['BuildingArea'] > 10000].index\ndf.drop(Building1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.7051Z","iopub.execute_input":"2024-10-29T09:19:00.705641Z","iopub.status.idle":"2024-10-29T09:19:00.718632Z","shell.execute_reply.started":"2024-10-29T09:19:00.705588Z","shell.execute_reply":"2024-10-29T09:19:00.717194Z"},"trusted":true},"execution_count":873,"outputs":[]},{"cell_type":"code","source":"sns.scatterplot(data=df, x='YearBuilt', y='Price')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.720769Z","iopub.execute_input":"2024-10-29T09:19:00.721273Z","iopub.status.idle":"2024-10-29T09:19:00.903126Z","shell.execute_reply.started":"2024-10-29T09:19:00.721228Z","shell.execute_reply":"2024-10-29T09:19:00.901814Z"},"trusted":true},"execution_count":874,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"df.drop(df[df['YearBuilt'] < 1800].index, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.904848Z","iopub.execute_input":"2024-10-29T09:19:00.905367Z","iopub.status.idle":"2024-10-29T09:19:00.917846Z","shell.execute_reply.started":"2024-10-29T09:19:00.905313Z","shell.execute_reply":"2024-10-29T09:19:00.916469Z"},"trusted":true},"execution_count":875,"outputs":[]},{"cell_type":"code","source":"df['YearBuilt'] = df['YearBuilt'].fillna(df['YearBuilt'].mean())\ndf['Landsize'] = df['Landsize'].fillna(df['Landsize'].mean())\ndf['BuildingArea'] = df['BuildingArea'].fillna(df['BuildingArea'].mean())","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.920057Z","iopub.execute_input":"2024-10-29T09:19:00.920798Z","iopub.status.idle":"2024-10-29T09:19:00.932339Z","shell.execute_reply.started":"2024-10-29T09:19:00.920676Z","shell.execute_reply":"2024-10-29T09:19:00.931005Z"},"trusted":true},"execution_count":876,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.934237Z","iopub.execute_input":"2024-10-29T09:19:00.935433Z","iopub.status.idle":"2024-10-29T09:19:00.955647Z","shell.execute_reply.started":"2024-10-29T09:19:00.935354Z","shell.execute_reply":"2024-10-29T09:19:00.953908Z"},"trusted":true},"execution_count":877,"outputs":[{"execution_count":877,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0          0\nSuburb              0\nAddress             0\nRooms               0\nType                0\nPrice               0\nMethod              0\nSellerG             0\nDate                0\nDistance            0\nPostcode            0\nBedroom2            0\nBathroom            2\nCar                 0\nLandsize            0\nBuildingArea        0\nYearBuilt           0\nCouncilArea      2693\nLattitude           0\nLongtitude          0\nRegionname          0\nPropertycount       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"## 5. Bathroom","metadata":{}},{"cell_type":"code","source":"df.dropna(subset=['Bathroom'], inplace=True)\n\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.957435Z","iopub.execute_input":"2024-10-29T09:19:00.957898Z","iopub.status.idle":"2024-10-29T09:19:00.985366Z","shell.execute_reply.started":"2024-10-29T09:19:00.957851Z","shell.execute_reply":"2024-10-29T09:19:00.983933Z"},"trusted":true},"execution_count":878,"outputs":[{"execution_count":878,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0          0\nSuburb              0\nAddress             0\nRooms               0\nType                0\nPrice               0\nMethod              0\nSellerG             0\nDate                0\nDistance            0\nPostcode            0\nBedroom2            0\nBathroom            0\nCar                 0\nLandsize            0\nBuildingArea        0\nYearBuilt           0\nCouncilArea      2691\nLattitude           0\nLongtitude          0\nRegionname          0\nPropertycount       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"## 6. CouncilArea","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# Step 1: Prepare the data\n# Filter rows where CouncilArea is not null to use as training data\ndf_train = df.dropna(subset=['CouncilArea', 'Lattitude', 'Longtitude'])\n\n# Encode CouncilArea as it is categorical and create a mapping\ndf_train['CouncilArea'] = df_train['CouncilArea'].astype('category')\ncouncil_area_mapping = dict(enumerate(df_train['CouncilArea'].cat.categories))\ndf_train['CouncilArea'] = df_train['CouncilArea'].cat.codes\n\n# Prepare data for training\nX = df_train[['Lattitude', 'Longtitude']]\ny = df_train['CouncilArea']\n\n# Step 2: Initialize and train the model\nmodel = RandomForestClassifier(random_state=0)\nmodel.fit(X, y)\n\n# Step 3: Predict missing CouncilArea values\n# Filter rows where CouncilArea is missing\ndf_missing = df[df['CouncilArea'].isna() & df['Lattitude'].notna() & df['Longtitude'].notna()]\nif not df_missing.empty:\n    # Predict using the trained model\n    predictions = model.predict(df_missing[['Lattitude', 'Longtitude']])\n\n    # Map encoded predictions back to original names\n    predicted_areas = pd.Series(predictions).map(council_area_mapping)\n\n    # Assign these predicted names back to the missing CouncilArea rows\n    df.loc[df['CouncilArea'].isna(), 'CouncilArea'] = predicted_areas.values\nelse:\n    print(\"No missing CouncilArea values to predict.\")","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:00.986922Z","iopub.execute_input":"2024-10-29T09:19:00.987346Z","iopub.status.idle":"2024-10-29T09:19:02.592419Z","shell.execute_reply.started":"2024-10-29T09:19:00.987308Z","shell.execute_reply":"2024-10-29T09:19:02.591223Z"},"trusted":true},"execution_count":879,"outputs":[]},{"cell_type":"code","source":"# Identify rows where CouncilArea contains numeric values\nnumeric_council_area = df[pd.to_numeric(df['CouncilArea'], errors='coerce').notna()]\nnumeric_council_area = numeric_council_area[['Suburb', 'Address', 'CouncilArea']]\nprint(numeric_council_area)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:02.593962Z","iopub.execute_input":"2024-10-29T09:19:02.594353Z","iopub.status.idle":"2024-10-29T09:19:02.618703Z","shell.execute_reply.started":"2024-10-29T09:19:02.594315Z","shell.execute_reply":"2024-10-29T09:19:02.617255Z"},"trusted":true},"execution_count":880,"outputs":[{"name":"stdout","text":"Empty DataFrame\nColumns: [Suburb, Address, CouncilArea]\nIndex: []\n","output_type":"stream"}]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:02.620543Z","iopub.execute_input":"2024-10-29T09:19:02.621049Z","iopub.status.idle":"2024-10-29T09:19:02.642694Z","shell.execute_reply.started":"2024-10-29T09:19:02.620996Z","shell.execute_reply":"2024-10-29T09:19:02.641574Z"},"trusted":true},"execution_count":881,"outputs":[{"execution_count":881,"output_type":"execute_result","data":{"text/plain":"Unnamed: 0       0\nSuburb           0\nAddress          0\nRooms            0\nType             0\nPrice            0\nMethod           0\nSellerG          0\nDate             0\nDistance         0\nPostcode         0\nBedroom2         0\nBathroom         0\nCar              0\nLandsize         0\nBuildingArea     0\nYearBuilt        0\nCouncilArea      0\nLattitude        0\nLongtitude       0\nRegionname       0\nPropertycount    0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"The final numbers of non-null data can be shown below","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:02.644993Z","iopub.execute_input":"2024-10-29T09:19:02.645426Z","iopub.status.idle":"2024-10-29T09:19:02.67252Z","shell.execute_reply.started":"2024-10-29T09:19:02.645346Z","shell.execute_reply":"2024-10-29T09:19:02.671247Z"},"trusted":true},"execution_count":882,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nInt64Index: 14922 entries, 0 to 18395\nData columns (total 22 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Unnamed: 0     14922 non-null  int64  \n 1   Suburb         14922 non-null  object \n 2   Address        14922 non-null  object \n 3   Rooms          14922 non-null  int64  \n 4   Type           14922 non-null  object \n 5   Price          14922 non-null  float64\n 6   Method         14922 non-null  object \n 7   SellerG        14922 non-null  object \n 8   Date           14922 non-null  object \n 9   Distance       14922 non-null  float64\n 10  Postcode       14922 non-null  float64\n 11  Bedroom2       14922 non-null  float64\n 12  Bathroom       14922 non-null  float64\n 13  Car            14922 non-null  float64\n 14  Landsize       14922 non-null  float64\n 15  BuildingArea   14922 non-null  float64\n 16  YearBuilt      14922 non-null  float64\n 17  CouncilArea    14922 non-null  object \n 18  Lattitude      14922 non-null  float64\n 19  Longtitude     14922 non-null  float64\n 20  Regionname     14922 non-null  object \n 21  Propertycount  14922 non-null  float64\ndtypes: float64(12), int64(2), object(8)\nmemory usage: 2.6+ MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Data Cleansing","metadata":{}},{"cell_type":"markdown","source":"## 1. Outlier","metadata":{}},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:02.674284Z","iopub.execute_input":"2024-10-29T09:19:02.674702Z","iopub.status.idle":"2024-10-29T09:19:02.745434Z","shell.execute_reply.started":"2024-10-29T09:19:02.674662Z","shell.execute_reply":"2024-10-29T09:19:02.74408Z"},"trusted":true},"execution_count":883,"outputs":[{"execution_count":883,"output_type":"execute_result","data":{"text/plain":"         Unnamed: 0         Rooms         Price      Distance      Postcode  \\\ncount  14922.000000  14922.000000  1.492200e+04  14922.000000  14922.000000   \nmean   12110.048921      2.934258  1.066963e+06     10.307680   3107.141335   \nstd     6859.184436      0.955708  6.381745e+05      6.054752     94.537468   \nmin        1.000000      1.000000  8.500000e+04      0.000000   3000.000000   \n25%     6156.250000      2.000000  6.410000e+05      6.200000   3046.000000   \n50%    12119.500000      3.000000  9.000000e+05      9.300000   3085.000000   \n75%    18229.750000      3.000000  1.320000e+06     13.100000   3149.000000   \nmax    23546.000000     10.000000  9.000000e+06     48.100000   3977.000000   \n\n           Bedroom2      Bathroom           Car      Landsize  BuildingArea  \\\ncount  14922.000000  14922.000000  14922.000000  14922.000000  14922.000000   \nmean       2.912746      1.538333      1.603806    523.078746    145.507647   \nstd        0.964499      0.689159      0.961552   1352.376419     91.025827   \nmin        0.000000      0.000000      0.000000      0.000000      0.000000   \n25%        2.000000      1.000000      1.000000    196.000000    123.000000   \n50%        3.000000      1.000000      2.000000    504.000000    145.507647   \n75%        3.000000      2.000000      2.000000    637.000000    145.507647   \nmax       20.000000      8.000000     10.000000  76000.000000   6791.000000   \n\n          YearBuilt     Lattitude    Longtitude  Propertycount  \ncount  14922.000000  14922.000000  14922.000000   14922.000000  \nmean    1965.965948    -37.809639    144.996482    7473.985257  \nstd       27.976148      0.081221      0.106400    4386.739708  \nmin     1830.000000    -38.182550    144.431810     249.000000  \n25%     1960.000000    -37.857740    144.930600    4380.000000  \n50%     1965.965948    -37.803300    145.001200    6567.000000  \n75%     1975.000000    -37.755713    145.060317   10331.000000  \nmax     2018.000000    -37.408530    145.526350   21650.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Rooms</th>\n      <th>Price</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>BuildingArea</th>\n      <th>YearBuilt</th>\n      <th>Lattitude</th>\n      <th>Longtitude</th>\n      <th>Propertycount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>1.492200e+04</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n      <td>14922.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>12110.048921</td>\n      <td>2.934258</td>\n      <td>1.066963e+06</td>\n      <td>10.307680</td>\n      <td>3107.141335</td>\n      <td>2.912746</td>\n      <td>1.538333</td>\n      <td>1.603806</td>\n      <td>523.078746</td>\n      <td>145.507647</td>\n      <td>1965.965948</td>\n      <td>-37.809639</td>\n      <td>144.996482</td>\n      <td>7473.985257</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>6859.184436</td>\n      <td>0.955708</td>\n      <td>6.381745e+05</td>\n      <td>6.054752</td>\n      <td>94.537468</td>\n      <td>0.964499</td>\n      <td>0.689159</td>\n      <td>0.961552</td>\n      <td>1352.376419</td>\n      <td>91.025827</td>\n      <td>27.976148</td>\n      <td>0.081221</td>\n      <td>0.106400</td>\n      <td>4386.739708</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>8.500000e+04</td>\n      <td>0.000000</td>\n      <td>3000.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1830.000000</td>\n      <td>-38.182550</td>\n      <td>144.431810</td>\n      <td>249.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>6156.250000</td>\n      <td>2.000000</td>\n      <td>6.410000e+05</td>\n      <td>6.200000</td>\n      <td>3046.000000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>196.000000</td>\n      <td>123.000000</td>\n      <td>1960.000000</td>\n      <td>-37.857740</td>\n      <td>144.930600</td>\n      <td>4380.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>12119.500000</td>\n      <td>3.000000</td>\n      <td>9.000000e+05</td>\n      <td>9.300000</td>\n      <td>3085.000000</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>504.000000</td>\n      <td>145.507647</td>\n      <td>1965.965948</td>\n      <td>-37.803300</td>\n      <td>145.001200</td>\n      <td>6567.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>18229.750000</td>\n      <td>3.000000</td>\n      <td>1.320000e+06</td>\n      <td>13.100000</td>\n      <td>3149.000000</td>\n      <td>3.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>637.000000</td>\n      <td>145.507647</td>\n      <td>1975.000000</td>\n      <td>-37.755713</td>\n      <td>145.060317</td>\n      <td>10331.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>23546.000000</td>\n      <td>10.000000</td>\n      <td>9.000000e+06</td>\n      <td>48.100000</td>\n      <td>3977.000000</td>\n      <td>20.000000</td>\n      <td>8.000000</td>\n      <td>10.000000</td>\n      <td>76000.000000</td>\n      <td>6791.000000</td>\n      <td>2018.000000</td>\n      <td>-37.408530</td>\n      <td>145.526350</td>\n      <td>21650.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"From the table, we can see that there are some column with possible outliers such as Landsize, BuildingArea, and Propertycount. That was because the max number and the mean number has difference that are too far away","metadata":{}},{"cell_type":"code","source":"sns.scatterplot(data=df, x='Propertycount', y='Price')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:02.747446Z","iopub.execute_input":"2024-10-29T09:19:02.747885Z","iopub.status.idle":"2024-10-29T09:19:02.935333Z","shell.execute_reply.started":"2024-10-29T09:19:02.747845Z","shell.execute_reply":"2024-10-29T09:19:02.934082Z"},"trusted":true},"execution_count":884,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"df.drop(df[df['Propertycount'] > 20000].index, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:02.936804Z","iopub.execute_input":"2024-10-29T09:19:02.937186Z","iopub.status.idle":"2024-10-29T09:19:02.953098Z","shell.execute_reply.started":"2024-10-29T09:19:02.937152Z","shell.execute_reply":"2024-10-29T09:19:02.951822Z"},"trusted":true},"execution_count":885,"outputs":[]},{"cell_type":"code","source":"sns.scatterplot(data=df, x='Landsize', y='Price')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:02.954961Z","iopub.execute_input":"2024-10-29T09:19:02.955392Z","iopub.status.idle":"2024-10-29T09:19:03.188278Z","shell.execute_reply.started":"2024-10-29T09:19:02.95534Z","shell.execute_reply":"2024-10-29T09:19:03.186824Z"},"trusted":true},"execution_count":886,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"df.drop(df[df['Landsize'] > 30000].index, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:03.190078Z","iopub.execute_input":"2024-10-29T09:19:03.190493Z","iopub.status.idle":"2024-10-29T09:19:03.204691Z","shell.execute_reply.started":"2024-10-29T09:19:03.190453Z","shell.execute_reply":"2024-10-29T09:19:03.201549Z"},"trusted":true},"execution_count":887,"outputs":[]},{"cell_type":"code","source":"sns.scatterplot(data=df, x='BuildingArea', y='Price')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:03.207685Z","iopub.execute_input":"2024-10-29T09:19:03.208206Z","iopub.status.idle":"2024-10-29T09:19:03.433555Z","shell.execute_reply.started":"2024-10-29T09:19:03.208148Z","shell.execute_reply":"2024-10-29T09:19:03.432161Z"},"trusted":true},"execution_count":888,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"df.drop(df[df['BuildingArea'] > 2000].index, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:03.435093Z","iopub.execute_input":"2024-10-29T09:19:03.435514Z","iopub.status.idle":"2024-10-29T09:19:03.448035Z","shell.execute_reply.started":"2024-10-29T09:19:03.435476Z","shell.execute_reply":"2024-10-29T09:19:03.446455Z"},"trusted":true},"execution_count":889,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:03.449931Z","iopub.execute_input":"2024-10-29T09:19:03.450601Z","iopub.status.idle":"2024-10-29T09:19:03.476747Z","shell.execute_reply.started":"2024-10-29T09:19:03.450539Z","shell.execute_reply":"2024-10-29T09:19:03.475193Z"},"trusted":true},"execution_count":890,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nInt64Index: 14522 entries, 0 to 18395\nData columns (total 22 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Unnamed: 0     14522 non-null  int64  \n 1   Suburb         14522 non-null  object \n 2   Address        14522 non-null  object \n 3   Rooms          14522 non-null  int64  \n 4   Type           14522 non-null  object \n 5   Price          14522 non-null  float64\n 6   Method         14522 non-null  object \n 7   SellerG        14522 non-null  object \n 8   Date           14522 non-null  object \n 9   Distance       14522 non-null  float64\n 10  Postcode       14522 non-null  float64\n 11  Bedroom2       14522 non-null  float64\n 12  Bathroom       14522 non-null  float64\n 13  Car            14522 non-null  float64\n 14  Landsize       14522 non-null  float64\n 15  BuildingArea   14522 non-null  float64\n 16  YearBuilt      14522 non-null  float64\n 17  CouncilArea    14522 non-null  object \n 18  Lattitude      14522 non-null  float64\n 19  Longtitude     14522 non-null  float64\n 20  Regionname     14522 non-null  object \n 21  Propertycount  14522 non-null  float64\ndtypes: float64(12), int64(2), object(8)\nmemory usage: 2.5+ MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## 2. Duplicate Data","metadata":{}},{"cell_type":"code","source":"# Show all duplicate rows based on 'ColumnName', 'SellerG', and 'Date'\nduplicate_date = df[df.duplicated(subset=['Address', 'Lattitude', 'Longtitude', 'SellerG', 'Date'], keep=False)]\nduplicate_date","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:03.484885Z","iopub.execute_input":"2024-10-29T09:19:03.485341Z","iopub.status.idle":"2024-10-29T09:19:03.518308Z","shell.execute_reply.started":"2024-10-29T09:19:03.4853Z","shell.execute_reply":"2024-10-29T09:19:03.516852Z"},"trusted":true},"execution_count":891,"outputs":[{"execution_count":891,"output_type":"execute_result","data":{"text/plain":"Empty DataFrame\nColumns: [Unnamed: 0, Suburb, Address, Rooms, Type, Price, Method, SellerG, Date, Distance, Postcode, Bedroom2, Bathroom, Car, Landsize, BuildingArea, YearBuilt, CouncilArea, Lattitude, Longtitude, Regionname, Propertycount]\nIndex: []\n\n[0 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Suburb</th>\n      <th>Address</th>\n      <th>Rooms</th>\n      <th>Type</th>\n      <th>Price</th>\n      <th>Method</th>\n      <th>SellerG</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>...</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>BuildingArea</th>\n      <th>YearBuilt</th>\n      <th>CouncilArea</th>\n      <th>Lattitude</th>\n      <th>Longtitude</th>\n      <th>Regionname</th>\n      <th>Propertycount</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n<p>0 rows Ã— 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"I choose that columns to be checked to define duplication because those are the true columns that can define if the house was sold by the same seller more than once at a certain time. We can see that there is no duplicates there.","metadata":{}},{"cell_type":"markdown","source":"## 3. Multicollinerarity","metadata":{}},{"cell_type":"markdown","source":"The last thing we need to consider when do data cleaning is multicollinearity.","metadata":{}},{"cell_type":"code","source":"corrmat = df.corr()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:03.519836Z","iopub.execute_input":"2024-10-29T09:19:03.520207Z","iopub.status.idle":"2024-10-29T09:19:03.537894Z","shell.execute_reply.started":"2024-10-29T09:19:03.520174Z","shell.execute_reply":"2024-10-29T09:19:03.536446Z"},"trusted":true},"execution_count":892,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize = (15,7))\nsns.heatmap(corrmat, annot=True, annot_kws={\"size\":10})\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:03.539583Z","iopub.execute_input":"2024-10-29T09:19:03.540029Z","iopub.status.idle":"2024-10-29T09:19:04.691882Z","shell.execute_reply.started":"2024-10-29T09:19:03.539987Z","shell.execute_reply":"2024-10-29T09:19:04.690472Z"},"trusted":true},"execution_count":893,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1080x504 with 2 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":"From the heatmap above we can see that there is also a collinerarity between 'Rooms' and 'Bedroom2'. So we need to drop one of them, because people usually asking how many bedrooms does a house have, we drop 'Rooms'","metadata":{}},{"cell_type":"code","source":"df.drop('Rooms', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.693703Z","iopub.execute_input":"2024-10-29T09:19:04.694118Z","iopub.status.idle":"2024-10-29T09:19:04.704428Z","shell.execute_reply.started":"2024-10-29T09:19:04.694078Z","shell.execute_reply":"2024-10-29T09:19:04.702904Z"},"trusted":true},"execution_count":894,"outputs":[]},{"cell_type":"markdown","source":"# Feature Encoding\n\n","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.706176Z","iopub.execute_input":"2024-10-29T09:19:04.706672Z","iopub.status.idle":"2024-10-29T09:19:04.736232Z","shell.execute_reply.started":"2024-10-29T09:19:04.706632Z","shell.execute_reply":"2024-10-29T09:19:04.734648Z"},"trusted":true},"execution_count":895,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nInt64Index: 14522 entries, 0 to 18395\nData columns (total 21 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Unnamed: 0     14522 non-null  int64  \n 1   Suburb         14522 non-null  object \n 2   Address        14522 non-null  object \n 3   Type           14522 non-null  object \n 4   Price          14522 non-null  float64\n 5   Method         14522 non-null  object \n 6   SellerG        14522 non-null  object \n 7   Date           14522 non-null  object \n 8   Distance       14522 non-null  float64\n 9   Postcode       14522 non-null  float64\n 10  Bedroom2       14522 non-null  float64\n 11  Bathroom       14522 non-null  float64\n 12  Car            14522 non-null  float64\n 13  Landsize       14522 non-null  float64\n 14  BuildingArea   14522 non-null  float64\n 15  YearBuilt      14522 non-null  float64\n 16  CouncilArea    14522 non-null  object \n 17  Lattitude      14522 non-null  float64\n 18  Longtitude     14522 non-null  float64\n 19  Regionname     14522 non-null  object \n 20  Propertycount  14522 non-null  float64\ndtypes: float64(12), int64(1), object(8)\nmemory usage: 2.4+ MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"From the list above we can see that there are still 6 object variables. So, we need to encode them to figure out their collinearity to the 'Price'.","metadata":{}},{"cell_type":"code","source":"x_df = df.drop('Price', axis=1)\ny_df = df.Price","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.737907Z","iopub.execute_input":"2024-10-29T09:19:04.738331Z","iopub.status.idle":"2024-10-29T09:19:04.748435Z","shell.execute_reply.started":"2024-10-29T09:19:04.738291Z","shell.execute_reply":"2024-10-29T09:19:04.746807Z"},"trusted":true},"execution_count":896,"outputs":[]},{"cell_type":"markdown","source":"## 1. Type","metadata":{}},{"cell_type":"code","source":"x_df['Type'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.750165Z","iopub.execute_input":"2024-10-29T09:19:04.750583Z","iopub.status.idle":"2024-10-29T09:19:04.768243Z","shell.execute_reply.started":"2024-10-29T09:19:04.750544Z","shell.execute_reply":"2024-10-29T09:19:04.766357Z"},"trusted":true},"execution_count":897,"outputs":[{"execution_count":897,"output_type":"execute_result","data":{"text/plain":"h    9970\nu    3316\nt    1236\nName: Type, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"dummy1 = pd.get_dummies(x_df['Type'])\nx_df = x_df.join(dummy1)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.770005Z","iopub.execute_input":"2024-10-29T09:19:04.770658Z","iopub.status.idle":"2024-10-29T09:19:04.786299Z","shell.execute_reply.started":"2024-10-29T09:19:04.770602Z","shell.execute_reply":"2024-10-29T09:19:04.784896Z"},"trusted":true},"execution_count":898,"outputs":[]},{"cell_type":"code","source":"x_df.drop('Type', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.788241Z","iopub.execute_input":"2024-10-29T09:19:04.7894Z","iopub.status.idle":"2024-10-29T09:19:04.803647Z","shell.execute_reply.started":"2024-10-29T09:19:04.789337Z","shell.execute_reply":"2024-10-29T09:19:04.802123Z"},"trusted":true},"execution_count":899,"outputs":[]},{"cell_type":"code","source":"x_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.805165Z","iopub.execute_input":"2024-10-29T09:19:04.805584Z","iopub.status.idle":"2024-10-29T09:19:04.839244Z","shell.execute_reply.started":"2024-10-29T09:19:04.805543Z","shell.execute_reply":"2024-10-29T09:19:04.837843Z"},"trusted":true},"execution_count":900,"outputs":[{"execution_count":900,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0      Suburb           Address Method SellerG       Date  \\\n0           1  Abbotsford      85 Turner St      S  Biggin  3/12/2016   \n1           2  Abbotsford   25 Bloomburg St      S  Biggin  4/02/2016   \n2           4  Abbotsford      5 Charles St     SP  Biggin  4/03/2017   \n3           5  Abbotsford  40 Federation La     PI  Biggin  4/03/2017   \n4           6  Abbotsford       55a Park St     VB  Nelson  4/06/2016   \n\n   Distance  Postcode  Bedroom2  Bathroom  ...  BuildingArea    YearBuilt  \\\n0       2.5    3067.0       2.0       1.0  ...    145.507647  1965.965948   \n1       2.5    3067.0       2.0       1.0  ...     79.000000  1900.000000   \n2       2.5    3067.0       3.0       2.0  ...    150.000000  1900.000000   \n3       2.5    3067.0       3.0       2.0  ...    145.507647  1965.965948   \n4       2.5    3067.0       3.0       1.0  ...    142.000000  2014.000000   \n\n   CouncilArea  Lattitude Longtitude             Regionname  Propertycount  h  \\\n0        Yarra   -37.7996   144.9984  Northern Metropolitan         4019.0  1   \n1        Yarra   -37.8079   144.9934  Northern Metropolitan         4019.0  1   \n2        Yarra   -37.8093   144.9944  Northern Metropolitan         4019.0  1   \n3        Yarra   -37.7969   144.9969  Northern Metropolitan         4019.0  1   \n4        Yarra   -37.8072   144.9941  Northern Metropolitan         4019.0  1   \n\n   t  u  \n0  0  0  \n1  0  0  \n2  0  0  \n3  0  0  \n4  0  0  \n\n[5 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Suburb</th>\n      <th>Address</th>\n      <th>Method</th>\n      <th>SellerG</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>...</th>\n      <th>BuildingArea</th>\n      <th>YearBuilt</th>\n      <th>CouncilArea</th>\n      <th>Lattitude</th>\n      <th>Longtitude</th>\n      <th>Regionname</th>\n      <th>Propertycount</th>\n      <th>h</th>\n      <th>t</th>\n      <th>u</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Abbotsford</td>\n      <td>85 Turner St</td>\n      <td>S</td>\n      <td>Biggin</td>\n      <td>3/12/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>145.507647</td>\n      <td>1965.965948</td>\n      <td>Yarra</td>\n      <td>-37.7996</td>\n      <td>144.9984</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Abbotsford</td>\n      <td>25 Bloomburg St</td>\n      <td>S</td>\n      <td>Biggin</td>\n      <td>4/02/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>79.000000</td>\n      <td>1900.000000</td>\n      <td>Yarra</td>\n      <td>-37.8079</td>\n      <td>144.9934</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>Abbotsford</td>\n      <td>5 Charles St</td>\n      <td>SP</td>\n      <td>Biggin</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>...</td>\n      <td>150.000000</td>\n      <td>1900.000000</td>\n      <td>Yarra</td>\n      <td>-37.8093</td>\n      <td>144.9944</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>Abbotsford</td>\n      <td>40 Federation La</td>\n      <td>PI</td>\n      <td>Biggin</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>...</td>\n      <td>145.507647</td>\n      <td>1965.965948</td>\n      <td>Yarra</td>\n      <td>-37.7969</td>\n      <td>144.9969</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>Abbotsford</td>\n      <td>55a Park St</td>\n      <td>VB</td>\n      <td>Nelson</td>\n      <td>4/06/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>142.000000</td>\n      <td>2014.000000</td>\n      <td>Yarra</td>\n      <td>-37.8072</td>\n      <td>144.9941</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 2. Method","metadata":{}},{"cell_type":"code","source":"df['Method'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.840908Z","iopub.execute_input":"2024-10-29T09:19:04.841357Z","iopub.status.idle":"2024-10-29T09:19:04.854902Z","shell.execute_reply.started":"2024-10-29T09:19:04.841317Z","shell.execute_reply":"2024-10-29T09:19:04.85326Z"},"trusted":true},"execution_count":901,"outputs":[{"execution_count":901,"output_type":"execute_result","data":{"text/plain":"S     9612\nSP    1845\nPI    1645\nVB    1321\nSA      99\nName: Method, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"dummy2 = pd.get_dummies(x_df['Method'])\nx_df = x_df.join(dummy2)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.857097Z","iopub.execute_input":"2024-10-29T09:19:04.858283Z","iopub.status.idle":"2024-10-29T09:19:04.872439Z","shell.execute_reply.started":"2024-10-29T09:19:04.858238Z","shell.execute_reply":"2024-10-29T09:19:04.871043Z"},"trusted":true},"execution_count":902,"outputs":[]},{"cell_type":"code","source":"x_df.drop('Method', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.87407Z","iopub.execute_input":"2024-10-29T09:19:04.874501Z","iopub.status.idle":"2024-10-29T09:19:04.892127Z","shell.execute_reply.started":"2024-10-29T09:19:04.874455Z","shell.execute_reply":"2024-10-29T09:19:04.890769Z"},"trusted":true},"execution_count":903,"outputs":[]},{"cell_type":"code","source":"x_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.894256Z","iopub.execute_input":"2024-10-29T09:19:04.894681Z","iopub.status.idle":"2024-10-29T09:19:04.92304Z","shell.execute_reply.started":"2024-10-29T09:19:04.894643Z","shell.execute_reply":"2024-10-29T09:19:04.921488Z"},"trusted":true},"execution_count":904,"outputs":[{"execution_count":904,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0      Suburb           Address SellerG       Date  Distance  \\\n0           1  Abbotsford      85 Turner St  Biggin  3/12/2016       2.5   \n1           2  Abbotsford   25 Bloomburg St  Biggin  4/02/2016       2.5   \n2           4  Abbotsford      5 Charles St  Biggin  4/03/2017       2.5   \n3           5  Abbotsford  40 Federation La  Biggin  4/03/2017       2.5   \n4           6  Abbotsford       55a Park St  Nelson  4/06/2016       2.5   \n\n   Postcode  Bedroom2  Bathroom  Car  ...             Regionname  \\\n0    3067.0       2.0       1.0  1.0  ...  Northern Metropolitan   \n1    3067.0       2.0       1.0  0.0  ...  Northern Metropolitan   \n2    3067.0       3.0       2.0  0.0  ...  Northern Metropolitan   \n3    3067.0       3.0       2.0  1.0  ...  Northern Metropolitan   \n4    3067.0       3.0       1.0  2.0  ...  Northern Metropolitan   \n\n   Propertycount  h  t  u  PI  S  SA  SP  VB  \n0         4019.0  1  0  0   0  1   0   0   0  \n1         4019.0  1  0  0   0  1   0   0   0  \n2         4019.0  1  0  0   0  0   0   1   0  \n3         4019.0  1  0  0   1  0   0   0   0  \n4         4019.0  1  0  0   0  0   0   0   1  \n\n[5 rows x 26 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Suburb</th>\n      <th>Address</th>\n      <th>SellerG</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>...</th>\n      <th>Regionname</th>\n      <th>Propertycount</th>\n      <th>h</th>\n      <th>t</th>\n      <th>u</th>\n      <th>PI</th>\n      <th>S</th>\n      <th>SA</th>\n      <th>SP</th>\n      <th>VB</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Abbotsford</td>\n      <td>85 Turner St</td>\n      <td>Biggin</td>\n      <td>3/12/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Abbotsford</td>\n      <td>25 Bloomburg St</td>\n      <td>Biggin</td>\n      <td>4/02/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>Abbotsford</td>\n      <td>5 Charles St</td>\n      <td>Biggin</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>Abbotsford</td>\n      <td>40 Federation La</td>\n      <td>Biggin</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>Abbotsford</td>\n      <td>55a Park St</td>\n      <td>Nelson</td>\n      <td>4/06/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>...</td>\n      <td>Northern Metropolitan</td>\n      <td>4019.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 26 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 3. Regionname","metadata":{}},{"cell_type":"code","source":"df['Regionname'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.92507Z","iopub.execute_input":"2024-10-29T09:19:04.92631Z","iopub.status.idle":"2024-10-29T09:19:04.940092Z","shell.execute_reply.started":"2024-10-29T09:19:04.926248Z","shell.execute_reply":"2024-10-29T09:19:04.938336Z"},"trusted":true},"execution_count":905,"outputs":[{"execution_count":905,"output_type":"execute_result","data":{"text/plain":"Southern Metropolitan         5102\nNorthern Metropolitan         3860\nWestern Metropolitan          3188\nEastern Metropolitan          1662\nSouth-Eastern Metropolitan     558\nEastern Victoria                63\nNorthern Victoria               50\nWestern Victoria                39\nName: Regionname, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"dummy3 = pd.get_dummies(x_df['Regionname'])\nx_df = x_df.join(dummy3)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.941682Z","iopub.execute_input":"2024-10-29T09:19:04.942101Z","iopub.status.idle":"2024-10-29T09:19:04.956447Z","shell.execute_reply.started":"2024-10-29T09:19:04.942062Z","shell.execute_reply":"2024-10-29T09:19:04.955093Z"},"trusted":true},"execution_count":906,"outputs":[]},{"cell_type":"code","source":"x_df.drop('Regionname', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.958462Z","iopub.execute_input":"2024-10-29T09:19:04.958874Z","iopub.status.idle":"2024-10-29T09:19:04.971696Z","shell.execute_reply.started":"2024-10-29T09:19:04.958839Z","shell.execute_reply":"2024-10-29T09:19:04.970297Z"},"trusted":true},"execution_count":907,"outputs":[]},{"cell_type":"code","source":"x_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:04.973763Z","iopub.execute_input":"2024-10-29T09:19:04.974238Z","iopub.status.idle":"2024-10-29T09:19:05.003026Z","shell.execute_reply.started":"2024-10-29T09:19:04.974176Z","shell.execute_reply":"2024-10-29T09:19:05.001784Z"},"trusted":true},"execution_count":908,"outputs":[{"execution_count":908,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0      Suburb           Address SellerG       Date  Distance  \\\n0           1  Abbotsford      85 Turner St  Biggin  3/12/2016       2.5   \n1           2  Abbotsford   25 Bloomburg St  Biggin  4/02/2016       2.5   \n2           4  Abbotsford      5 Charles St  Biggin  4/03/2017       2.5   \n3           5  Abbotsford  40 Federation La  Biggin  4/03/2017       2.5   \n4           6  Abbotsford       55a Park St  Nelson  4/06/2016       2.5   \n\n   Postcode  Bedroom2  Bathroom  Car  ...  SP  VB  Eastern Metropolitan  \\\n0    3067.0       2.0       1.0  1.0  ...   0   0                     0   \n1    3067.0       2.0       1.0  0.0  ...   0   0                     0   \n2    3067.0       3.0       2.0  0.0  ...   1   0                     0   \n3    3067.0       3.0       2.0  1.0  ...   0   0                     0   \n4    3067.0       3.0       1.0  2.0  ...   0   1                     0   \n\n  Eastern Victoria  Northern Metropolitan  Northern Victoria  \\\n0                0                      1                  0   \n1                0                      1                  0   \n2                0                      1                  0   \n3                0                      1                  0   \n4                0                      1                  0   \n\n   South-Eastern Metropolitan  Southern Metropolitan  Western Metropolitan  \\\n0                           0                      0                     0   \n1                           0                      0                     0   \n2                           0                      0                     0   \n3                           0                      0                     0   \n4                           0                      0                     0   \n\n   Western Victoria  \n0                 0  \n1                 0  \n2                 0  \n3                 0  \n4                 0  \n\n[5 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Suburb</th>\n      <th>Address</th>\n      <th>SellerG</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>...</th>\n      <th>SP</th>\n      <th>VB</th>\n      <th>Eastern Metropolitan</th>\n      <th>Eastern Victoria</th>\n      <th>Northern Metropolitan</th>\n      <th>Northern Victoria</th>\n      <th>South-Eastern Metropolitan</th>\n      <th>Southern Metropolitan</th>\n      <th>Western Metropolitan</th>\n      <th>Western Victoria</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Abbotsford</td>\n      <td>85 Turner St</td>\n      <td>Biggin</td>\n      <td>3/12/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Abbotsford</td>\n      <td>25 Bloomburg St</td>\n      <td>Biggin</td>\n      <td>4/02/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>Abbotsford</td>\n      <td>5 Charles St</td>\n      <td>Biggin</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>Abbotsford</td>\n      <td>40 Federation La</td>\n      <td>Biggin</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>Abbotsford</td>\n      <td>55a Park St</td>\n      <td>Nelson</td>\n      <td>4/06/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 33 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 4. SellerG","metadata":{}},{"cell_type":"code","source":"df['SellerG'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.004715Z","iopub.execute_input":"2024-10-29T09:19:05.00516Z","iopub.status.idle":"2024-10-29T09:19:05.020045Z","shell.execute_reply.started":"2024-10-29T09:19:05.00512Z","shell.execute_reply":"2024-10-29T09:19:05.018745Z"},"trusted":true},"execution_count":909,"outputs":[{"execution_count":909,"output_type":"execute_result","data":{"text/plain":"Nelson           1598\nJellis           1457\nhockingstuart    1249\nBarry            1013\nMarshall          717\n                 ... \nJohnston            1\nHayeswinckle        1\nClairmont           1\niProperty           1\nPoint               1\nName: SellerG, Length: 283, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\n# Initialize LabelEncoder\nlabel_encoder = LabelEncoder()\n\n# Encode the 'Category' column\nx_df['Seller_Encoded'] = label_encoder.fit_transform(x_df['SellerG'])\n\n# Drop the column\nx_df.drop('SellerG', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.021573Z","iopub.execute_input":"2024-10-29T09:19:05.022061Z","iopub.status.idle":"2024-10-29T09:19:05.040383Z","shell.execute_reply.started":"2024-10-29T09:19:05.022016Z","shell.execute_reply":"2024-10-29T09:19:05.039009Z"},"trusted":true},"execution_count":910,"outputs":[]},{"cell_type":"code","source":"x_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.042082Z","iopub.execute_input":"2024-10-29T09:19:05.042526Z","iopub.status.idle":"2024-10-29T09:19:05.07366Z","shell.execute_reply.started":"2024-10-29T09:19:05.042484Z","shell.execute_reply":"2024-10-29T09:19:05.07217Z"},"trusted":true},"execution_count":911,"outputs":[{"execution_count":911,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0      Suburb           Address       Date  Distance  Postcode  \\\n0           1  Abbotsford      85 Turner St  3/12/2016       2.5    3067.0   \n1           2  Abbotsford   25 Bloomburg St  4/02/2016       2.5    3067.0   \n2           4  Abbotsford      5 Charles St  4/03/2017       2.5    3067.0   \n3           5  Abbotsford  40 Federation La  4/03/2017       2.5    3067.0   \n4           6  Abbotsford       55a Park St  4/06/2016       2.5    3067.0   \n\n   Bedroom2  Bathroom  Car  Landsize  ...  VB  Eastern Metropolitan  \\\n0       2.0       1.0  1.0     202.0  ...   0                     0   \n1       2.0       1.0  0.0     156.0  ...   0                     0   \n2       3.0       2.0  0.0     134.0  ...   0                     0   \n3       3.0       2.0  1.0      94.0  ...   0                     0   \n4       3.0       1.0  2.0     120.0  ...   1                     0   \n\n  Eastern Victoria  Northern Metropolitan  Northern Victoria  \\\n0                0                      1                  0   \n1                0                      1                  0   \n2                0                      1                  0   \n3                0                      1                  0   \n4                0                      1                  0   \n\n   South-Eastern Metropolitan  Southern Metropolitan  Western Metropolitan  \\\n0                           0                      0                     0   \n1                           0                      0                     0   \n2                           0                      0                     0   \n3                           0                      0                     0   \n4                           0                      0                     0   \n\n   Western Victoria  Seller_Encoded  \n0                 0              23  \n1                 0              23  \n2                 0              23  \n3                 0              23  \n4                 0             163  \n\n[5 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Suburb</th>\n      <th>Address</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>...</th>\n      <th>VB</th>\n      <th>Eastern Metropolitan</th>\n      <th>Eastern Victoria</th>\n      <th>Northern Metropolitan</th>\n      <th>Northern Victoria</th>\n      <th>South-Eastern Metropolitan</th>\n      <th>Southern Metropolitan</th>\n      <th>Western Metropolitan</th>\n      <th>Western Victoria</th>\n      <th>Seller_Encoded</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Abbotsford</td>\n      <td>85 Turner St</td>\n      <td>3/12/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>202.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Abbotsford</td>\n      <td>25 Bloomburg St</td>\n      <td>4/02/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>156.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>Abbotsford</td>\n      <td>5 Charles St</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>134.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>Abbotsford</td>\n      <td>40 Federation La</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>94.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>Abbotsford</td>\n      <td>55a Park St</td>\n      <td>4/06/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>120.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>163</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 33 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 5. Suburb","metadata":{}},{"cell_type":"code","source":"x_df['Suburb'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.075256Z","iopub.execute_input":"2024-10-29T09:19:05.075721Z","iopub.status.idle":"2024-10-29T09:19:05.091086Z","shell.execute_reply.started":"2024-10-29T09:19:05.075678Z","shell.execute_reply":"2024-10-29T09:19:05.089448Z"},"trusted":true},"execution_count":912,"outputs":[{"execution_count":912,"output_type":"execute_result","data":{"text/plain":"Richmond          280\nBentleigh East    274\nPreston           251\nBrunswick         249\nEssendon          234\n                 ... \nRockbank            1\nBacchus Marsh       1\nUpwey               1\nRiddells Creek      1\nMonbulk             1\nName: Suburb, Length: 316, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Encode the 'Category' column\nx_df['Suburb_Encoded'] = label_encoder.fit_transform(x_df['Suburb'])\n\n# Drop the column\nx_df.drop('Suburb', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.092862Z","iopub.execute_input":"2024-10-29T09:19:05.09328Z","iopub.status.idle":"2024-10-29T09:19:05.110062Z","shell.execute_reply.started":"2024-10-29T09:19:05.093233Z","shell.execute_reply":"2024-10-29T09:19:05.108641Z"},"trusted":true},"execution_count":913,"outputs":[]},{"cell_type":"code","source":"x_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.111746Z","iopub.execute_input":"2024-10-29T09:19:05.112181Z","iopub.status.idle":"2024-10-29T09:19:05.141234Z","shell.execute_reply.started":"2024-10-29T09:19:05.112139Z","shell.execute_reply":"2024-10-29T09:19:05.139909Z"},"trusted":true},"execution_count":914,"outputs":[{"execution_count":914,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0           Address       Date  Distance  Postcode  Bedroom2  \\\n0           1      85 Turner St  3/12/2016       2.5    3067.0       2.0   \n1           2   25 Bloomburg St  4/02/2016       2.5    3067.0       2.0   \n2           4      5 Charles St  4/03/2017       2.5    3067.0       3.0   \n3           5  40 Federation La  4/03/2017       2.5    3067.0       3.0   \n4           6       55a Park St  4/06/2016       2.5    3067.0       3.0   \n\n   Bathroom  Car  Landsize  BuildingArea  ...  Eastern Metropolitan  \\\n0       1.0  1.0     202.0    145.507647  ...                     0   \n1       1.0  0.0     156.0     79.000000  ...                     0   \n2       2.0  0.0     134.0    150.000000  ...                     0   \n3       2.0  1.0      94.0    145.507647  ...                     0   \n4       1.0  2.0     120.0    142.000000  ...                     0   \n\n  Eastern Victoria  Northern Metropolitan  Northern Victoria  \\\n0                0                      1                  0   \n1                0                      1                  0   \n2                0                      1                  0   \n3                0                      1                  0   \n4                0                      1                  0   \n\n   South-Eastern Metropolitan  Southern Metropolitan  Western Metropolitan  \\\n0                           0                      0                     0   \n1                           0                      0                     0   \n2                           0                      0                     0   \n3                           0                      0                     0   \n4                           0                      0                     0   \n\n   Western Victoria  Seller_Encoded  Suburb_Encoded  \n0                 0              23               0  \n1                 0              23               0  \n2                 0              23               0  \n3                 0              23               0  \n4                 0             163               0  \n\n[5 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Address</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>BuildingArea</th>\n      <th>...</th>\n      <th>Eastern Metropolitan</th>\n      <th>Eastern Victoria</th>\n      <th>Northern Metropolitan</th>\n      <th>Northern Victoria</th>\n      <th>South-Eastern Metropolitan</th>\n      <th>Southern Metropolitan</th>\n      <th>Western Metropolitan</th>\n      <th>Western Victoria</th>\n      <th>Seller_Encoded</th>\n      <th>Suburb_Encoded</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>85 Turner St</td>\n      <td>3/12/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>202.0</td>\n      <td>145.507647</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>25 Bloomburg St</td>\n      <td>4/02/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>156.0</td>\n      <td>79.000000</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>5 Charles St</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>134.0</td>\n      <td>150.000000</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>40 Federation La</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>94.0</td>\n      <td>145.507647</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>55a Park St</td>\n      <td>4/06/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>120.0</td>\n      <td>142.000000</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>163</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 33 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 6. Council Aera","metadata":{}},{"cell_type":"code","source":"x_df['CouncilArea'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.143101Z","iopub.execute_input":"2024-10-29T09:19:05.144392Z","iopub.status.idle":"2024-10-29T09:19:05.156158Z","shell.execute_reply.started":"2024-10-29T09:19:05.144314Z","shell.execute_reply":"2024-10-29T09:19:05.154784Z"},"trusted":true},"execution_count":915,"outputs":[{"execution_count":915,"output_type":"execute_result","data":{"text/plain":"Boroondara           1367\nMoreland             1345\nMoonee Valley        1146\nGlen Eira             980\nStonnington           840\nMaribyrnong           774\nYarra                 729\nPort Phillip          716\nBanyule               713\nDarebin               692\nBayside               600\nMelbourne             525\nBrimbank              519\nHobsons Bay           492\nMonash                476\nWhitehorse            421\nManningham            391\nKingston              341\nHume                  306\nWhittlesea            279\nWyndham               155\nMaroondah             135\nKnox                  123\nMelton                108\nFrankston              92\nGreater Dandenong      85\nCasey                  62\nNillumbik              60\nYarra Ranges           27\nMacedon Ranges         11\nCardinia               10\nUnavailable             1\nMoorabool               1\nName: CouncilArea, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Encode the 'Category' column\nx_df['Council_Encoded'] = label_encoder.fit_transform(x_df['CouncilArea'])\n\n# Drop the column\nx_df.drop('CouncilArea', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.158148Z","iopub.execute_input":"2024-10-29T09:19:05.158624Z","iopub.status.idle":"2024-10-29T09:19:05.181168Z","shell.execute_reply.started":"2024-10-29T09:19:05.158582Z","shell.execute_reply":"2024-10-29T09:19:05.17978Z"},"trusted":true},"execution_count":916,"outputs":[]},{"cell_type":"code","source":"x_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.182574Z","iopub.execute_input":"2024-10-29T09:19:05.182946Z","iopub.status.idle":"2024-10-29T09:19:05.211314Z","shell.execute_reply.started":"2024-10-29T09:19:05.182912Z","shell.execute_reply":"2024-10-29T09:19:05.209813Z"},"trusted":true},"execution_count":917,"outputs":[{"execution_count":917,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0           Address       Date  Distance  Postcode  Bedroom2  \\\n0           1      85 Turner St  3/12/2016       2.5    3067.0       2.0   \n1           2   25 Bloomburg St  4/02/2016       2.5    3067.0       2.0   \n2           4      5 Charles St  4/03/2017       2.5    3067.0       3.0   \n3           5  40 Federation La  4/03/2017       2.5    3067.0       3.0   \n4           6       55a Park St  4/06/2016       2.5    3067.0       3.0   \n\n   Bathroom  Car  Landsize  BuildingArea  ...  Eastern Victoria  \\\n0       1.0  1.0     202.0    145.507647  ...                 0   \n1       1.0  0.0     156.0     79.000000  ...                 0   \n2       2.0  0.0     134.0    150.000000  ...                 0   \n3       2.0  1.0      94.0    145.507647  ...                 0   \n4       1.0  2.0     120.0    142.000000  ...                 0   \n\n   Northern Metropolitan  Northern Victoria  South-Eastern Metropolitan  \\\n0                      1                  0                           0   \n1                      1                  0                           0   \n2                      1                  0                           0   \n3                      1                  0                           0   \n4                      1                  0                           0   \n\n   Southern Metropolitan  Western Metropolitan  Western Victoria  \\\n0                      0                     0                 0   \n1                      0                     0                 0   \n2                      0                     0                 0   \n3                      0                     0                 0   \n4                      0                     0                 0   \n\n   Seller_Encoded  Suburb_Encoded  Council_Encoded  \n0              23               0               31  \n1              23               0               31  \n2              23               0               31  \n3              23               0               31  \n4             163               0               31  \n\n[5 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Address</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>BuildingArea</th>\n      <th>...</th>\n      <th>Eastern Victoria</th>\n      <th>Northern Metropolitan</th>\n      <th>Northern Victoria</th>\n      <th>South-Eastern Metropolitan</th>\n      <th>Southern Metropolitan</th>\n      <th>Western Metropolitan</th>\n      <th>Western Victoria</th>\n      <th>Seller_Encoded</th>\n      <th>Suburb_Encoded</th>\n      <th>Council_Encoded</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>85 Turner St</td>\n      <td>3/12/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>202.0</td>\n      <td>145.507647</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>25 Bloomburg St</td>\n      <td>4/02/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>156.0</td>\n      <td>79.000000</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>5 Charles St</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>134.0</td>\n      <td>150.000000</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>40 Federation La</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>94.0</td>\n      <td>145.507647</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>55a Park St</td>\n      <td>4/06/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>120.0</td>\n      <td>142.000000</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>163</td>\n      <td>0</td>\n      <td>31</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 33 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 7. Address","metadata":{}},{"cell_type":"code","source":"x_df['Address'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.213179Z","iopub.execute_input":"2024-10-29T09:19:05.213778Z","iopub.status.idle":"2024-10-29T09:19:05.235582Z","shell.execute_reply.started":"2024-10-29T09:19:05.21372Z","shell.execute_reply":"2024-10-29T09:19:05.23389Z"},"trusted":true},"execution_count":918,"outputs":[{"execution_count":918,"output_type":"execute_result","data":{"text/plain":"28 Blair St         3\n36 Aberfeldie St    3\n5 Charles St        3\n14 Arthur St        3\n1/1 Clarendon St    3\n                   ..\n6/21 Wynnstay Rd    1\n1/38 Donald St      1\n3 Arkle St          1\n35 Chomley St       1\n33 Freeman St       1\nName: Address, Length: 14310, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Encode the 'Category' column\nx_df['Address_Encoded'] = label_encoder.fit_transform(x_df['Address'])\n\n# Drop the column\nx_df.drop('Address', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.23727Z","iopub.execute_input":"2024-10-29T09:19:05.237766Z","iopub.status.idle":"2024-10-29T09:19:05.294536Z","shell.execute_reply.started":"2024-10-29T09:19:05.237722Z","shell.execute_reply":"2024-10-29T09:19:05.293186Z"},"trusted":true},"execution_count":919,"outputs":[]},{"cell_type":"code","source":"x_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.296065Z","iopub.execute_input":"2024-10-29T09:19:05.296499Z","iopub.status.idle":"2024-10-29T09:19:05.325126Z","shell.execute_reply.started":"2024-10-29T09:19:05.29646Z","shell.execute_reply":"2024-10-29T09:19:05.323626Z"},"trusted":true},"execution_count":920,"outputs":[{"execution_count":920,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0       Date  Distance  Postcode  Bedroom2  Bathroom  Car  \\\n0           1  3/12/2016       2.5    3067.0       2.0       1.0  1.0   \n1           2  4/02/2016       2.5    3067.0       2.0       1.0  0.0   \n2           4  4/03/2017       2.5    3067.0       3.0       2.0  0.0   \n3           5  4/03/2017       2.5    3067.0       3.0       2.0  1.0   \n4           6  4/06/2016       2.5    3067.0       3.0       1.0  2.0   \n\n   Landsize  BuildingArea    YearBuilt  ...  Northern Metropolitan  \\\n0     202.0    145.507647  1965.965948  ...                      1   \n1     156.0     79.000000  1900.000000  ...                      1   \n2     134.0    150.000000  1900.000000  ...                      1   \n3      94.0    145.507647  1965.965948  ...                      1   \n4     120.0    142.000000  2014.000000  ...                      1   \n\n   Northern Victoria  South-Eastern Metropolitan  Southern Metropolitan  \\\n0                  0                           0                      0   \n1                  0                           0                      0   \n2                  0                           0                      0   \n3                  0                           0                      0   \n4                  0                           0                      0   \n\n   Western Metropolitan  Western Victoria  Seller_Encoded  Suburb_Encoded  \\\n0                     0                 0              23               0   \n1                     0                 0              23               0   \n2                     0                 0              23               0   \n3                     0                 0              23               0   \n4                     0                 0             163               0   \n\n   Council_Encoded  Address_Encoded  \n0               31            13701  \n1               31             6369  \n2               31            10506  \n3               31             9659  \n4               31            11343  \n\n[5 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Date</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>BuildingArea</th>\n      <th>YearBuilt</th>\n      <th>...</th>\n      <th>Northern Metropolitan</th>\n      <th>Northern Victoria</th>\n      <th>South-Eastern Metropolitan</th>\n      <th>Southern Metropolitan</th>\n      <th>Western Metropolitan</th>\n      <th>Western Victoria</th>\n      <th>Seller_Encoded</th>\n      <th>Suburb_Encoded</th>\n      <th>Council_Encoded</th>\n      <th>Address_Encoded</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>3/12/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>202.0</td>\n      <td>145.507647</td>\n      <td>1965.965948</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n      <td>13701</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>4/02/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>156.0</td>\n      <td>79.000000</td>\n      <td>1900.000000</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n      <td>6369</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>134.0</td>\n      <td>150.000000</td>\n      <td>1900.000000</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n      <td>10506</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>4/03/2017</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>94.0</td>\n      <td>145.507647</td>\n      <td>1965.965948</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n      <td>9659</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>4/06/2016</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>120.0</td>\n      <td>142.000000</td>\n      <td>2014.000000</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>163</td>\n      <td>0</td>\n      <td>31</td>\n      <td>11343</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 33 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 8. Date","metadata":{}},{"cell_type":"code","source":"# Convert 'Date' column to datetime format\nx_df['Date'] = pd.to_datetime(x_df['Date'], errors='coerce')\n\n# Extract day, month, and year from the date\nx_df['Day'] = x_df['Date'].dt.day\nx_df['Month'] = x_df['Date'].dt.month\nx_df['Year'] = x_df['Date'].dt.year\n\n# Delete 'Date' column\nx_df.drop('Date', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.328433Z","iopub.execute_input":"2024-10-29T09:19:05.329547Z","iopub.status.idle":"2024-10-29T09:19:05.355011Z","shell.execute_reply.started":"2024-10-29T09:19:05.329498Z","shell.execute_reply":"2024-10-29T09:19:05.353655Z"},"trusted":true},"execution_count":921,"outputs":[]},{"cell_type":"code","source":"x_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.356581Z","iopub.execute_input":"2024-10-29T09:19:05.35697Z","iopub.status.idle":"2024-10-29T09:19:05.386649Z","shell.execute_reply.started":"2024-10-29T09:19:05.356928Z","shell.execute_reply":"2024-10-29T09:19:05.3849Z"},"trusted":true},"execution_count":922,"outputs":[{"execution_count":922,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0  Distance  Postcode  Bedroom2  Bathroom  Car  Landsize  \\\n0           1       2.5    3067.0       2.0       1.0  1.0     202.0   \n1           2       2.5    3067.0       2.0       1.0  0.0     156.0   \n2           4       2.5    3067.0       3.0       2.0  0.0     134.0   \n3           5       2.5    3067.0       3.0       2.0  1.0      94.0   \n4           6       2.5    3067.0       3.0       1.0  2.0     120.0   \n\n   BuildingArea    YearBuilt  Lattitude  ...  Southern Metropolitan  \\\n0    145.507647  1965.965948   -37.7996  ...                      0   \n1     79.000000  1900.000000   -37.8079  ...                      0   \n2    150.000000  1900.000000   -37.8093  ...                      0   \n3    145.507647  1965.965948   -37.7969  ...                      0   \n4    142.000000  2014.000000   -37.8072  ...                      0   \n\n   Western Metropolitan  Western Victoria  Seller_Encoded  Suburb_Encoded  \\\n0                     0                 0              23               0   \n1                     0                 0              23               0   \n2                     0                 0              23               0   \n3                     0                 0              23               0   \n4                     0                 0             163               0   \n\n   Council_Encoded  Address_Encoded  Day  Month  Year  \n0               31            13701   12      3  2016  \n1               31             6369    2      4  2016  \n2               31            10506    3      4  2017  \n3               31             9659    3      4  2017  \n4               31            11343    6      4  2016  \n\n[5 rows x 35 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Distance</th>\n      <th>Postcode</th>\n      <th>Bedroom2</th>\n      <th>Bathroom</th>\n      <th>Car</th>\n      <th>Landsize</th>\n      <th>BuildingArea</th>\n      <th>YearBuilt</th>\n      <th>Lattitude</th>\n      <th>...</th>\n      <th>Southern Metropolitan</th>\n      <th>Western Metropolitan</th>\n      <th>Western Victoria</th>\n      <th>Seller_Encoded</th>\n      <th>Suburb_Encoded</th>\n      <th>Council_Encoded</th>\n      <th>Address_Encoded</th>\n      <th>Day</th>\n      <th>Month</th>\n      <th>Year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>202.0</td>\n      <td>145.507647</td>\n      <td>1965.965948</td>\n      <td>-37.7996</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n      <td>13701</td>\n      <td>12</td>\n      <td>3</td>\n      <td>2016</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>156.0</td>\n      <td>79.000000</td>\n      <td>1900.000000</td>\n      <td>-37.8079</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n      <td>6369</td>\n      <td>2</td>\n      <td>4</td>\n      <td>2016</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>134.0</td>\n      <td>150.000000</td>\n      <td>1900.000000</td>\n      <td>-37.8093</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n      <td>10506</td>\n      <td>3</td>\n      <td>4</td>\n      <td>2017</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>94.0</td>\n      <td>145.507647</td>\n      <td>1965.965948</td>\n      <td>-37.7969</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23</td>\n      <td>0</td>\n      <td>31</td>\n      <td>9659</td>\n      <td>3</td>\n      <td>4</td>\n      <td>2017</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>2.5</td>\n      <td>3067.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>120.0</td>\n      <td>142.000000</td>\n      <td>2014.000000</td>\n      <td>-37.8072</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>163</td>\n      <td>0</td>\n      <td>31</td>\n      <td>11343</td>\n      <td>6</td>\n      <td>4</td>\n      <td>2016</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 35 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"x_df.info()","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.388443Z","iopub.execute_input":"2024-10-29T09:19:05.388853Z","iopub.status.idle":"2024-10-29T09:19:05.408792Z","shell.execute_reply.started":"2024-10-29T09:19:05.388806Z","shell.execute_reply":"2024-10-29T09:19:05.407515Z"},"trusted":true},"execution_count":923,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nInt64Index: 14522 entries, 0 to 18395\nData columns (total 35 columns):\n #   Column                      Non-Null Count  Dtype  \n---  ------                      --------------  -----  \n 0   Unnamed: 0                  14522 non-null  int64  \n 1   Distance                    14522 non-null  float64\n 2   Postcode                    14522 non-null  float64\n 3   Bedroom2                    14522 non-null  float64\n 4   Bathroom                    14522 non-null  float64\n 5   Car                         14522 non-null  float64\n 6   Landsize                    14522 non-null  float64\n 7   BuildingArea                14522 non-null  float64\n 8   YearBuilt                   14522 non-null  float64\n 9   Lattitude                   14522 non-null  float64\n 10  Longtitude                  14522 non-null  float64\n 11  Propertycount               14522 non-null  float64\n 12  h                           14522 non-null  uint8  \n 13  t                           14522 non-null  uint8  \n 14  u                           14522 non-null  uint8  \n 15  PI                          14522 non-null  uint8  \n 16  S                           14522 non-null  uint8  \n 17  SA                          14522 non-null  uint8  \n 18  SP                          14522 non-null  uint8  \n 19  VB                          14522 non-null  uint8  \n 20  Eastern Metropolitan        14522 non-null  uint8  \n 21  Eastern Victoria            14522 non-null  uint8  \n 22  Northern Metropolitan       14522 non-null  uint8  \n 23  Northern Victoria           14522 non-null  uint8  \n 24  South-Eastern Metropolitan  14522 non-null  uint8  \n 25  Southern Metropolitan       14522 non-null  uint8  \n 26  Western Metropolitan        14522 non-null  uint8  \n 27  Western Victoria            14522 non-null  uint8  \n 28  Seller_Encoded              14522 non-null  int64  \n 29  Suburb_Encoded              14522 non-null  int64  \n 30  Council_Encoded             14522 non-null  int64  \n 31  Address_Encoded             14522 non-null  int64  \n 32  Day                         14522 non-null  int64  \n 33  Month                       14522 non-null  int64  \n 34  Year                        14522 non-null  int64  \ndtypes: float64(11), int64(8), uint8(16)\nmemory usage: 2.9 MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Correlation Matrix","metadata":{}},{"cell_type":"code","source":"def tree_based_feature_importance(x_df,y_df):\n    from sklearn.ensemble import RandomForestClassifier\n    # create the random forest model\n    model = RandomForestClassifier()\n\n    # fit the model to start training.\n    model.fit(x_df, y_df)\n\n    # get the importance of the resulting features.\n    importances = model.feature_importances_\n\n    # create a data frame for visualization.\n    final_df = pd.DataFrame({\"Features\": x_df.columns, \"Importances\":importances})\n    final_df.set_index('Importances')\n\n    # sort in descending order \n    final_df = final_df.sort_values('Importances',ascending=False)\n    \n    #visualising feature importance\n    pd.Series(model.feature_importances_, index=x_df.columns).nlargest(6).plot(kind='barh')  \n    return final_df","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.410278Z","iopub.execute_input":"2024-10-29T09:19:05.410782Z","iopub.status.idle":"2024-10-29T09:19:05.419629Z","shell.execute_reply.started":"2024-10-29T09:19:05.410741Z","shell.execute_reply":"2024-10-29T09:19:05.418088Z"},"trusted":true},"execution_count":924,"outputs":[]},{"cell_type":"code","source":"feature_importance = tree_based_feature_importance(x_df,y_df)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T09:19:05.421245Z","iopub.execute_input":"2024-10-29T09:19:05.421671Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"display(feature_importance)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From the graph above we can see that top correlated variables are Building Area, Landsize, Year Built, Seller, Distance, and Suburb.\n\n\nThat's the variables that we need to consider when we are going to buy a home. Thank you very much.","metadata":{}}]}